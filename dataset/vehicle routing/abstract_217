Password: Many applications of the classical vehicle routing problem involve pick-up and delivery services between the depot and peripheral locations (warehouses, stores, stations). This paper studies an important version of the vehicle routing problem with pick-up and delivery (the so-called delivery and backhaul problem): delivery in our case refers to transportation of goods from the depot to customers, and pick-up (backhaul) refers to shipment from customers to the depot. The objective is to find a set of vehicle routes that service customers such that vehicle capacity is not violated and the total distance traveled is minimized. Tour partitioning heuristics for solving the capacitated vehicle routing problem are based on breaking a basic tour into disjoint segments served by different vehicles. This idea is adapted for solving the delivery and backhaul problem. Two heuristics that focus on efficient utilization of vehicles’ capacities are introduced, analyzed and tested numerically. 1. Introduction In the classic vehicle routing problem (VRP), a set of delivery customers with known demands is to be serviced by a fleet of vehicles from a single distribution center. Vehicles have identical capacities and they all start and end their tours at the central depot. The objective is to minimize the total distance covered by the entire fleet. The solution to VRP consists of an optimal partition of demand points and a set of traveling salesman tours. Many applications of VRP involve pick-up and delivery services between the depot and peripheral locations (warehouses, stores, stations). ‘Delivery’ refers to transportation of goods from the depot to customers, and ‘pick-up’ means shipment in the opposite direction (to the depot). This version of VRP is referred to, throughout the paper, as the pick-up delivery problem (PDP). In the literature this problem is also known as the vehicle routing problem with backhaul (VRPB); see, for example, Golden and Assad [1] . Casco et al. [2] define the objective of PDP (VRPB) as follows: “…find a set of vehicle routes that services the delivery and backhaul customers such that vehicle capacity is not violated and the total distance traveled is minimized”. The basic version of the single depot capacitated VRP (also known as CVRP) is a pure delivery (pick-up) problem, and has been studied extensively in the literature (see Bodin et al. [3] , Golden and Assad [1] and Federgruen and Simchi-Levi [4] and references cited therein). Vehicle routing with mixed pick-up and delivery has received less attention (Bodin et al., chapter 4 [3] , Casco et al. [2] , Mosheiov [5] , Anily and Mosheiov [6] ). In the general mixed pick-up delivery problem, deliveries occur between any two locations in the system. PDP as formulated above, is a special case in which all deliveries occur between the central warehouse and customers’ locations only. Here, precedence relations are simpler than in the general case: if goods are to be delivered from location i to location j , then either i or j is the central warehouse. Although PDP involves both pick-up and delivery, it is fairly similar to the basic VRP, and this similarity will be used extensively throughout the paper. PDP arises in a wide variety of commercial service companies. The grocery industry is a major case in point. Here supermarkets serve as delivery points, and their suppliers, such as poultry processors or vegetables and fruit wholesalers, are the pick-up points. The U.S. grocery industry has saved 160 million dollars a year since 1982 by allowing mixed pick-up/delivery tours (Casco et al. [2] ). Among other applications studied in the literature pick-up and delivery routing are found for quality stores (Yano et al. [7] ), pick-up and delivery for ocean-borne transportation (Stott and Douglas [8] ), and bus transportation of children with pick-up and delivery (Mosheiov [5] ). Solving PDP is also useful for general mixed pick-up/delivery routing problems, that operate under a policy by which all transactions are performed through a central depot. Thus, a delivery from location i to location j is divided into two segments: one from i to the depot, and the other which may be carried out on a later date, from the depot to j . In the process of delivering goods picked-up earlier, and simultaneously picking-up current shipments, service companies face PDP type problems. Hence, a feasible solution to a general precedence-relation pick-up delivery problem is obtained by solving two consecutive PDPs. This approach appears to be easier to manage, and enables treatment of a wider range of applications. In general, vehicle routes of the optimal PDP solution may be significantly different from those of the optimal VRP solution. Traveling along the shortest (traveling salesman) tours may cause capacity violation, and therefore one needs to find the shortest feasible pick-up delivery tour (PDT) for each vehicle. Clearly, this task in itself is at least as hard as solving the traveling salesman problem (TSP). (The single-vehicle version of PDP was recently studied by Mosheiov [5] , and Anily and Mosheiov [6] , who introduced and analyzed several simple and efficient heuristics.) Consequently, solving PDP is at least as hard as the NP-hard (Lenstra and Rinnooy Kan [9] ) VRP. Hence, it is necessary to develop good, polynomially bounded heuristics. This paper focuses on developing such heuristic methods. Two heuristics of a ‘tour partitioning’ type are suggested, that is based on breaking a traveling salesman tour through all customer locations (“basic tour”), into disjoint segments, where each segment is served by a different vehicle. A heuristic of this type for solving VRP, called “iterated tour partitioning” (ITP), was initially introduced by Haimovich and Rinnooy Kan [10] and later modified by Altinkemer and Gavish [11] . The worst case bound of the ITP heuristic was shown to be tight by Li and Simchi-Levi [12] . Another variant of the tour partitioning heuristic was introduced by Beasley [13] . His algorithm optimally partitions the basic tour into a set of feasible routes, by transforming the problem into a shortest path problem. The author also uses ITP to solve PDPs. A lower bound on the optimal cost (slightly different than the one introduced and analyzed in the above mentioned papers for the VRP case) is introduced, and it is shown that ITP has a bounded worst case error, although not as tight as in the VRP case. Although it seems to perform quite well when used to solve PDP, ITP does not enable each vehicle to take full advantage of vehicle-capacity; see as follows. Hence, two new tour-partitioning heuristics are introduced: “exhaustive iterated tour partitioning” (EITP), and “full capacity iterated tour partitioning” (FCITP). In EITP every vehicle travels along the basic tour as far as possible, that is until it reaches a capacity violation. (Capacity violation means that a fully loaded vehicle arrives at a pick-up customer or a vehicle with no more goods to deliver arrives at a delivery customer.) Then the vehicle returns to the depot and a different vehicle begins its tour with the customer that created a capacity violation. In FCITP every vehicle serves the maximum number of both pick-up and delivery customers by skipping locations on the basic tour that create a capacity violation. Further, it may move in both directions along its segment of the basic tour, that is, it may return and serve a customer that previously had caused acapacity violation. Based on numerical tests, these heuristics perform much better than ITP. In all prior papers dealing with PDP, deliveries receive higher priority than pick-ups. Evidently because in many applications, deliveries are performed with the customer in mind (delayed deliveries imply a lower level of service), whereas pick-ups are basically made with an eye for the profits of the service company. Many companies also tend to avoid pick-ups before completing deliveries even when no capacity violation is involved, because of the inconvenience and extra cost involved in rearranging on-board loads. Therefore in some studies (Deif and Bodin [14] , Goetschalckx and Horsley [15] , Yano et al. [7] ), pick-ups are postponed until after all deliveries have been completed. In other studies (Golden et al. [16] , Casco et al. [2] ), deliveries are allowed between pick-ups but the total number of pick-up points is kept below 10–20% of the total number of locations to be visited. This latter version is solved by heuristics based on insertion of backhaul points into basic delivery tours. The cost associated with each insertion contains a penalty term proportional to the current load or to the number of delivery customers still to be visited on this tour. Thus, pick-up points which can be postponed to the end of the tour are preferred. The tour partitioning approach is not restricted by any of the above. Pick-up points do not have low priority and their number is not confined to a limited percentage of the total number of points. In fact, tour partitioning heuristics are expected to perform better when the number of pick-up and delivery points are more or less equal, in which case capacities are utilized more efficiently. The author is aware, however, that this approach may involve tours with a large number of alternations between pick-ups and deliveries, that is, a frequent rearrangement of on board load. This may not be appropriate for some applications. The paper is organized as follows. In Section 2 an exact formulation for PDP is given. In Section 3 a lower bound on the optimal solution is developed. Section 4 provides a worst-case analysis for the ITP heuristic. In 5  and  6 two new tour-partitioning heuristics are introduced and analyzed. The last section compares the heuristics by extensive numerical tests. 2. PDP formulation A relatively economical formulation for VRP in terms of the number of integer variables, is the commodity-flow based formulation (Garvin et al. [17] , Magnanti [18] ). An extension of this formulation to PDP is shown below. The following notation is used: G ( V , A ) is a symmetric graph. Warehouse and customer locations are represented as nodes in G . C ij denotes the distance between nodes i and j . It is assumed that the distance matrix { C ij } satisfies the triangle inequality. P : Set of pick-up locations. D : Set of delivery locations. V c = P ∪ D . N p =| P |: Number of pick-up locations. N d =| D |: Number of delivery locations. N=N p + N d : Total number of (customer) locations. 0: Depot location. (Thus, V=V c ∪{0}, and |  V |= N +1). p i : Demand at pick-up location i ; i =1,…, N p .