Password: This article focuses on the mechanism of evaluating solution neighborhoods, an algorithmic aspect which plays a crucial role on the efficiency of local-search based approaches. In specific, it presents a strategy for reducing the computational complexity required for applying local search to tackle various combinatorial optimization problems. The value of this contribution is two-fold. It helps practitioners design efficient local search implementations, and it facilitates the application of robust commercial local search-based algorithms to practical instances of very large size. The central rationale underlying the proposed complexity reduction strategy is straightforward: when a local search operator is applied to a given solution, only a limited part of this solution is modified. Thus, to exhaustively examine the neighborhood of the new solution, only the tentative moves that refer to the modified solution part have to be evaluated. To reduce the complexity of neighborhood evaluation, the static move descriptor (SMD) data structures are introduced, which encode local search moves in a systematic and solution independent manner. The proposed strategy is applied to the vehicle routing problem (VRP) which is of high importance both from the practical and theoretical viewpoints. The use of the SMD concept, for encoding three commonly applied quadratic local search operators, results into a VRP local search method which exhibits an almost linearithmic complexity in respect to the instance size. Furthermore, exploiting the SMD representation of tentative moves, a metaheuristic strategy is proposed, which is aimed at diversifying the conducted search via a simple penalization policy. The proposed metaheuristic was tested on various large and very large scale VRP benchmark instances. It produced fine results, and managed to improve several best known solutions. The method was also executed on real-world instances of 3000 customers, the data of which reflects the actual geographic distribution of customers within four major cities. Keywords Combinatorial optimization ; Local search ; Computational complexity ; Vehicle routing 1. Introduction Business operations involve a wide variety of highly complex optimization problems, practical medium and large scale instances of which cannot be solved to optimality within manageable computational times. To deal with such real-life problem instances, the decision maker should be focused on approximate optimization methods, which are capable of producing satisfactory solutions at the expense of reasonable computational effort. Numerous effective approximate optimization methods are based on the local search strategy [1] . Pure local search methods were introduced in the 1960s for improving solutions obtained by simple constructive heuristics, while during the last two decades local search is incorporated as the basic optimization component of general purpose algorithmic strategies called metaheuristics . These strategies aim at intelligently guiding the local search process towards diverse trajectories of the solution space in order to escape from premature local optima and obtain high quality solutions. Some of the most effective and commercially used paradigms of local search metaheuristic strategies are tabu search [2] , guided local search [3] and variable neighborhood search [4] , which are briefly described later. The generic local search scheme starts from a candidate solution and then iteratively transits to a new solution which belongs to the neighborhood of the current one. To implement these transitions, a systematic relation must be determined to link every solution with its neighboring ones. The neighborhood of a given solution consists of every solution generated from it, by performing (usually simple) modifications. The simplicity of these modifications is an objective mainly for computational reasons: (a) the population of generated solutions ( neighborhood cardinality ) should be limited within manageable levels, and (b) the evaluation of the neighboring solution quality should require constant time (independent of the instance size). In the general case, to pass from one solution to the subsequent one, the neighborhood involved is exhaustively examined, and the method implements the move towards the highest quality neighboring solution, if it improves the current one. The computational time required per iteration is mainly determined by the neighborhood cardinality and is bounded by a polynomial function of the instance size. Local search methods terminate when no neighboring solutions improve the quality of the current one, or in other words, the current solution is locally optimal in respect to the neighborhood structure under consideration. The local search scheme described above is a myopic method doomed to be trapped to the first local optimum encountered. To overcome this limitation, metaheuristic local search strategies make use of additional mechanisms aimed at driving the local search process out of local optima and towards higher-quality solutions. One of the most known local search metaheuristic strategies is tabu search (TS), which makes use of memory components to avoid getting trapped in local optima. As earlier mentioned, the generic local search implements the move towards the best quality neighbor. This deterministic criterion causes cycling phenomena to occur (looping between the same solutions) when the local optimum is reached. To eliminate cycling, attributes of recently performed moves are declared tabu, so that during neighborhood investigation, moves with tabu attributes are discarded. Guided local search (GLS) is another effective metaheuristic approach which works by controlling the objective function of the problem examined, so that local optima are overcome. The basic principle of GLS is to use penalization terms for local optimum solution characteristics which are not likely to belong to high quality solutions. Another effective local search metaheuristic method is the variable neighborhood search (VNS). The central idea of VNS is to systematically change the search operators employed, to exploit the fact that a local optimum with respect to one neighborhood structure is not necessarily so for another [4] . In specific, let N k ( k =1,…, k max ) be the neighborhood structures to be used in the search, and x be the initial solution to be improved. A single iteration of the basic VNS scheme starts off with k =1, and is executed until k = k max . It involves three steps: (a) randomly generate a solution x ′= N k ( x ), so that cycling is avoided; (b) apply some local search method to solution x ′, and let x ″ be the local optimum obtained; (c) if solution x ″ is better than x , set x = x ″, and k =1, otherwise set k = k +1. The computational complexity of every local search based method is defined by the number of calculations required for exhaustively evaluating the neighborhood of a candidate solution. Although this algorithmic aspect plays a crucial role in the overall efficiency of local search approaches, researchers do not usually focus on the way in which solution neighborhoods are explored. This lack of detailed information on neighborhood evaluation does not help practitioners to design efficient local search algorithms. At this very point lies the purpose of this paper, which presents a strategy for reducing the computational complexity to perform local search to various practical combinatorial optimization problems such as routing, ordering, and scheduling variants. The central idea for achieving this complexity reduction is straightforward: when moving from one solution to another, only a limited part of the solution characteristics is modified. Thus, to examine the next solution neighborhood, only the tentative moves that are related to these previously modified solution elements have to be evaluated from the beginning. On the contrary, moves that refer to unaffected solution characteristics have already been evaluated during previous neighborhood explorations, and therefore, if appropriately recorded, their recalculation is unnecessary. To implement this idea, we introduce the static move descriptors , which as their name suggests, are static (solution independent) entities that describe every possible move towards new solutions. These move descriptors are stored into special priority queue structures which provide constant time minimum-retrieval and insertion, and logarithmic time update capabilities. To improve clarity of exposition, we present the local search complexity reduction strategy by applying it to the vehicle routing problem (VRP), which is a highly complex combinatorial problem with significant commercial importance. More specifically, we tackle the aforementioned problem by employing a blend of some commonly used quadratic complexity ( O ( n 2 ), where n is the instance size) local search operators. The application of the proposed complexity reduction scheme leads to a VRP local search method with almost linearithmic complexity in respect to the instance size. Reducing the complexity of such local search operators is of great importance, as it allows them to be incorporated within robust commercial local search metaheuristics for effectively dealing with very large scale practical instances. Furthermore, we propose a simple penalization mechanism specially designed for the VRP, which takes advantage of the static move descriptor entities, and is aimed at diversifying the search process. The overall algorithmic development is tested on large and very large-scale test instances with very promising results both in terms of the solution quality, and computational speed. Apart from the VRP benchmark instances, we also executed the proposed methodology on four real-world instances involving 3000 customers. These instances, introduced in the present paper, were provided by a logistics company and contain the actual coordinates of customer locations within four major Greek cities. The remainder of the present article is organized as follows: Section 2 presents the VRP model. It also provides information on VRP local search operators, and surveys some of the most effective VRP local search based metaheuristics. In Section 3 , the proposed static move descriptor concept is introduced, followed by the detailed presentation of the proposed complexity reduction strategy and its application to the VRP. Section 4 describes a VRP metaheuristic algorithm based on the static move descriptor concept, whereas the computational results obtained by the proposed metaheuristic are provided in Section 5 . Finally, Section 6 concludes the paper and offers some further research directions. 2. The vehicle routing problem The standard version of the vehicle routing problem (VRP) is a central problem in the area of operations management, as it models a wide variety of practical distribution systems, which, in turn, play a key role in the global business environment. Nearly every activity in the field of logistics can be interpreted as a generalization of the standard VRP version, which, as Li et al. mention [5] , is easy to state and difficult to solve.