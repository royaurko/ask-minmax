  This paper presents a real-value version of particle swarm optimization (PSO) for solving the open vehicle routing problem (OVRP) that is a well-known combinatorial optimization problem. In OVRP a vehicle does not return to the depot after servicing the last customer on a route. A particular decoding method is proposed for implementing PSO for OVRP. In the decoding method, a vector of the customer’s position is constructed in descending order. Then each customer is assigned to a route with taking into account feasibility conditions. Finally one-point move has been applied on constructed routes that seem promising to result in a better solution. Experimental evaluations on benchmark data sets demonstrate the competitiveness of the proposed algorithm. ► We introduce a solution method based on PSO algorithm to solve OVRP. The used decoding procedure takes into account solution feasibility. We examine improvement methods to get better solution quality. The approach effectiveness checked by using benchmark data sets. Keywords Particle swarm optimization ; Open vehicle routing problem ; Decoding method 1. Introduction In the basic vehicle routing problem (VRP), we generate a sequence of routes which a homogeneous fleet of vehicles in at a single depot service all customers and the total distance traveled by the fleet is minimized. Each customer has a fixed demand and is serviced by exactly one visit of a single vehicle. Each vehicle must leave from and return to the depot and it has a known capacity and possibly a route-length restriction that limits the maximum distance it can travel. In the open vehicle routing problem, a vehicle does not return to the depot after servicing the last customer on a route. In addition, we need to find the minimum number of vehicles required to service all of customers. This means that the cost of an additional vehicle is larger than any savings that may be get by reduction of the total travel time. The important difference between the OVRP and VRP is that in the OVRP each route is a Hamiltonian path but in VRP each route is a Hamiltonian cycle so the optimal solution for the OVRP can be quite different from the VRP. The problem of findings the best Hamiltonian path for each set of customers that assigned to a vehicle is NP-hard, hence the OVRP is also NP-hard ( Fleszar, Osman, & Hindi, 2009 ). The open vehicle routing is usually used in a company which either does not own a vehicle fleet at all, or its fleet is inappropriate or inadequate to satisfy the demand of its customers. Thus, the company has to contract all or part of its distribution services to external transporter. These contractors have their own vehicles and pay their own vehicle costs. Fu, Egles, and Li (2005) described two areas of application. The first application includes planning train services, starting or ending at the Channel Tunnel. The second is about planning a set of school bus routes where in the morning pupils are picked up at various locations and brought to school, and the routes are reversed to take pupils home in the afternoon. Bodin, Golden, Assad, and Ball (1983) described a problem of express airmail distribution in the USA, which is an open pick-up and delivery VRP with capacity constraints and time windows. The VRP has been studied extensively, but few works address the OVRP. During the last decade, tabu search, deterministic annealing, large neighborhood search and branch-and-cut, among other methods, have been successfully applied to the OVRP. Although exact methods can obtain optimal solutions, the computational time required to solve adequately large problem instances is expensively. Therefore the most of researchers focus on designing meta-heuristic approaches to produce high quality near optimum solutions with reasonable computational time ( Repoussis, Tarantilis, Braysy, & Ioannou, 2010 ). Bodin et al. (1983) used the well-known savings heuristic of Clarke and Wright to solve OVRP with delivery and pickup time windows. Sariklis and Powell (2007) solve the OVRP associated capacity constraints on vehicles with cluster first route second. Their heuristic has two phases. In the first phase, they construct clusters of customers taking vehicle capacity into account and then balance and improve the clusters by reassigning customers. In the second phase, open routes are generated by solving a minimum spanning tree problem. They used penalties to modify the solution and iteratively convert infeasible solutions to feasible one. Brandao (2004) developed a tabu search algorithm to solve OVRP. Initial solutions were generated by using the nearest neighbor heuristic and the K-tree method. Each solution was submitted to an unstringing and stringing procedure to improve each route. In his algorithm, there are only two types of trial moves. First is an insert move and second is a swap move that exchanges two customers on two different routes. Tarantilis, Ioannou, Kiranoudis, and Prastacos (2004) developed backtracking adaptive threshold accepting that is a deterministic variant of simulated annealing in which a threshold value T is specified as the upper bound on the amount of objective function increase allowed. The notion behind the method is applying a backtracking policy for the threshold when no acceptances of feasible solutions are encountered during the search. Pisinger and Ropke (2005) developed an adaptive large neighborhood search approach, which contained a set of large neighborhoods that compete to modify the current solution. In any iteration, two algorithms were selected to remove and repair the current solution. Several removal and insertion heuristics can be used to expand and strengthen the search. Letchford, Lysgaard, and Eglese (2007) developed a branch and cut solution method for solving the OVRP. This method is applied on both small and medium scale OVRP instances. Repoussis et al. (2010) proposed a hybrid evolution strategy for solving OVRP. Their method manipulates a population of individuals at each generation. This paper shows how to solve efficiently OVRP using continues version of PSO. The proposed algorithm examines capacity restriction in the decoding procedure and employ gbest and nbest neighborhood in velocity equation. The paper is organized as follows: Section 2 reviews the OVRP definition and mathematical formulation. Section 3 describes the proposed PSO algorithm for solving OVRP. This section also includes decoding method. Section 4 discussed the computational experiment of the proposed PSO on a benchmark data set. Finally, Section 5 concludes the result. 2. Problem definition and notation Let n be the number of customers, V  = {0, 1, 2, … ,  n } the set of customers and the depot. The depot is identified by 0. Let q i be demand of customer i  ϵ  V  − {0}, and Q denotes the capacity of each vehicle. We assume that, we have at most K vehicles. Also there is a cost c ij associated with the sequence from customer i to customer j . It is also assumed that c ij is equivalent measures with appropriate adjustments. Furthermore, a cost w k is relevant to the activation of vehicle k . The OVRP is to find the minimum number of vehicles and the route of each vehicle, such that all customer demands are satisfied, while each customer is visited by exactly one vehicle, and for each vehicle the capacity is not exceeded. The mathematical formulation of the OVRP requires two groups of variables. The first group models the sequence in which vehicles visit customers, and is defined as follows: x ij k = 1 if customer i precedes customer j visited by vehicle k 0 otherwise The second group denoted by z k is a binary variable defined as follows: z k = 1 if vehicle k is active 0 otherwise Furthermore, a vehicle is considered active when it services at least one customer. With these parameters and variables, the OVRP formulation is shown as problem 1.