  The usual column generation model for a Vehicle Routing Problem involves an elementary shortest-path subproblem. The worst-case complexity of the known algorithms for this problem being too high, the elementary-path constraint is usually relaxed. Indeed, as each customer must be visited exactly once, the two problems with and without the elementary-path constraint have the same optimal integer solutions. In this article, we propose one theoretical and several practical improvements to the algorithm for elementary paths. We obtain better lower bounds and pruning of the search tree, and these improvements allowed us to find an exact solution to 17 instances of the Solomon benchmark suite which were previously open. Keywords Vehicle routing ; Branch-and-Price ; Elementary shortest path 1. Introduction Many academic publications have been dedicated already to Vehicle Routing Problems (VRPs). The problems from this family mimic the real-life logistic problem of minimizing the cost of distributing goods from a warehouse to a set of destinations by means of several vehicles. VRP data are a set of nodes to be visited, a set of vehicles initially located at some special node (called the depot ), and that must get back to it at the end of the route, and a distance scheme, associating to each pair of nodes the distance to travel from one to the other. The objective is to find a set of routes (i.e., ordered sequences of nodes) for the vehicles, covering all the nodes and doing so with the minimal total length travelled. The simplest extension uses a fixed capacity to limit the quantity of goods deliverable by a specific vehicle. Other extensions include a minimum and maximum time for each node constraining the moment at which it can be visited. Several other extensions are commented in the literature: minimization of the number of vehicles before total distance, use of several depots. In this paper, we worked on the Vehicle Routing Problem with Time Windows (VRPTW). Among the studies of VRPs, two categories can be identified. On the one hand, heuristic methods are used to find solutions of acceptable quality quickly, and are usually based on local search techniques [1] , [2] , [3]  and  [4] sometimes in hybrid cooperation with constraint programming [5] , [6] , [7] , [8]  and  [9] . On the other hand, exact methods focus on finding an optimal solution. Column Generation techniques are part of those exact methods [10] , [11] , [12]  and  [13] . The original linear program is decomposed by means of the Dantzig–Wolfe decomposition into a linear restricted master problem and a pricing subproblem. The master problem then becomes a partitioning problem with binary variables, and the pricing subproblem is a constrained shortest-path problem in charge of generating new promising columns. In the original VRP, each customer has to be visited once. Hence, the routes should not include cycles, so that the subproblem of the decomposed version that should be solved is the Elementary Shortest-Path Problem with Resource Constraints and Time Windows (ESPRCTW). This cycle constraint is usually relaxed and instead, a Shortest Path with Resource Constraints and Time Windows (SPRCTW) is used. In that context, it can be shown that the optimal integer solution of this column generation model with the cycle constraint relaxed will contain only elementary routes. The main reason for relaxing this cycle constraint is that more powerful algorithms are available to solve the SPRCTW than to solve the ESPRCTW. In fact, pseudo-polynomial algorithms are available for the SPRCTW, whereas in contrast, it has been shown that ESPRCTW is NP-hard [14] . To our knowledge, an ESPRCTW algorithm for VRP is proposed only in [15] . In [16] , the elementary sub-problem is solved using constraint programming. In this article, we present several advantages of ESPRCTW, such as the better quality of the lower bounds obtained with the relaxed restricted master problem, and we present several techniques to reduce the impact in efficiency of taking the cycle constraint into account. We give some promising results obtained on a well-known benchmark suite. The article is organized as follows. In the next section, we formally introduce the VRP as well as its linear programming model, and we show the model resulting from the Dantzig–Wolfe decomposition. In Section 3 , we present our method, introducing the column generation scheme and the elementary shortest-path subproblem. Then, in Section 4 , we discuss the possible differences in quality between our bounds and those obtained by other methods. In Section 5 , we present our ESPRCTW implementation along with several practical enhancements. Finally, we present computational results in Section 6 .