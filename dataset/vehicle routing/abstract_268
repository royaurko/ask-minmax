Password: In the distribution of goods from a central depot to geographically dispersed customers happens quite frequently that some customers, called linehauls, receive goods from that depot while others, named backhauls, send goods to it. This situation is described and studied by the vehicle routing problem with backhauls. In this paper we present a new tabu search algorithm that starting from pseudo-lower bounds was able to match almost all the best published solutions and to find many new best solutions, for a large set of benchmark problems. Keywords Vehicle routing ; Backhauls ; Tabu search ; Lower bound 1. Introduction A company that daily delivers (or collects) goods to a set of customers geographically spread, with a given demand, using a fleet of vehicles that start from a central depot and return to it after the service, faces a problem that is most usually called the vehicle routing problem (VRP). The resolution of this problem consists in defining the best assignment of the customers to the vehicles and the sequence in which they are served in order minimise the total travelling cost. When both delivery and collection of goods are required we have a particular case that is named the vehicle routing problem with backhauls (VRPB). The delivery and the pickup, or backhaul, customers could be taken separately originating two distinct VRPs, but if both types of customers are serviced in the same route significant savings can be obtained. In the literature there are many descriptions of applications of the VRPB as, for example, in the article written by Casco et al. (1988) . Among other examples, these authors describe the following two real-world cases: a company that distributes coffee, juice, etc. to its customers and brings back the raw materials to its factory; another company that sells fire extinguishers, delivers to its customers new extinguishers and picks up old unusable extinguishers or those that require service at the depot. In practice we may find VRPBs with many different characteristics like the percentage of backhaul customers, if a vehicle travels multiple trips per day, if a vehicle can service backhauls only, etc. However, usually, the VRPBs are divided into three categories according to the order of the deliveries and pickups: (i) The pickups can be made before the deliveries. (ii) The pickups can be made before the deliveries and each customer can be simultaneously a delivery and a pickup point. (iii) In a route, first are served the linehaul customers and then the backhauls. No routes are allowed containing only backhauls, but a route can contain linehaul customers only. All these types of VRPBs can appear in practice, but the first two are less frequent because it is usually difficult to re-arrange the goods in a partially loaded vehicle. Due to this reason, they have been also less studied. Some authors that have investigated the first two types are Golden et al., 1985 , Casco et al., 1988  and  Salhi and Nagy, 1999 . This research is about the third type of VRPB (although the same algorithms, with a few modifications, can be applied to the other two types and even to the case when routes containing only backhauls are allowed) which has been studied by several authors like the following ones: Deif and Bodin, 1984 , Goetschalckx and Jacobs-Blecha, 1989 , Goetschalckx and Jacobs-Blecha, 1993 , Toth and Vigo, 1997 , Toth and Vigo, 1999 , Mingozzi et al., 1999  and  Osman and Wassan, 2002 . Deif and Bodin (1984) used the classical Clarke and Wright savings algorithm with a modification in the definition of the savings. Goetschalckx and Jacobs-Blecha (1989) , applied the concept of spacefilling curves to develop heuristics for the VRPB. Goetschalckx and Jacobs-Blecha (1993) introduced a new heuristic based on the generalised assignment problem for the formation of the clusters of customers that originate the routes. They have shown that this new algorithm performs better than those published before. Toth and Vigo, 1997  and  Mingozzi et al., 1999 created two different mathematical formulations of the VRPB and they have been able to solve exactly problems with up to 100 customers. Toth and Vigo (1997) tackled both the symmetric and asymmetric VRPB, while Mingozzi et al. (1999) solved only the symmetric case. In spite of the quality of these exact methods, the VRPB is NP-hard and therefore approximate algorithms are still required for solving most of the VRPBs encountered in practice. So far, the best published heuristic for the VRPB is due to Toth and Vigo (1999) , which takes advantage of the information given by a Lagrangian relaxation, proposed by the same authors to obtain lower bounds for the exact resolution, in the formation of clusters of customers. The clusters are then converted into feasible routes and, in the end, intra-route and inter-route post-optimisation procedures are applied to improve the quality of the solution. More recently, Osman and Wassan (2002) published a tabu search metaheuristic which, on average, produces even better solutions than Toth and Vigo’s (1999) algorithm, but requires much more computing time. They use two heuristics for generating the initial solutions: one that combines savings and insertion and another that combines savings and assignment. In their tabu method, the neighbourhood is defined by the interchange of one or two consecutive customers between two routes. On the other hand, the tabu tenure is defined dynamically during the search by a reactive procedure. The VRPB studied in this research is defined as follows. Let G  = ( V ,  A ) be a complete undirected network where V  = {0} ∪  L  ∪  B is a set of vertices and A  = {( i ,  j ) :  i , j  ∈  V } is the set of arcs, and to each arc ( i ,  j ) is associated a nonnegative cost (distance) c ij , with c ij  =  c ji for each i , j  ∈  V , such that i  ≠  j and c ii  = +∞ for each i  ∈  V . The subsets L  = {1, 2, … ,  n } and B  = { n  + 1,  n  + 2,  n  +  m },represent, respectively, the linehaul and the backhaul customers, and 0 represents the depot. The total number of customers is represented by N . In the depot there are K identical vehicles with a capacity Q . Each customer i  ∈  L  ∪  B requires a given quantity q i to be delivered ( i  ∈  L ) or collected ( i  ∈  B ). The number of vehicles is defined as K  ⩾ max{ K L ,  K B }, where K L and K B is the minimum number of vehicles needed to serve all the linehaul and backhaul customers, respectively. The resolution of the VRPB consists in finding a set of routes, starting and ending at the depot, with a minimum total cost, given by the sum of the arcs belonging to the routes, such that (i) Each vehicle travels exactly one route. (ii) In a route, the linehaul are served before the backhaul customers (these are called the precedence constraints) and no route can contain only backhaul customers. Because of these conditions, we consider that the cost c ji  =  c 0 j  =  R , for each j  ∈  B and i  ∈  L , where R is a very large constant (this cost plays an important role in the tabu search method for discovering feasible solutions). (iii) The total demand of all the customers, considering the linehauls and the backhauls separately, on a route must not exceed the vehicle capacity. (iv) Each customer is visited just once by one of the vehicles, and its requirements must be completely fulfilled. This paper is organised as follows. In Section 2 we describe how the initial solutions have been obtained. In Section 3 we present the tabu search algorithm, starting with the definition of its main features and then showing its global structure. In Section 4 we present the computational experiments, used to test the quality of the algorithm, and in the last section we draw the conclusions. 2. The initial solutions In this paper we use two methods for obtaining the initial solutions, both of which explore the affinities between the VRP and the VRPB (i) A method based on the fact that a VRPB route, with linehauls and backhauls, is constituted by two Hamiltonian paths linked together. Since, as explained below, this corresponds to the resolution of two separate open VRPs we will call it open initial solution . (ii) A method based on a lower bound for the VRP, which will be called K-tree initial solution , because we use K -trees for the calculation of that lower bound. 2.1. The open initial solution In a VRPB we have two distinct sets of customers: linehauls and backhauls. Therefore, we can consider each set of customers separately and solve two VRPs and, in the end, join together pairs of routes, one from each VRP, in order to obtain a VRPB solution. However, there is another kind of VRP with a closer structure to the VRPB, which is called open VRP (OVRP), because in the end of the route the vehicles are not required to return to the depot. This way, a better alternative is to solve two separate OVRPs and, in the end, link each Hamiltonian path of the linehaul solution with another Hamiltonian path of the backhaul solution, until no backhaul path remains unlinked. In the following we describe in detail the algorithm used to obtain the open initial solution. Step 1 . Solve two distinct OVRPs, one for each set of customers. The OVRP resolution is composed of two phases: initial phase (construction of the routes of the initial solution) and improvement phase . In the initial phase a nearest neighbour heuristic, that creates a set of routes sequentially, is used. Each route is started with the unrouted customer nearest from the depot, then is added the nearest admissible customer from this one, and so on. A customer is said to be admissible if its insertion in the route does not exceed the capacity of the vehicle. When no customer is admissible in the route under construction a new route is started or the process stops if all the customers are already routed. In the improvement phase , the tabu search algorithm ( phase I ) described in Section 3 is applied. In this phase, for the linehaul OVRP, the objective is to minimise the total distance travelled by the vehicles, considering a fixed number of vehicles (routes), while for the backhaul OVRP, the first objective is to minimise the number of routes and the second one is to minimise the total distance of the routes.