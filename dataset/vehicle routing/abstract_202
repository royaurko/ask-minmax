This paper introduces an artificial bee colony heuristic for solving the capacitated vehicle routing problem. The artificial bee colony heuristic is a swarm-based heuristic, which mimics the foraging behavior of a honey bee swarm. An enhanced version of the artificial bee colony heuristic is also proposed to improve the solution quality of the original version. The performance of the enhanced heuristic is evaluated on two sets of standard benchmark instances, and compared with the original artificial bee colony heuristic. The computational results show that the enhanced heuristic outperforms the original one, and can produce good solutions when compared with the existing heuristics. These results seem to indicate that the enhanced heuristic is an alternative to solve the capacitated vehicle routing problem. ► We study the capacitated vehicle routing problem. ► We introduce a metaheuristic based on the artificial bee colony framework. ► We also propose an enhancement of the artificial bee colony heuristic. ► Results show that the enhanced heuristic outperforms the original one. Keywords Routing ; Artificial bee colony ; Metaheuristic 1. Introduction The capacitated vehicle routing problem (CVRP) (i.e., the classical vehicle routing problem) is defined on a complete undirected graph G  = ( V ,  E ), where V  = {0,1, … ,  n } is the vertex set and E  = {( i ,  j ): i ,  j  ∈  V ,  i  <  j } is the edge set. Vertices 1, … ,  n represent customers; each customer i is associated with a nonnegative demand d i and a nonnegative service time s i . Vertex 0 represents the depot at which a fleet of m homogeneous vehicles of capacity Q is based. The fleet size is treated as a decision variable. Each edge ( i ,  j ) is associated a nonnegative traveling cost or travel time c ij . The CVRP is to determine m vehicle routes such that: (a) every route starts and ends at the depot, (b) every customer is visited exactly once, (c) the total demand of any vehicle route does not exceed Q , and (d) the total cost of all vehicle routes is minimized. In some cases, the CVRP also imposes duration constraints where the duration of any vehicle route must not exceed a given bound L . Mathematical formulations of the CVRP can be found in Toth and Vigo (2002) . As the CVRP is a NP-hard problem, only instances of small sizes can be solved to optimality using exact solution methods (e.g., Toth and Vigo, 2002  and  Baldacci et al., 2010 ), and this might not even be possible if it is required to use limited amount of computing time. As a result of this, heuristic methods are used to find good, but not necessarily guaranteed optimal solutions using reasonable amount of computing time. During the past two decades, an increasing number of publications on heuristic approaches have been developed to tackle the CVRP. The work can be categorized into evolutionary algorithms ( Baker and Ayechew, 2003 , Berger and Barkoui, 2003 , Prins, 2004 , Mester and Bräysy, 2007 , Prins, 2009  and  Nagata and Bräysy, 2009 ), ant colony optimization ( Bullnheimer et al., 1999 , Reimann et al., 2004  and  Yu et al., 2009 ), simulated annealing ( Osman, 1993  and  Lin et al., 2009 ), tabu search ( Taillard, 1993 , Gendreau et al., 1994 , Rego and Roucairol, 1996 , Rego, 1998 , Cordeau et al., 2001 , Toth and Vigo, 2003  and  Derigs and Kaiser, 2007 ), path-relinking ( Ho and Gendreau, 2006 ), adaptive memory procedures ( Rochat and Taillard, 1995 , Tarantilis and Kiranoudis, 2002  and  Tarantilis, 2005 ), large neighborhood search ( Ergun et al., 2006  and  Pisinger and Ropke, 2007 ), variable neighborhood search ( Kytöjoki et al., 2007  and  Chen et al., 2010 ), deterministic annealing ( Golden et al., 1998  and  Li et al., 2005 ), honey-bees mating optimization ( Marinakis et al., 2010 ), particle swarm optimization ( Ai and Kachitvichyanukul, 2009 ) and hybrid Clarke and Wright’s savings heuristic ( Juan et al., 2010 ). Some of the above CVRP heuristics are based on previously developed heuristics. In the following we will mention some of the relationships. Rochat and Taillards (1995) adaptive memory procedure used the idea of genetic algorithms of combining solutions to construct new solutions and employed the tabu search of Taillard (1993) as an improvement procedure. Tarantilis (2005) had a similar framework as Tarantilis and Kiranoudis (2002) (which is a variant of the idea proposed by Rochat and Taillard (1995) ), but is different in that it does not rely on probability as in Tarantilis and Kiranoudis (2002) and also uses a more sophisticated improvement procedure. The Unified tabu search ( Cordeau et al., 2001 ) and the tabu search used by Ho and Gendreau (2006) contain some of the features found in Taburoute ( Gendreau et al., 1994 ); infeasible solutions are considered by extending the objective function with a penalty function and the use of continuous diversification. Granular tabu search ( Toth and Vigo, 2003 ) restricts the neighborhood size by removing edges from the graph that are unlikely to appear in an optimal solution. Later, other researchers have also applied this idea on their CVRP heuristics (e.g., Li et al., 2005 , Mester and Bräysy, 2007  and  Chen et al., 2010 ). For extensive surveys on VRP metaheuristics, the reader is referred to Gendreau et al., 2002 , Cordeau et al., 2005  and  Gendreau et al., 2008 . While the above heuristics have been widely used and successfully applied to solve the CVRP for several years, artificial bee colony (ABC) is a fairly new approach introduced just a few years ago by Karaboga (2005) , but has not yet been applied to solve the CVRP. However, ABC has been applied to solve other problems with great success ( Baykasoğlu et al., 2007 , Kang et al., 2009 , Karaboga, 2009 , Karaboga and Basturk, 2007 , Karaboga and Basturk, 2008 , Karaboga and Ozturk, 2009  and  Singh, 2009 ). It is worthwhile to evaluate the performance of the ABC algorithm for solving the CVRP. In this paper, we evaluate the performance of the ABC heuristic using classical benchmark instances. An enhanced version of ABC heuristic is also proposed to improve the performance of the basic ABC heuristic for solving the CVRP. Computational results show that the enhanced ABC heuristic can produce much better solutions than the basic one, and the computation time of the enhanced ABC has slightly increased. The results obtained by the enhanced ABC heuristic are also competitive to those obtained from other metaheuristics. The paper is organized as follows. In Section 2 , we give a review of the basic ABC algorithm. Refinements of the basic ABC algorithm and how they are applied to the CVRP are presented in Section 3 . Experimental results showing the improvements in the performance of the enhanced ABC algorithm are presented in Section 4 . Finally, Section 5 concludes the paper. 2. Artificial bee colony algorithm The ABC algorithm belongs to a class of evolutionary algorithms that are inspired by the intelligent behavior of the honey bees in finding nectar sources around their hives. This class of metaheuristics has only started to receive attention recently. Different variations of bee algorithms under various names have been proposed to solve combinatorial problems. But in all of them, some common search strategies are applied; that is, complete or partial solutions are considered as food sources and the groups of bees try to exploit the food sources in the hope of finding good quality nectar (i.e., high quality solutions) for the hive. In addition, bees communicate between themselves about the search space and the food sources by performing a waggle dance. In the ABC algorithm, the bees are divided into three types: employed bees, onlookers and scouts. Employed bees are responsible for exploiting available food sources and gathering required information. They also share the information with the onlookers, and the onlookers select existing food sources to be further explored. When the food source is abandoned by its employed bee, the employed bee becomes a scout and starts to search for a new food source in the vicinity of the hive. The abandonment happens when the quality of the food source is not improved after performing a maximum allowable number of iterations.