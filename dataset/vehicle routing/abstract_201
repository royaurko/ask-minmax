  A vehicle routing problem (VRP) with time constraint is one of the important problems in distribution and transportation. Thus the generic VRP and its practical extensions are discussed in great detail in the literatures. In the VRP, the service of a customer must start and finish within a given time interval. The objective of this problem is to minimize the cost of servicing the set of customers without being tardy or exceeding the capacity or travel time of the vehicles. In this research we concentrated on developing a GA–TSP model by improving the genetic algorithm (GA) operators and the initial population. For the computational purpose, we developed a GUI (graphic user interface)-type computer program according to the proposed method. The computational results show that the proposed method is very effective on a set of standard test problems and it can be potentially useful in solving the VRPs. Keywords Vehicle routing problem ; Genetic algorithm ; Heuristics This paper is concerned with a vehicle routing problem (VRP) with time window constrained based on an improved genetic algorithm (GA). Generally a simple GA is composed of three operators which are applied sequentially to the current population of chromosomes interactively generation after generation. These three operators are reproduction, crossover and mutation. In this research, we propose an extended GA, for TSP-type problem by improving the search process for population of solutions and operators such as crossover and mutation ( Franklin Liu & Shen, 1999 ). The crossover mechanism of this improved method is based on edge-2 recombination, reciprocal exchange mutation and inversion ( Whitley, Starkweather, & Shaner, 1990 ). This research consists of two parts as follows: Part 1: improving the GA operators Creating progress of initial random population of GA Improving GA operators: crossover, mutation Part 2: application of GA TSP-type problem Development of TSP program Test and validation. The proposed method was coded and validated for accuracy and various computational tests were performed by sample problems with variations of problem nodes from 10 to 99. The test results are compared with that of existing methods and it was known that the proposed method is potentially efficient for VRP. The two parts of this research is shown in Fig. 1 . Fig. 1.  2.1. Modifications in crossover This paper describes modified features of crossover against premature convergence and better solution applied to genetic solutions of the TSP-type problems ( Grefenstette et al., 1995 ). There are several basic approaches for GA and its operators ( Grefenstette et al., 1995 ). These include; order crossover (OX), partially matched crossover (PMX), cycle crossover (CX) and edge recombination crossover (ERC) ( Bachem et al., 1994  and  Hunter, 1995 ). In this paper, we proposed a modified operator based on recombination crossover. This form of algorithm includes reproduction and selection. Each offspring's fitness value is used as a criterion to perform the selection of the potential new parents. We applied the edge-2 recombination operator using edge table as an adjacency table listing the edges into and out of a destination as observed in the two parent tours. The edge list for destination k is composed of all of the destinations in the two parents that are adjacent to k . If a destination is adjacent to k in both parents, this entry is marked ‘-’ and it is selected first to construct offspring. The edge recombination operator uses edge table to construct and offspring the inherits as much information as possible from the parent structures. The procedure of this proposed approach is listed below. Step 1 . Assume that there are two parents P1 and P2 have 12 components each. Step 2 . Constructs edge table for enhanced edge recombination crossover. Step 3 . Select components with a few connections from the edge table. (from Table 1 , 2 or 4 characters) Table 1. Edge table (example) Step 4 . By sorting the selected characters by alphabetic order, construct new offsprings O1, O2 Step 5 . The flagged components have first priority and components whose own edge list has the fewest entries have second priority. Step 6 . This processing continues until the tour is constructed.