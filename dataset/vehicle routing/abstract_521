  This paper considers the vehicle routing problem with pickups and deliveries (VRPPD) where the same customer may require both a delivery and a pickup. This is the case, for instance, of breweries that deliver beer or mineral water bottles to a set of customers and collect empty bottles from the same customers. It is possible to relax the customary practice of performing a pickup when delivering at a customer, and postpone the pickup until the vehicle has sufficient free capacity. In the case of breweries, these solutions will often consist of routes in which bottles are first delivered until the vehicle is partly unloaded, then both pickup and delivery are performed at the remaining customers, and finally empty bottles are picked up from the first visited customers. These customers are revisited in reverse order, thus giving rise to lasso shaped solutions. Another possibility is to relax the traditional problem even more and allow customers to be visited twice either in two different routes or at different times on the same route, giving rise to a general solution. This article develops a tabu search algorithm capable of producing lasso solutions. A general solution can be reached by first duplicating each customer and generating a Hamiltonian solution on the extended set of customers. Test results show that while general solutions outperform other solution shapes in term of cost, their computation can be time consuming. The best lasso solution generated within a given time limit is generally better than the best general solution produced with the same computing effort. Keywords Vehicle routing problem ; Pickup and delivery ; Tabu search ; Lasso solutions 1. Introduction The vehicle routing problem with pickups and deliveries (VRPPD) is defined on a graph G  = ( V ,  A ), where V  = {0, 1, …,  n } is a vertex set and A  = {( i ,  j ): i , j  ∈  V , i  ≠  j } is an arc set. Vertex 0 represents a depot , while the remaining vertices are customers . A fleet of m identical vehicles of capacity Q is based at the depot. Each customer i has a non-negative pickup demand p i and a non-negative delivery demand d i satisfying p i  +  d i  > 0 for all i . Initially, all delivery demands are located at the depot and ultimately all pickup demands must arrive at the depot. A non-negative cost matrix C  = ( c ij ) n × n is defined on A . The VRPPD consists of designing at most m vehicle routes starting and ending at the depot, such that each pickup and each delivery is performed by one vehicle, the total load of a vehicle along a route never exceeds Q , and the total routing cost is minimized. This definition does not specify the number of visits made to a customer: this number is one if the pickup and delivery operations are performed simultaneously by the same vehicle, or two if these operations are performed separately, in any order, by the same vehicle or by two separate vehicles. The VRPPD generalizes the single vehicle routing problem with pickups and deliveries (SVRPPD) in which m  = 1 (see, e.g., Gribkovskaia et al., 2007a ), and the classical capacitated vehicle routing problem (CVRP) in which only pickup demands or only delivery demands are considered (see, e.g., Toth and Vigo, 2002 ). These two problems are NP-hard and therefore so is the VRPPD. A VRPPD solution is feasible only if three conditions are satisfied: delivery-feasibility, pickup-feasibility and load-feasibility ( Gribkovskaia et al., 2001 ). Delivery- and pickup-feasibility mean that both the total delivery and the total pickup demands on any vehicle route should not exceed Q . Load-feasibility means that Q should not be exceeded at any point on the route. Mosheiov (1994) shows that in the case of a single vehicle a load-feasible Hamiltonian route can always be constructed if both delivery-feasibility and pickup-feasibility conditions are satisfied, but this property does not extend to the multi-vehicle case. 1.1. Applications and literature review Applications of the VRPPD arise naturally in the planning of mail services ( Wasner and Zäphel, 2004 ) and in beverage distribution where full bottles and cans must be delivered to customers, and empty containers must be picked up at the customers and brought back to the depot ( Dethloff, 2001 , Tang and Galvão, 2002  and  Tang and Galvão, 2006 ). A practical case study encountered in the Quebec City area in Canada is analyzed by Privé et al. (2006) . Gribkovskaia et al. (2007a) describe an application arising in the supply of offshore oil and gas platforms. All applications that are valid for the single vehicle case extend easily to several vehicles. The VRPPD belongs to the class of one-to-many-to-one pickup and delivery problems with combined demands ( Gribkovskaia and Laporte, in press ) on which there exists a rich literature. To our knowledge all available algorithms developed for this class of problems are heuristics ( Min, 1989 , Nagy and Salhi, 1998 , Nagy and Salhi, 2005 , Dethloff, 2001 , Dethloff, 2002 , Angelelli and Mansini, 2002 , Tang and Galvão, 2002 , Tang and Galvão, 2006 , Wasner and Zäphel, 2004 , Gribkovskaia et al., 2007a , Gribkovskaia et al., 2007b  and  Gribkovskaia et al., 2007c ). Most heuristics are based on classical procedures including insertion methods, edge and vertex exchanges, and customer relocations. Nagy and Salhi, 1998 , Nagy and Salhi, 2005  and  Gribkovskaia et al., 2007a allow the possibility of modifying the number of visits made to a customer. Recently, tabu search has been used as an improvement phase in the single vehicle case ( Hoff and Løkketangen, 2006  and  Gribkovskaia et al., 2007a ). For a recent overview of pickup and delivery problems, see Berbeglia et al. (2007) . 1.2. Distribution strategies Several distribution strategies, each inducing a different route shape, can be used for the VRPPD. One strategy, called Hamiltonian (H), is to design a Hamiltonian route for each vehicle, in which delivery and collection at a customer location are performed during the same visit. A second possibility is to apply a double-path (D) strategy which is to first make all deliveries following a Hamiltonian path, and then perform the collections by following the customers in the reverse order. A third strategy, called lasso (L), generalizes the previous two: a path or spoke is first followed by each vehicle to perform deliveries, the remaining customers assigned to this vehicle are then visited along a loop and, finally, the spoke is followed in the reverse order to perform pickups. If the loop is empty, then the lasso reduces to a double-path; if the path is empty, then it reduces to a Hamiltonian cycle. Lasso solutions were introduced in Halskau and Løkketangen, 1998  and  Gribkovskaia et al., 2001 . They are also discussed in Hoff and Løkketangen (2006) and in Gribkovskaia et al. (2007a) for the case of single vehicle pickup and delivery problems. Finally, a general (G) strategy assumes no predetermined solution shape. One way to generate a general solution is to initially represent each customer by two vertices, one for the pickup and the other one for the delivery. If these two vertices are visited consecutively by the same vehicle, these can then be merged into a single vertex at which a simultaneous pickup and delivery is made. Otherwise the two vertices associated with the same customer are visited separately, possibly by different vehicles. The general strategy encompasses the lasso strategy and may also yield other solution shapes. As a result, allowing each customer to be visited once or twice can yield better solutions than when predetermined shapes are imposed on vehicle routes. A mixed integer linear programming model allowing one or two visits per customer and using a double-vertex representation of each customer is presented in the Appendix . Fig. 1 depicts the solution shapes obtained by applying the four strategies just described.