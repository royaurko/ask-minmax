Password: This paper introduces a variant of the vehicle routing problem with time windows where a limited number of vehicles is given ( m -VRPTW). Under this scenario, a feasible solution is one that may contain either unserved customers and/or relaxed time windows. We provide a computable upper bound to the problem. To solve the problem, we propose a tabu search approach characterized by a holding list and a mechanism to force dense packing within a route. We also allow time windows to be relaxed by introducing the notion of penalty for lateness. In our approach, customer jobs are inserted based on a hierarchical objective function that captures multiple objectives. Computational results on benchmark problems show that our approach yields solutions that are competitive to best-published results on VRPTW. On m -VRPTW instances, experiments show that our approach produces solutions that are very close to computed upper bounds. Moreover, as the number of vehicles decreases, the routes become more densely packed monotically. This shows that our approach is good from both the optimality as well as stability point of view. Keywords Tabu search ; Heuristics ; Routing ; Combinatorial optimization ; Vehicle routing problem with time windows 1. Introduction Many practical transport logistics and distribution problems can be formulated as a vehicle routing problem whose objective is to obtain a minimum-cost route plan serving a set of customers with known demands. Each customer is assigned to exactly one vehicle route and the total demand of any route must not exceed the vehicle capacity. To date, most of the proposed algorithms assume that the number of vehicles is unlimited, and the objective is to obtain a solution that either minimizes the number of vehicles and/or total travel cost. However, transport operators in the real world face resource constraints such as a fixed fleet. The question we like to ask is, if the given problem is over-constrained in the sense of insufficient vehicles, what constitutes a good solution and how may we find one? In this paper, we provide some insights to this question. In our view point, it is desirable to have an algorithm that not only performs well given a standard VRPTW problem, but also handles over-constrained problems well in the following sense: 1. Optimality: It returns solutions which serve (or pack) as many customers as possible as the primary objective, while optimizing standard criteria such as the number of vehicles and distance travelled. 2. Stability: It degrades gracefully under constrainedness, i.e. when the number of vehicles is reduced, the customer packing density , defined as the average number of customers per vehicle in service, must be monotically increasing, although the total number of customers served will become less. This paper proceeds as follows. We first introduce the problem ( m -VRPTW) and a computable upper bound to the problem. We then present a tabu search approach with the following characteristics: (a) a holding list to accommodate unserved customers; (b) a mechanism that introduces new vehicles in stages so as to force denser customer packing within a route. We then extend the algorithm to a generalization of the problem with relaxed time windows. In terms of computational results, experiments on VRPTW benchmark problems show that our approach can produce solutions that are very close to previous best-published results. What is more interesting perhaps is the performance on m -VRPTW instances. Results show that our approach produces solutions that are very close to computed upper bounds. Moreover, as the number of vehicles is reduced, the average number of customers per route is monotically increasing. This shows that our approach is good from both the optimality as well as stability point of view. 2. Literature review The primary objective of m -VRPTW is to maximize the number of customers served, which is NP-hard, since finding it is a generalization of the multiple constrained knapsack problem. Although the classical VRPTW has been the subject of intensive research since the 80s, to our knowledge, there has been little research work on m -VRPTW. We give some research developments in VRPTW. Solomon’s insertion heuristics [18] is the seminal work behind heuristic construction algorithms. Many efficient heuristic and meta-heuristic approaches have been proposed recently, including the works of Chiang and Russell [5] , Potvin and Rousseau [14] , Rochat and Taillard [15] , Taillard et al. [20] , and Thangiah et al. [21] . More recently, Schulze and Fahle [19] , Gehring and Homberger [9] proposed new parallel tabu search heuristics that enable large-scale VRPTW instances to be solved. Several works have been carried out advocating the hybrid use of constraint programming and local search. For example, Pesant and Gendreau [13] applied constraint programming to evaluate the local neighborhood to find the best local moves. There is also constrained-directed local search proposed in [1] , [11]  and  [17] . In [17] , for example, the author presented a method called large neighborhood search (LNS) for VRP in which a part of a given solution is extracted and then reinserted into the partial solution using a quasi-complete search process. If the reinsertion procedure generated a better solution, then the solution is kept. This process is repeated until certain stopping criterion is met. The result produced with this technique is competitive with other meta-heuristic approaches. In terms of exact algorithms, Desrochers et al. [6] has applied column generation that was able to solve some 100-customer problems optimally. Based on this, Kohl et al. [12] developed a more efficient optimization algorithm by introducing a new valid inequality within a branch-and-cut algorithm, called k -path cuts, which solves 70 of the 87 Solomon benchmark problems to optimality. However, due to the exponential size of the solution space, it is unlikely that these optimization procedures can be used for larger-scale problems. 3. Problem definition and notation The standard VRPTW problem is defined formally as: Given an undirected graph G ( V , A ) where V ={ v 0 , v 1 ,…, v n }, v 0 is the depot, v i , i ≠0 is a customer with demand d i , time windows ( e i , l i ) and service duration s i ; A ={( v i , v j ): i ≠ j , v i , v j ∈ V }, each arc ( v i , v j ) having a travel distance (time) t ij ; and vehicle capacity Q , find a minimum set of vertex-disjoint routes starting and ending at depot v 0 such that each customer v i is served by exactly one vehicle within its time windows, ∑ d i for all customers v i served by each vehicle is less than Q , and the total distance travelled is minimized (as the secondary objective function). m -VRPTW is defined formally as: Given m (number of vehicles) and a VRPTW instance, find m or less routes with the primary objective function of maximizing total number of customers served, and the secondary objective function of minimizing the total distance travelled. 4. Upper bound for m -VRPTW In this section, we determine an upper bound for the total number of customers that can be served by a given fixed number of vehicles. We propose an integer programming (IP) formulation. The IP formulation should be able to solve large-scale problems, yet not be overly simplified such that the gap of the bound from the optimum is too wide. We have adopted a formulation that accounts for the capacity constraints of the vehicles as well as the time constraints imposed by the latest return times of every vehicle to the depot. The upper bound is derived by solving a relaxation of m -VRPTW, formulated as follows. Define U ={1,2,…, m } to be the indices of the set of m serving vehicles and V c to be the set of customer nodes (excluding the node at the depot). Define r i =min j , j ≠ i t ij , i , j ∈ V which is the traveling time from node i to its nearest neighbor. This quantity is used to lower bound the travel time from node i to any other node.