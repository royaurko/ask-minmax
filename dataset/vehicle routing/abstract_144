Password: This paper presents a parallel cooperative multi-search method for the vehicle routing problem with time windows. It is based on the solution warehouse strategy, in which several search threads cooperate by asynchronously exchanging information on the best solutions identified. The exchanges are performed through a mechanism, called solution warehouse, which holds and manages a pool of solutions. This enforces the asynchronous strategy of information exchanges and ensures the independence of the individual search processes. Each of these independent processes implements a different meta-heuristic, an evolutionary algorithm or a tabu search procedure. No attempt has been made to calibrate the individual procedures or the parallel cooperative method. The results obtained on an extended set of test problems show that the parallel procedure achieves linear accelerations and identifies solutions of comparable quality to those obtained by the best methods in the literature. Keywords Vehicle routing with time windows ; Parallel meta-heuristics ; Cooperative search ; Solution warehouse strategy 1. Introduction Parallel resolution methods offer the possibility of accelerating computations and, as such, these methods constitute an interesting field of research for combinatorial optimization. However, classical parallel approaches, based on functional or data decomposition, do not significantly modify the search trajectories of meta-heuristics. Thus, they cannot improve the quality of the solution, nor do they enhance the robustness of the search when faced with different problem instances than those which were originally calibrated and applied. Consequently, in recent years, multi-search (or multi-thread ) meta-heuristics , with varying degrees of cooperation , have increasingly been used for difficult combinatorial problems and have been shown to both speed up the search and dramatically improve the robustness and the quality of the solutions obtained (e.g., [1] , [2] , [3] , [4] , [5] , [6] , [7] , [8] , [9] , [10] , [11] , [12] , [13] , [14]  and  [15] ). The vehicle routing problem with time windows ( VRPTW ) is one of the central problems in operations research and combinatorial optimization with numerous practical applications [16] . The problem is NP-Hard and thus, not surprisingly, classical and modern heuristics have been extensively studied, with meta-heuristics generally offering the best performances (e.g., [16] , [17] , [18] , [19] , [20] , [21] , [22] , [23] , [24] , [25] , [26] , [27] , [28] , [29]  and  [30] and references therein). The parallel cooperative multi-search method based on the solution warehouse strategy has been successfully applied to a number of difficult combinatorial problems (e.g., [3] , [6]  and  [31] ) but not, at least at the authors’ knowledge, to the VRPTW. Or, this parallel approach, based on several search threads that cooperate by asynchronously exchanging information about the best solutions identified so far, offers several advantages: simplicity of design, increased search robustness, the possibility to enhance performance through enhancement of some of the individual search threads. The objective of this paper is to explore the applicability of the solution warehouse-based cooperative multi-search method to VRPTW and determine its competitiveness compared to the current state of the art. The contributions of this paper are as follows. We present an easy-to-build and efficient parallel solution method for the single-depot version of the VRPTW. The method makes use of the existing search methods without any particular calibration for the parallel cooperative method or the individual procedures (we use the parameter settings proposed for the sequential methods by the original authors). Experiments using both the standard benchmark test problems of Solomon [32] and the more recent one proposed by Homberger and Gehring [10] show that the parallel procedure achieves solutions of quality comparable to that obtained by the best methods of the literature. The proposed cooperative search identifies several new best solutions and finds new best cumulative numbers of vehicles for several problems ranging from 200 to 1000 customers. From a parallel computation point of view, the proposed method is efficient as it displays linear accelerations compared to the sequential methods. The paper also contributes to the general understanding of cooperative parallel methods by analyzing its behavior when applied to a new problem class and by exploring the impact of the quality of the individual search threads on the performance of the parallel search. The paper is organized as follows. Section 2 briefly reviews the main sequential and parallel methods proposed to solve the VRPTW. Section 3 presents the cooperative search procedure, its general design and the methods selected for cooperation. Section 4 presents the computational results and analyzes them both from the point of view of solving the VRPTW and from that of the performance of the parallel strategy. Conclusions and perspectives are the subject of the last section. 2. The VRPTW and main solution methods In this paper, we address the single depot VRPTW. One is given a set of customers with known positive demands and specific time intervals when service can be provided. A fleet of homogeneous vehicles of known capacity is available at a given depot to perform this service. The objective is to find a set of closed routes (or tours) that start and end at the depot within its opening hours, such that the total cost of performing the service is minimized, customers are visited and served during the specified time windows, and vehicles are not overloaded. In the problem version we address, cost is a combination of two factors: the number of vehicles (routes) used and the total distance travelled. A high cost is associated with vehicle utilization to enforce the search towards solutions with reduced number of vehicles. Each customer is visited only once. A vehicle cannot arrive later than the customer's closing time, but is allowed to arrive before the associated opening time, in which case it waits, without explicit penalty, until the customer is ready. Once the service starts, it is carried on until completion, even if the service ending time might be later than the expiration of the time window. The recent review by Cordeau et al. [16] , as well as the other reviews indicated in the Introduction, present mathematical formulations, variants, and solution methods for the problem. Presenting a comprehensive review of solution methods for the VRPTW is beyond the scope of this paper, especially since several reviews have appeared recently. In the following, we briefly review a number of “successful” sequential and parallel solution approaches that obtained best-known results for the classical Solomon problem set and on the 200–1000-customer problems. Methods that are incorporated in the proposed cooperative search are presented in somewhat more detail in Section 3.2 . Efforts are being dedicated to the development of exact algorithms and most 100-customer VRPTW problems with a distance-minimization objective have been solved [33] , [34] , [35] , [36]  and  [37] . For most problem instances, heuristics and meta-heuristics are required, however. Most such efforts have addressed the combined objective of minimizing first the number of vehicles and then the total distance. Tabu search [38] , [39]  and  [40] has often been used successfully to address vehicle routing problems including the VRPTW. Taburoute [41] and the Unified Tabu Search [42] stand out by the quality of the results. These two methods are used in the proposed framework and are reviewed in Section 3.2 . Hybrids that combine elements of different methodologies appear very promising. Rousseau et al. (2002) combined constraint programming and variable neighborhood search (VNS) [44] , [45]  and  [46] . The pruning operators and propagation techniques of constraint programming permit the search of large neighborhoods. This increases the probability of finding a good solution at each iteration and avoids the need for specialized neighborhood descent procedures. The utilization of constraint programming also allows additional constraints to be added easily without fundamentally modifying the methodology.