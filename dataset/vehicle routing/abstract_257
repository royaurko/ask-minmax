Password: This paper presents an asynchronous parallel metaheuristic for the period vehicle routing problem (PVRP). The PVRP generalizes the classical vehicle routing problem by extending the planning period from a single day to M days. The algorithm proposed is based on concepts used in parallel genetic algorithms and local search heuristics. The algorithm employs the Island model in which the migration frequency must not be very high. The results of computational experiments carried out on problems taken from the literature indicate that the proposed approach outperforms existing heuristics in most cases. Keywords Parallel algorithms ; Metaheuristics ; Period vehicle routing problem 1. Introduction The classical vehicle routing problem (VRP) is defined as follows: vehicles with a fixed capacity Q must deliver order quantities q i ( i =1,…, n ) of goods to n customers from a single depot ( i =0). Knowing the distance d ij between customers i and j ( i , j =0,…, n ), the objective of the problem is to minimize the total distance traveled by the vehicles in such a way that only one vehicle handles the deliveries for a given customer and the total quantity of goods that a single vehicle delivers do not be larger than Q . In classical VRPs, typically the planning period is a single day. The period vehicle routing problem (PVRP) generalizes the classical VRP by extending the planning period to M days. Over the M -day period, each customer must be visited at least once during the considered period. The classical PVRP consists of a homogeneous vehicle fleet (vehicles with same capacities) which must visit a group of customers from a depot where the vehicles must start and return to at the end of their journeys. Each vehicle has a fixed capacity that cannot be exceeded and each customer has a known daily demand that must be completely satisfied in only one visit by exactly one vehicle. The planning period is M days. If M =1, then PVRP becomes an instance of the classical VRP. Each customer in PVRP must be visited k times, where 1≤ k ≤ M . In the classical model of PVRP, the daily demand of a customer is always fixed. The PVRP can be seen as a problem of generating a group of routes for each day so that the constraints involved are satisfied and the global costs are minimized. PVRP can also be seen as a multi-level combinatorial optimization problem. In the first level, the objective is to generate a group of feasible alternatives (combinations) for each customer. For example, if the planning period has t =3 days { d 1 , d 2 , d 3 } then the possible combinations are: 0→000;1→001;2→010;3→011;4→100;5→101;6→110 and 7→111. If a customer requests two visits, then this customer has the following visiting alternatives: { d 1 , d 2 },{ d 1 , d 3 }, and { d 2 , d 3 } (or the options: 3, 5 and 6 of Table 1 ). In the second level, we must select one of the alternatives for each customer, so that the daily constraints are satisfied. Thus we must select the customers to be visited in each day. In the third level, we solve the VRP for each day. In this paper, our algorithm is applied to the basic model of PVRP with an additional constraint; the number of vehicles is limited, although this limit is not necessarily the same every day. The technique proposed here can be applied to various models of PVRP. Table 1. In the last years, evolutionary metaheuristics and in particular genetic algorithms (GA) have been used successfully in solution of NP-complete and NP-hard problems of high dimensions. Hard problems require large search spaces resulting in high computational costs. In this context, evolutionary metaheuristics including GA may require a large amount of time to find good feasible solutions, encouraging the use of parallel techniques [10] . Although the main goal of a parallel evolutionary metaheuristic is the reduction of the execution time necessary to find an acceptable solution, sometimes it can also be used to improve the results obtained by sequential versions. Most of the evolutionary metaheuristics, such as GA, Scatter Search, Ant Systems and Neural Nets, are easy to parallelize because of their intrinsic parallelism. There are different ways to parallelize GA. The generally used classification divides parallel GAs in three categories: Island or stepping stone; Fine Grain and Panmitic models [10] . In this paper, we propose a parallel hybrid evolutionary metaheuristic based on parallel GA, scatter search and local search methods. The algorithm is based on the Island model and it was implemented on a cluster of workstations with 4 RISC/6000 processors. The remainder of this paper is organized as follows. Section 2 presents the related literature about PVRP. Section 3 presents the algorithm proposed. Experimental results are shown in Section 4 . Finally, Section 5 concludes the paper. 2. Related literature Although the PVRP has been used in many applications, it has not been extensively studied in related literature. Golden et al. [7] developed a heuristic based on the concept of “record-to-record” proposed by Dueck [5] . To the best of our knowledge, there are not many papers using metaheuristics to solve PVRP. Cordeau et al. [4] presented a tabu search metaheuristic to solve this problem. Computational results taken from the literature indicate that their algorithm outperforms all previous conventional heuristics. GA have been used with great success to solve several problems with high degrees of complexity in combinatorial optimization, including models of daily VRP [1] , [8] , [9]  and  [10] . More recently, Rocha [11] proposed a hybrid genetic algorithm (HGA) for the PVRP. Their algorithm is based on concepts of GA and local search heuristics. Computational experiments using tests available in literature showed the superiority of this method when it is compared with other existing metaheuristics. 3. An asynchronous parallel hybrid evolutionary metaheuristic This paper presents a parallel hybrid evolutionary metaheuristic (PAR-HEM) for the PVRP. The parallel algorithm is based on the Island model and it was implemented on a cluster of workstations with 4 RISC/6000 processors. In order to reduce communication overhead, which is usual in this kind of model [9] and ensure the occupation of all processors during the execution of the algorithm, a new criteria of migration and termination were employed. In Island model, the population of chromosomes of GA is partitioned into several subpopulations, which evolve in parallel and periodically migrate their individuals (chromosomes) among themselves. Because of the high cost of communication in this model, migration frequency must not be very high. Thus, in our asynchronous parallel algorithm, migration is only executed when subpopulation renewal is necessary. The criterion of termination of processes is based on a global condition, which involves every process that composes the PAR-HEM, in order to prevent a process from being idle while the others are still executing. In our algorithm, each processor executes a pair of tasks m i and q i . Each task m i executes the following steps, based on the sequential algorithm proposed by Rocha [11] , described in the following subsections: representation of solutions through chromosomes; generation of an initial population of chromosomes; evaluation and reproduction; and diversification. In order to execute the diversification step, m i sends a migration request to q i if population renewal is required. The task q i is responsible for migration and termination of the algorithm above. See [9] for more details.