Password: The multi-compartment vehicle routing problem (MC-VRP) consists of designing transportation routes to satisfy the demands of a set of customers for several products that, because of incompatibility constraints, must be loaded in independent vehicle compartments. Despite its wide practical applicability the MC-VRP has not received much attention in the literature, and the few existing methods assume perfect knowledge of the customer demands, regardless of their stochastic nature. This paper extends the MC-VRP by introducing uncertainty on what it is known as the MC-VRP with stochastic demands (MC-VRPSD). The MC-VRPSD is modeled as a stochastic program with recourse and solved by means of a memetic algorithm. The proposed memetic algorithm couples genetic operators and local search procedures proven to be effective on deterministic routing problems with a novel individual evaluation and reparation strategy that accounts for the stochastic nature of the problem. The algorithm was tested on instances of up to 484 customers, and its results were compared to those obtained by a savings-based heuristic and a memetic algorithm (MA/SCS) for the MC-VRP that uses a spare capacity strategy to handle demand fluctuations. In addition to effectively solve the MC-VRPSD, the proposed MA/SCS also improved 14 best known solutions in a 40-problem testbed for the MC-VRP. Keywords Multi-compartment vehicle routing problem ; Stochastic demands ; Evolutionary algorithms ; Memetic algorithms 1. Introduction The multi-compartment vehicle routing problem (MC-VRP) consists of designing a set of minimal-cost routes to serve the demands for multiple products of a set of customers. The distinguishing feature of the problem is that products are incompatible and must be transported in independent vehicle compartments. The MC-VRP naturally arises in several practical situations. For instance, dairies often use vehicles with multiple compartments to collect milk of different types (e.g., from cows and goats) and qualities (e.g., different suckling dates), petroleum companies deliver different types of fuel to outlet retailers using multi-compartment tankers, public utilities use trucks with compartments to perform selective waste collection, and food companies distribute in compartmentalized vehicles groceries that require different levels of refrigeration. Despite its wide practical applicability, the MC-VRP has received little attention in the literature (see [12] for a recent survey on the VRP). Early work on routing problems with multiple compartments addressed an MC-VRP variant where all compartments of a vehicle can be used to transport any product [9]  and  [8] . To solve the problem, these authors split the resolution into two steps. First, they allocate orders to vehicles and compartments; then, they service the set of customers by solving a sequence of traveling salesman problems (TSPs). More recently, researchers [3] , [1]  and  [33] have proposed solution methods that tackle the product/compartment allocation and routing issues simultaneously. Van der Bruggen et al. [41] solved a real-world MC-VRP as part of the distribution system design of a petroleum company. Their construction heuristic (CH) forces the insertion of customers with large demands or located far from the depot in early iterations, thus minimizing both distance and the number of used vehicles. Lately, El Fallahi et al. [14] proposed a savings-based heuristic, a tabu search (TS), and a memetic algorithm (MA) for a MC-VRP variant in which each compartment is dedicated solely to one product. Under this scenario, no allocation decisions are needed since the compartment capacity for each product is given. The authors tested two different service policies: in the first one all products must be delivered to the customer by the same route; in the second one each product can be delivered by a different route. The body of work on the MC-VRP has been restricted to the case in which demands are known with certainty. In practice, however, customer demands are frequently stochastic, meaning that their exact value is not known at the moment when routes are planned. As pointed out by Christiansen and Lysgaard [10] , neglecting the stochastic nature of the demand may lead to a substantial cost increase, thus there is a strong incentive to extend the MC-VRP to handle some type of uncertainty. This paper incorporates uncertainty into the demands of the MC-VRP leading to the MC-VRP with stochastic demands, henceforth called the MC-VRPSD. In the MC-VRPSD, the demand of each customer for each product is modeled by a random variable with a known probability distribution. Since the MC-VRPSD is a variant of the stochastic VRP, different solution frameworks can be applied to solve the problem [36] . A taxonomy of these frameworks classifies them into dynamic or static [35] . Routing decisions in dynamic approaches are made in multiple stages and based on demand realizations (at former stages). Depending on the remaining vehicle capacity and the set of unvisited customers, routes are re-optimized at each stage. Some examples of this category are the Markov decision process (MDP) approach of Secomandi and Margot [35] and the neuro-dynamic programming approach of Secomandi [34] . On the other hand, routing decisions in static approaches, once made remain unchanged regardless of the demand realizations. Some of the approaches that fall into this category include chance constraint programming [36] , robust optimization [39] , and stochastic programming with recourse [10] . From a computational point of view static strategies are preferred over their dynamic counterparts, since the problem, known to be computationally intractable, is solved only once [21] . Static strategies are also specially useful when a stable solution is desired [6] or when re-optimization during route execution is impossible due to the lack of information. Among the static approaches, the two-stage stochastic programming (or stochastic programming with recourse) has been widely used for the VRPSD, a particular case of the MC-VRPSD in which each customer has a random demand for a single product. The two-stage stochastic programming framework solves the problem in two phases. In the first phase a set of routes is planned, while in the second phase the planned routes are executed. However, because of the demand uncertainty, while servicing a given customer the remaining capacity of the vehicle may not be enough to satisfy the whole customer demand; in such a case, a route failure is said to occur. In case of a failure, a problem-dependent predefined corrective action, known as recourse , is taken to recover the solution feasibility. In general, the route failures generate an extra cost whose value is only known after the second phase. Thus, the objective of the problem is to design during the first phase a set of routes that minimizes the sum of the cost of the planned routes and the expected cost of the route failures. Exact methods based on two-stage stochastic programming formulations of the VRPSD include that of Laporte et al. [21] who proposed a branch-and-bound method based on the integer L-shaped algorithm. Similarly, Christiansen and Lysgaard [10] proposed a column generation approach that proved to be competitive in tight instances of the problem. More recently, Rei et al. [32] tackled the single VRPSD (SVRPSD), a variant where only one route is to be designed. Their method consists of using local branching [15] to generate optimality cuts on an integer L-shaped algorithm. Although successful, these approaches are limited to solve instances of up to 100 customer nodes. Consequently, industrial-scale problems are out of reach and should be targeted using heuristics [19] .