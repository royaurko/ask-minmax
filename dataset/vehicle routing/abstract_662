Password: Various vehicle routing problems (VRP) appear in the literature due to their important applications in the area of transportation and distribution. A VRP is characterized by the constraints that the involved factors must satisfy and by an optimality goal. In this paper, we develop a heuristic algorithm that (i) partitions suitably a distribution network into subnetworks. A single depot complies with every subnetwork, where a fleet of identical vehicles will start their itinerary. The nodes of the corresponding subnetwork are demand nodes that require a onetime visit by one only vehicle. (ii) Determine the routes of k vehicles, k =2,3,…, for every subnetwork so to minimize the visiting time of the corresponding demand nodes. Consequently the method computes the necessary vehicle number for each subnetwork so as to complete promptly the visiting requirement of all the demand nodes of the whole network. The main strategy of the algorithm for designing the vehicle routes consists of balancing the time utilization of the used vehicles. The paper is integrated by an application of the presented algorithm to the center of the city of Thessaloniki. Keywords Network ; Vehicle routing ; Heuristic ; Algorithm 1. Introduction The case where a relative large urban region ought to the partitioned is met in practical situations in order for every subregion to be served by a single depot. We consider that every depot serves daily constant demand locations i.e., product distribution, garbage collection, mail delivery, etc. In the sequel the demand and supply nodes are represented by nodes in the given urban network. The determination of the vehicle routes in a network so to satisfy some constraints was the subject of many research [2]  and  [5] , since the corresponding problems have important applications [11] . A large variation of VRP belong to the category of NP-Hard problems [3]  and  [8] , therefore these problems are faced with the use of heuristic algorithms [6] . The final objective here is the development of a heuristic procedure that finds the route of each vehicle so to accomplish in the smallest time period the visiting of all the demands nodes of the network. The starting nodes of the vehicle routes are predetermined suitably so to avoid a vehicle concentration in some region. The central strategy of the algorithm consists of obtaining a maximum possible uniform distribution of the vehicles utilization. The procedure presented here utilizes mainly a terminology from the field of graph theory [4] , [7]  and  [12] . Therefore, in the next section we present the notations and concepts of this field that are used here. Section 3 refers to the method that partitions suitably a network into subnetworks. The algorithm that finds the best possible routes for each of the k vehicles k =1,2,…, in a subnetwork is the content of Section 4 . The last section is devoted to the conclusions and to the application of the proposed algorithm on real data, which correspond to the area that covers the center of the city of Thessaloniki. 2. Definitions–notations For reasons of self-reliance of the paper we present the necessary notions of graph theory with their corresponding notations. Moreover we give the interpretation of the sets and variables employed in the procedure that finds the vehicle routes and that will be established in a next section. Let V a set of elements. Set E contains distinct pairs of elements of V, i.e., E ⊂ V × V . The ordered pair ( V , E ) defines a graph G denoted G =( V , E ). A graph can be drawn in the plane so that every element x ∈ V represents a point and every element ( x , y )∈ E a line joining the points x , y ∈ V . If the elements x , y ∈ E are ordered pairs, we say that the graph is directed. The elements of V and E are called nodes and edges , respectively. In a directed graph the elements of E are referred as arcs . In the following by the term graph we presume the directed graph. A network N is a graph to which weights are assigned to its nodes and/or arcs. By I q we symbolize the set of consecutive natural number 1,2,…, q . For a pair x i , x j ∈ V , a sequence ( x i 1 , x i 2 ,…, x i k ) with x i k = x i and x i k = x j is called a route if ( x i m , x i m +1 )∈ E for every m ∈ I k −1 . In the case where in a route every node occurs only once, we say that the route is a simple route, here we will refer only to simple routes. In general, there may exist more than one route that join nodes x , y ∈ V in a network. Therefore we denote by Δ i ( x , y ), i =1,2,…, q ( x , y ), such a route, where q ( x , y ) is the number of distinct routes that join x and y. A graph is said to be connected if for every pair x , y ∈ V there exist a least one route Δ i ( x , y ) and strongly connected if in addition there exists a route Δ i ( y , x ). Since we deal here with urban networks, the corresponding graphs are strongly connected. To every arc ( x , y )∈ E of network N we associate a value c ( x , y ) that expresses the duration of a vehicle to traverse ( x , y ). The cost K ( Δ i ( x , y )) of a route Δ i ( x , y ) is the sum of the values of its arcs. A route with the minimum cost is a shortest route and the corresponding value is the distance d ( x , y ), namely Generally, in a strongly connected network it holds that d ( x , y )≠ d ( y , x ), thus d ′ ( x , y ) or equivalently by d ′ ( y , x ) we denote the smaller value between these two distances, that is d ′ ( x , y )= d ′ ( y , x )=min{ d ( x , y ), d ( y , x )}. The longest distance d ( x , y ) among x , y ∈ V is the diameter δ ( G ) of G =( V , E ). A graph G ′ =( H ′ , E ′ ) where H ′ ⊂ V and E ′ ={( x , y )∈ E , x , y ∈ H ′ }⊂ E is a subgraph of G =( V , E ). We next present the interpretation of the notations used to establish algorithm A, which gives a solution to the problem described in the previous section. DM the set of the demand nodes of the network, DM⊆ V . ndm number of elements in DM, ndm=|DM|. nmb number of vehicles. MB linear array with nmb elements. The elements MB( i ), i =1,2,…,nmb, represent the labels of the nodes of the network where the vehicles are located at an instant of the algorithm. The initial values of MB are the starting nodes of the vehicle routes. DV set that contains the nodes of DM that has been visited in a previous stage. tim linear array of ndm elements, where tim (i), v i ∈ DV express the time node v i is visited by a vehicle. For every starting node j ∈ V we assume that tim( j )=0. Q k list array that contains the labels of the network nodes, which represent the route of the vehicle that started from node v k . nq linear array with nmb element, where nq ( k ) expresses the number of nodes that compose route Q k in a certain instant of the procedure 3. Network-partition The routes of the vehicles in a network are planned so that the visiting of all the demand nodes is performed in a minimum possible duration. Therefore in the searching stage the question which vehicle will visit which unvisited demand node, the factors of shortest distances among the locations of the vehicles and the unvisited nodes are considered together with the elapsed time utilization of each vehicle. The above will be analyzed in a next section. This means that the vehicles must be dispersed the more possible in the network so to avoid collisions and for the vehicles not to be faraway from unvisited yet demand nodes. By the term “collision” we mean here the case where in an instant of the algorithm the closer to a vehicle location demand node has already been visited by another vehicle. Let m =2 be the number of the starting points of the routes. Therefore to comply with the above reasoning the corresponding starting nodes x 1 , x 2 ∈ V are selected so that the distance d ( x 1 , x 2 ) coincides with the diameter of the network.