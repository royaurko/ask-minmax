Password: In the heterogeneous fleet vehicle routing problem (HVRP), several different types of vehicles can be used to service the customers. The types of vehicles differ with respect to capacity, fixed cost, and variable cost. We assume that the number of vehicles of each type is fixed and equal to a constant. We must decide how to make the best use of the fixed fleet of heterogeneous vehicles. In this paper, we review methods for solving the HVRP, develop a variant of our record-to-record travel algorithm for the standard vehicle routing problem that takes a heterogeneous fleet into account, and report computational results on eight benchmark problems. Finally, we generate a new set of five test problems that have 200–360 customers and solve each new problem using our record-to-record travel algorithm. Keywords Vehicle routing problem ; Heuristics ; Record-to-record travel 1. Introduction In the standard version of the vehicle routing problem (VRP), a fleet of homogeneous vehicles is based at a single depot. Each vehicle has the same capacity and must leave from and return to the depot. Each customer has a known demand and is serviced by exactly one visit of a single vehicle. A sequence of deliveries must be generated for each vehicle so that all customers are serviced and the total distance traveled by the fleet is minimized. In the heterogeneous fleet vehicle routing problem (HVRP), there are several different vehicle types. For vehicle type t   , the capacity is Q t Q t , the fixed cost is f t f t , and the variable cost per unit distance is α t α t . There are n t n t vehicles of type t   that are available for servicing the customers. Note that n t n t might be very large or, essentially, unlimited. Some customers may have such large demands that they can be serviced only by large capacity vehicles. In the fixed   fleet version of the HVRP, the values of n t n t are fixed. More specifically, the number of vehicles of type t is limited and the fleet composition is known in advance. We must decide how to make the best use of a fixed fleet of heterogeneous vehicles. This is the version of the HVRP studied in this paper. When the number of vehicles of type t is unlimited , we must determine the best composition of the fleet. We are not studying this version of the HVRP in this paper and refer the reader to [1] for a literature review and computational results with a tabu search heuristic. In practice, there are several applications of the fixed fleet HVRP according to [2] . In residential and commercial waste collection, it is common for fleets to have different capacity vehicles. In residential pickups, when the actual service at a location must be completed by a specific vehicle such as a side loader with mechanical arms that pick up the trash cans, there are site dependency issues rather than the vehicle capacity issues encountered in the HVRP (see [3] ) for details on the VRP with site dependencies). Levy [2] points out that FedEx Ground has different capacity vehicles in its fleet with vehicles oriented to bulk, ground contractors, and home delivery contractors. The capacity of the different vehicles is taken into account in a fleet mix decision and then in the allocation of deliveries (and pickups) to the fixed fleet after the fleet mix decision is made. In some instances, single copy newspaper delivery has a varied fleet [2] . Large vehicles will make larger drops of newspapers and smaller vehicles will make smaller drops and even make bundle drops for individual carriers. In Section 2 , we review three algorithms that have been developed to solve the fixed fleet version of the HVRP. We develop a variant of our record-to-record travel algorithm (see [4] ) to handle a heterogeneous fixed fleet and report computational results for all four procedures on eight test problems taken from the literature. In Section 3 , we develop five new test problems that have 200–360 customers. We apply our record-to-record travel algorithm to these five problems and report our results. In Section 4 , we give our conclusions. 2. Solving the fixed fleet version of the HVRP 2.1. Algorithms for the HVRP In the last 6 years or so, three algorithms have been developed to solve the fixed fleet version of the HVRP. Taillard [5] used tabu search and linear programming to solve the HVRP. His method is known as heuristic column generation (HCG). For each vehicle type and an unlimited number of vehicles, a homogeneous VRP is solved. A tabu search algorithm is used to generate a set of good solutions. Single vehicle routes are extracted and then combined into a partial solution using tabu search. The process is repeated and routes are memorized as candidates for the final solution to the HVRP. Once the homogeneous VRPs are solved for each vehicle type, useless routes (these are routes servicing customers already served on other, larger routes) are deleted leaving a set R of routes. R contains only a small number of all the routes that can be generated for the homogeneous VRPs. The best solution to the HVRP is found by solving an integer linear program. Each column in the integer linear program corresponds to a route in R . Threshold accepting is a deterministic variant of simulated annealing in which a threshold value T is specified as the upper bound on the amount of objective function increase allowed (uphill moves can be made). Tarantilis et al. [6]  and  [7] developed a list-based threshold accepting algorithm (denoted by LBTA) and a backtracking adaptive threshold accepting algorithm (denoted by BATA) for solving the HVRP. In the list-based algorithm, a list of values for T is used during the search. In the backtracking algorithm, T is allowed to increase during the search. LBTA and BATA use two-opt moves, 1–1 exchanges (swap two customers from either the same or different routes), and 1–0 exchanges (move a customer from its position on one route to another position on either the same route or a different route) when performing local search. HCG, LBTA, and BATA use heuristic solution methods, so they are not guaranteed to produce an optimal solution. All three algorithms have been computationally tested on eight benchmark problems (more about this in Section 2.3 ). We adapted our record-to-record travel algorithm for the VRP [4] to handle the HVRP and we denote our algorithm by HRTR. The details of HRTR are given in Table 1 .