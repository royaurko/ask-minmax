Password: In the open vehicle routing problem (OVRP), a vehicle does not return to the depot after servicing the last customer on a route. The description of this variant of the standard vehicle routing problem appeared in the literature over 20 years ago, but has just recently attracted the attention of practitioners and researchers. Today, the OVRP is encountered in practice in the home delivery of packages and newspapers. Contractors who are not employees of the delivery company use their own vehicles and do not return to the depot. In the last five years, tabu search, deterministic annealing, and large neighborhood search have been applied to the OVRP with some success. In this paper, we review OVRP algorithms, develop a variant of our record-to-record travel algorithm for the standard vehicle routing problem to handle open routes, and report computational results on test problems taken from the literature. Finally, we develop a set of eight large-scale problems that range in size from 200 to 480 nodes and report solutions generated by our record-to-record travel algorithm on this test set. Keywords Vehicle routing problem ; Heuristics ; Record-to-record travel 1. Introduction In the standard version of the vehicle routing problem (VRP), we generate a sequence of deliveries for each vehicle in a homogeneous fleet based at a single depot so that all customers are serviced and the total distance traveled by the fleet is minimized. Each vehicle has a fixed capacity and perhaps a route-length restriction that limits the maximum distance it can travel. Each customer has a known demand and is serviced by exactly one visit of a single vehicle. Each vehicle must leave from and return to the depot. In the open vehicle routing problem (OVRP), a vehicle does not return to the depot after servicing the last customer on a route. Each route in the OVRP is a Hamiltonian path over the subset of customers visited on the route. In addition, we need to find the minimum number of vehicles that are required to service all of the customers. One of the earliest descriptions of the OVRP was by Schrage [1] in a paper that tried to classify the key features of VRPs found in practice. “A vehicle can be characterized by at least the following three characteristics: its (multidimensional) capacity, cost rate, and whether it makes open or closed trips. In a closed trip, a vehicle returns to its starting location; in an open trip, it may not. For example, relative to private vehicles, common carrier vehicles tend to have a higher cost/kilometer; however, they make open rather than closed trips. … … An air express courier which has planes depart from a single depot city early in the morning making deliveries and then has each plane retrace its route late in the evening making pickups effectively has open routes.” Bodin et al. [2] describe the OVRP encountered by FedEx in generating “incomplete” delivery routes for airplanes. An airplane leaves Memphis, makes deliveries to several cities, and does not return to Memphis. The airplane lays over at the last city on the delivery route and then starts its pickups from the layover city. Bodin et al. describe a variant of the Clarke and Wright algorithm that was used by FedEx to develop an open route for each airplane. Currently, FedEx experiences the OVRP in its Home Delivery service to residential-only customers (Levy [3] ). FedEx contracts couriers with vehicles who drive to the FedEX depot each morning, load packages, and then make deliveries to residences. The couriers and vehicles do not return to the FedEx depot after their last deliveries of the day. The OVRP is also encountered in the newspaper home delivery problem (Levy [3] ). A carrier is subcontracted by the newspaper company to make deliveries to homes. The newspaper company is only concerned with the path to the last delivery. After that point, a carrier is not compensated. A common theme when a routing problem fits the OVRP framework is the compensation model. In modeling and solving real-world vehicle routing problems, Levy [3] has observed that if a company is not paying after the last delivery, then it wants an efficient path that is not concerned with returning to the depot. Often, this is encountered in practice when deliveries are made by contractors who are not employees of the company. The contractors have their own vehicles and pay their own vehicle costs, and may have a compensation model based on mileage. The company does not need the contractor or the vehicle back at the depot. In fact, if the compensation model includes mileage, the company wants a path that is not influenced by returning to the depot because that would add extra mileage to the compensation model. From the early 1980s to the late 1990s, the OVRP received very little attention in the operations research literature. However, since 2000, several researchers have used tabu search, deterministic annealing, and large neighborhood search to solve the OVRP with some success. In Section 2 , we review seven algorithms that have been used recently to solve the OVRP. We develop a variant of our record-to-record travel algorithm (see Li et al. [4] ) to handle open routes and report computational results for all seven procedures on 16 test problems taken from the literature. In Section 3 , we develop eight large-scale OVRPs that have 200 to 480 customers. We apply our record-to-record travel algorithm to these eight problems and report our results. In Section 4 , we summarize our contributions. 2. Solving the OVRP 2.1. Algorithms for the OVRP Since 2000, seven algorithms have been developed to solve the OVRP. Two algorithms use threshold accepting, three use tabu search, one uses large neighborhood search, and one uses the minimum spanning tree. All of the algorithms are based on heuristic methods, and hence an optimal solution is not guaranteed. In Table 1 , we summarize the seven OVRP algorithms. We point out that Brandão [6] generates a starting solution in two different ways, and hence there are two variants of his TSA procedure (denoted by TSAK and TSAN). The same holds for Fu et al. [10] , and hence there are two variants of their TS procedure (denoted by TSF and TSR). Pisinger and Ropke [11] run ALNS for 25,000 iterations and 50,000 iterations (these variants are denoted by ALNS 25K and ALNS 50K). All ten procedures (CFRS, TSAK, TSAN, BR, BATA, LBTA, TSF, TSR, ALNS 25K, ALNS 50K) have been computationally tested on benchmark problems (more about this later).