Password: The solution of routing problems with soft time windows has valuable practical applications. Soft time window solutions are needed when: (a) the number of routes needed for hard time windows exceeds the number of available vehicles, (b) a study of cost-service tradeoffs is required, or (c) the dispatcher has qualitative information regarding the relative importance of hard time-window constraints across customers. This paper proposes a new iterative route construction and improvement algorithm to solve vehicle routing problems with soft time windows. Due to its modular and hierarchical design, the solution algorithm is intuitive and able to accommodate general cost and penalty functions. Experimental results indicate that the average run time performance is of order O ( n 2 ). The solution quality and computational time of the new algorithm has been compared against existing results on benchmark problems. The presented algorithm has improved thirty benchmark problem solutions for the vehicle routing problems with soft time windows. Keywords Vehicle routing ; Soft time windows ; Route construction and improvement algorithms 1. Introduction The vehicle routing problem with hard time windows (VRPHTW) has a significant body of literature. Clearly, the VRPHTW is a problem with practical applications in distribution and logistics due to the rising importance of just-in-time (JIT) production systems and the increasingly tight coordination of supply chain operations. In comparison, the vehicle routing problem with soft time windows (VRPSTW) has received meager attention. The VRPSTW is a relaxation of the VRPHTW; in the former, time windows can be violated if a penalty is paid; in the latter violations are infeasible. The VRPSTW also has many practical applications ( Chiang and Russell, 2004 ): (1) relaxing time windows can result in lower total costs without hurting customer satisfaction significantly, (2) many applications do not require hard time windows – e.g. the delivery of fuel/gas to service stations, (3) travel times cannot be accurately known in many practical applications, and (4) VRPSTW approaches can be used to solve VPRHTW if the penalties are modified appropriately. In addition, VRPSTW solutions provide a workable alternative plan of action when the problem with hard time windows is infeasible. The objective of this paper is to develop a flexible algorithm that can be applied to solve VRPSTW instances. It is useful for dispatchers to have these different solutions when: (a) the number of routes needed for the hard time window (HTW) problem case exceeds the number of available vehicles, (b) a study of cost-service tradeoffs is required, and (c) the dispatcher has qualitative information regarding the relative importance of service level across customers. For example, in many practical situations late deliveries have penalties that significantly exceed the penalties for early delivery. Besides, customers may be incapable or unwilling to set precise time windows in advance and simply prefer the flexibility to alter their pickup or delivery requests ( Powell et al., 2002 ). This paper provides a fast and high quality solution approach that solves soft time window (STW) problems and that can also be easily adopted to solve hard time window problems using the STW solution as a lower bound. The rest of this paper is organized into five additional sections. Section 2 reviews the relevant literature on VRPSTW problems. Section 3 introduces the mathematical notation and describes the new iterative route construction and improvement (IRCI) algorithm. Section 4 compares IRCI computation time and solution quality against available benchmarked solutions. Section 5 discusses IRCI algorithmical properties. Section 6 ends with conclusions. 2. Literature review Heuristics to solve the VRP with time windows can be classified (in increasing order of solution quality) as construction heuristics, local search heuristics, and metaheuristics. Metaheuristics generally produce solutions of higher quality but this is usually at the expense of significantly longer computation times. There is a clear tradeoff between computation time and solution quality. Route construction algorithms work by inserting customers one at a time into partial routes until a feasible solution is obtained. Construction heuristics include the work of Solomon, 1987 , Potvin and Rousseau, 1993  and  Ioannou et al., 2001 . Local search methods improve on feasible solutions performing exchanges within a neighborhood while maintaining the feasibility of the solutions. Some of the most successful local improvement methods include the algorithms proposed by Russell, 1995 , Caseau and Laburthe, 1999 , Cordone and Calvo, 2001 , Braysy, 2002  and  Ibaraki et al., 2005 . The method proposed by Cordone and Calvo (2001) is a relatively simple deterministic heuristic based on the iterative application of k-opt exchanges combined with an insertion (or simple ejection chain) procedure to reduce the number of routes. The IRCI is also based on an iterative application of algorithms, i.e. route construction and improvement algorithms. However, the IRCI is not a local search method but a route based method as detailed in Section 3 . Metaheuristics include a diverse set of methods such as simulated annealing, genetic algorithms, tabu search, ant-colony, and constraint programming. Some of the most successful metaheuristics include the algorithms proposed by Taillard et al., 1997 , Liu and Shen, 1999 , Homberger and Gehring, 1999 , Berger et al., 2003  and  Braysy, 2003 . Recent publications include the work of Hashimoto and Yagiura (2008) that proposed a path relinking approach with an adaptive mechanism to control parameters where the generated solutions in the path relinking are improved by a local search. Hsu et al. (2007) proposed an algorithm tailored to the problem of perishable food distribution. For additional references and a review of the large body of VRPHTW research the reader is referred to a recent comprehensive survey by Braysy and Gendreau, 2005a  and  Braysy and Gendreau, 2005b . The body of work related to the VRPSTW is relatively scant. Early work on the topic includes the work of Sexton and Choi (1986) using Benders decomposition to solve a single-vehicle pickup and delivery routing problem. Ferland and Fortin (1989) solves a variation of the VRPSTW where customers’ time windows are adjusted to lower service costs. Koskosidis et al. (1992) proposes a generalized assignment problem of customers to vehicles and a series of traveling salesman problems with soft time windows constraints. Balakrishnan (1993) proposes construction heuristics for the VRPSTW based on the nearest neighbor, Clarke and Wright savings, and space–time rules algorithms. The heuristics are tested on a subset of the Solomon set problems for hard time windows using linear penalty functions. Taillard et al. (1997) propose a tabu search heuristic to solve a VRPSTW as proposed by Balakrishnan, i.e. with linear penalty functions. The tabu search algorithm produced very good results on the Solomon set with hard time windows; however, no results are reported for the VRPSTW. Ioannou et al. (2003) solves Solomon problems and extended Solomon problems of up to 400 customers with a nearest neighbor that generates and modifies customer time windows to find lower cost solutions; no computation times are reported. Chiang and Russell (2004) uses a tabu search approach with a mixed neighborhood structure and advance recovery to find some of the best solutions ever reported for Solomon VRPSTW instances. The algorithm designed by Ibaraki et al. (2005) is another metaheuristic that could handle soft time-window constraints and penalties using a local search based on a cyclic-exchange neighborhood to assign and sequence customers; only results for instances with hard time windows are reported. Calvete et al. (2007) propose a goal programming approach to the vehicle routing and solve medium size problems (less than 70 customers) with soft and hard time windows, a heterogeneous fleet of vehicles, and multiple objectives. Hashimoto et al. (2006) proposes an algorithm for flexible time windows (hard and soft) and travel times using local search; soft time window and soft traveling time constraints are treated as part of the objective function and the authors deal with a generalized VRP. Fu et al. (2008) adapted a tabu search algorithm, previously used in the open vehicle routing problem ( Fu et al., 2005 ), for the VRPSTW. It is assumed in the literature that fixed costs associated with each additional route (vehicle) outweigh travel time or distance related costs, i.e. a multi-objective hierarchical approach to evaluate solutions. For VRPSTW problems, it is assumed that the primary objective is the minimization of vehicles, the secondary objective is the minimization of the number of soft time windows used, and the tertiary objective is the minimization of distance travel. Although this rigid hierarchy facilitates benchmarking, in real-world situations it is possible that only a subset of customers may allow soft time windows. Hence, practical problems may consist of a mix of hard and soft time windows. It is valuable that solution approaches can deal with both types of time windows. As indicated by Braysy and Gendreau, 2005a  and  Braysy and Gendreau, 2005b , fair and meaningful comparisons of vehicle routing heuristics require standard benchmark problems, common objective functions, and the full reporting of: (a) solution quality, (b) number of runs needed and computation time per run, and (c) computing power or processor speed. To the best of the author’s knowledge, the only three journal publications that include results for VRPSTW benchmark problems and comply with prerequisites (a)–(c) are: Balakrishnan, 1993 , Chiang and Russell, 2004  and  Fu et al., 2008 . Section 4 compares IRCI results with previous results found in the VRPSTW literature in terms of solution quality and computational time. 3. Problem definition and solution algorithm This section begins with an introduction of a precise mathematical definition of the problems studied in this research. The remainder of this section describes the solution algorithm.