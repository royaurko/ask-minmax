Password: The Vehicle Routing Problem with Multiple Trips is an extension of the classical Vehicle Routing Problem in which each vehicle may perform several routes in the same planning period. In this paper, an adaptive memory algorithm to solve this problem is proposed. Computational experience is reported over a set of benchmark problem instances. Keywords Vehicle routing ; Multiple trips ; Adaptive memory procedure 1. Introduction The problem of distributing goods from depots to final consumers plays an important role in the management of many distribution systems, and its adequate programming may produce significant savings. The Vehicle Routing Problem (VRP) and its many variations have been subject of research during the last four decades. Some well studied characteristics include the existence of demands, time windows and heterogeneous vehicles [1] . However, some aspects that arise in real applications have not received much attention in the Operations Research literature. For instance, it usually assumed that each vehicle may perform at most one route in the same planning period, and in many cases the number of available vehicles is supposed to be unlimited. In many practical applications, this assumptions are unrealistic. When the vehicle capacity is small or when the planning period is large, performing more than one route per vehicle may be the only practical solution. In urban areas, where travel times are rather small, it is often the case that after performing short tours vehicles are reloaded and used again. The Vehicle Routing Problem with Multiple Trips (VRPMT) overcomes the mentioned limitations, besides considering the classic VRP constraints. Solving the VRPMT not only implies the design of a set of routes, but the assignment of those routes to the available vehicles. This makes the VRPMT a very practical problem, specially at an operational level, in which daily driver schedules must be designed for a fixed vehicle fleet. In this paper we describe a heuristic to solve the VRPMT, which is based on the Adaptive Memory Procedure (AMP) proposed by Rochat and Taillard [2] . A definition of the VRPMT is given in Section 2 , as well as a literature review. The proposed algorithm is described in Section 3 . Computational behavior of the algorithm is reported and analyzed in Section 4 , while conclusions and future work are considered in Section 5 . 2. The VRP with multiple trips Let G=(V,E) G = ( V , E ) be a graph where V={0,1,…,n} V = { 0 , 1 , … , n } is the set of nodes and E⊆V×V E ⊆ V × V is the set of arcs. If (i,j)∈E ( i , j ) ∈ E , then it is possible to travel from i to j   , incurring in a cost c ij c ij and a travel time t ij t ij . Node 0 represents a depot where a fleet K={1,…,m} K = { 1 , … , m } of identical vehicles is based. Each vehicle has a limited capacity Q   . The nodes in V⧹{0} V ⧹ { 0 } represent customers, each one having a demand q i q i . Finally, there exists a time horizon, denoted by T , which establishes the duration of a working day. It is assumed that Q   , q i q i and T are nonnegative integers. The VRPMT calls for the determination of a set of routes and an assignment of each route to one vehicle, which minimizes the total routing costs and satisfies the following conditions: (1) each route starts and ends at the depot, (2) each customer is visited by exactly one route, (3) the demand of the customers in the same route does not exceed Q , (4) the duration of routes assigned to the same vehicle does not exceed T . The VRPMT is a generalization of the VRP: any VRP instance can be transformed to an equivalent VRPMT instance, setting m=n m = n and T=∑ (i,j)∈E t ij T = ∑ ( i , j ) ∈ E t ij . As the VRP is an NP-Hard problem [3] , the VRPMT is also NP-Hard. The computational complexity of the VRPMT justifies the use of heuristics to solve instances of realistic size in moderate computation times. 2.1. Literature review Fleischmann [4] was first one to address the problem. He proposed a modification to the savings algorithm [5] and used a Bin Packing Problem (BPP) [6] heuristic to assign the routes to the vehicles.