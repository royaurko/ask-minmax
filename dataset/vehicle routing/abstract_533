Password: This paper introduces a class of cuts, called reachability cuts , for the Vehicle Routing Problem with Time Windows (VRPTW). Reachability cuts are closely related to cuts derived from precedence constraints in the Asymmetric Traveling Salesman Problem with Time Windows and to k -path cuts for the VRPTW. In particular, any reachability cut dominates one or more k -path cuts. The paper presents separation procedures for reachability cuts and reports computational experiments on well-known VRPTW instances. The computational results suggest that reachability cuts can be highly useful as cutting planes for certain VRPTW instances. Keywords Routing ; Time windows ; Precedence constraints 1. Introduction The Vehicle Routing Problem with Time Windows (VRPTW) can be defined as follows. Let G  = ( V ,  A ) be a directed graph, with vertex set V  = {0, … ,  n } and arc set A . Vertex 0 represents a depot, whereas each of the vertices in V c  = {1, … ,  n } represents a customer. Each customer i has a time window [ r i ;  d i ] within which service at customer i must begin. A vehicle is permitted to arrive earlier than r i to a customer i , in which case it will wait until service begins at time r i . Late arrivals, i.e., after d i , are not permitted. The depot has a time window [ r 0 ;  d 0 ] within which each route must begin and end at the depot. With each arc ( i ,  j ) ∈  A is associated a travel cost c ij and a travel time t ij , which includes any service time at vertex i . No assumptions are made with respect to the triangle inequality on travel times, but it is assumed that all travel times are nonnegative. Each customer i demands a quantity of q i  > 0 units of a common product to be delivered from the depot. A fleet of vehicles, each with a capacity Q is available for making the deliveries. No vehicle can serve a set of customers whose total demand exceeds Q . The objective is to find a collection of routes, of minimum total travel cost, each beginning and ending at the depot, such that each customer is serviced exactly once, subject to the time window restrictions and capacity constraints. The VRPTW can be formulated mathematically in various ways. One possibility is to use a Set Covering (SC) or Set Partitioning (SP) formulation, in which variables represent routes. In the literature this appears to be the dominating approach to the VRPTW, in particular on instances with tight time windows. Indeed, in [7] the SP formulation is presented as being the basis of the most successful algorithms for the VRPTW. Approaches based on SC and SP formulations are discussed in [8] . Alternatively, a polyhedral approach based on a two-index vehicle-flow formulation, where a 0–1 decision variable is associated with each arc in the graph, can be adopted. This formulation underlies the branch-and-cut algorithm in [5] , designed for minimizing the number of routes in the VRPTW. The two-index formulation and related projection results are recently considered in [12] . This paper also considers the two-index vehicle-flow formulation, for which we introduce a new class of cuts called reachability cuts . Intuitively, they can be viewed as a strengthening of k -path inequalities, where the strengthening results from the fact that—due to the time windows—only certain arcs can be traversed on a route which services a given customer. In addition, the paper also presents procedures for the separation of these cuts. In order to investigate the potential of the new class of cuts, we have implemented a cutting-plane algorithm for which we present computational results obtained on the well-known 87 instances of Solomon [15] . 2. Notation and modelling To simplify notation throughout the paper, we make the following definitions for any S  ⊂  V : δ + ( S ) = { ( i , j ) ∈ A | i ∈ S , j ∈ V ⧹ S } , δ - ( S ) = { ( i , j ) ∈ A | i ∈ V ⧹ S , j ∈ S } , where for further notational simplicity we write δ + ( i ) and δ − ( i ) instead of δ + ({ i }) and δ − ({ i }), respectively. Further, for any S  ⊆  V c we let r ( S ) denote the minimum number of vehicles required to load the demands of the customers in S . That is, r ( S ) is the optimum solution to the Bin Packing Problem (BPP) with bin capacity Q and item sizes given by the demands of the customers in S . Moreover, a path P  = ( v 1 , … ,  v k ), with arc set A P  = {( v i ,  v i +1 )∣ i  = 1, … ,  k  − 1}, is called infeasible if it is not possible to respect all its time windows while traversing the path, otherwise it is called feasible. In the paths that we consider, all vertices { v 1 , … ,  v k } are assumed to be different, with the exception that both v 1 and v k may be the depot. We call an infeasible path minimal if and only if both subpaths obtained by removing its first and last vertex, respectively, are feasible. Note that our distinction between feasible and infeasible paths is concerned only with temporal aspects.