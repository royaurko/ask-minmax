Password: The vehicle routing problem (VRP) plays a central role in the optimization of distribution networks. Since some classical instances with 75 nodes resist the best exact solution methods, most researchers concentrate on metaheuristics for solving real-life problems. Contrary to the VRP with time windows, no genetic algorithm (GA) can compete with the powerful tabu search (TS) methods designed for the VRP. This paper bridges the gap by presenting a relatively simple but effective hybrid GA. In terms of average solution cost, this algorithm outperforms most published TS heuristics on the 14 classical Christofides instances and becomes the best solution method for the 20 large-scale instances generated by Golden et al. Scope and purpose The framework of this research is the development of effective metaheuristics for hard combinatorial optimization problems met in vehicle routing. It is surprising to notice in the literature the absence of effective genetic algorithms (GA) for the vehicle routing problem (VRP, the main capacitated node routing problem), contrary to node routing problems with time windows or arc routing problems. Earlier attempts were based on chromosomes with trip delimiters and needed a repair procedure to get feasible children after each crossover. Such procedures are known to weaken the genetic transmission of information from parents to children. This paper proposes a GA without trip delimiters, hybridized with a local search procedure. At any time, a chromosome can be converted into an optimal VRP solution (subject to chromosome sequence), thanks to a special splitting procedure. This design choice avoids repair procedures and enables the use of classical crossovers like OX. The resulting algorithm is flexible, relatively simple, and very effective when applied to two sets of standard benchmark instances ranging from 50 to 483 customers. Keywords Vehicle routing problem ; Genetic algorithm 1. Introduction The vehicle routing problem (VRP) is defined on a complete undirected network G =( V , E ) with a node set V ={0,1,…, n } and an edge set E . Node 0 is a depot with m identical vehicles of capacity W,m can be fixed a priori or left as a decision variable. Each other node i >0 represents a customer with a non-negative demand q i and each edge ( i , j ) has a non-negative travel cost c ij = c ji . The VRP consists of determining a set of m vehicle trips of minimum total cost, such that each trip starts and ends at the depot, each client is visited exactly once, and the total demand handled by any vehicle does not exceed W . In practice, customers are disseminated over a large road network and the cost on each edge is generally a mileage or a travel time. This real problem is contracted into a VRP by keeping the depot and client nodes and by computing the shortest path costs c ij using Dijkstra's algorithm for instance (see [1] , for an efficient implementation). The VRP is NP-hard and some Euclidean instances with 75 nodes are not yet solved to optimality [2] . Therefore, heuristic algorithms are required for tackling real-life instances. The simplest and fastest methods are simple constructive heuristics like the classics proposed by Clarke and Wright, Mole and Jameson, and Gillett and Miller: see Laporte et al. [3] for a recent survey extended to tabu search algorithms, and Christofides et al. [4] , for an earlier review. Metaheuristics provide much better solutions, especially on large-scale instances. Two excellent surveys for this very active research area are provided by Gendreau et al. [5] and by Golden et al. [6] . They show that the best metaheuristics for the VRP are powerful tabu search (TS) algorithms that easily outperform other metaheuristics like simulated annealing (SA), genetic algorithms (GA) and ant algorithms. Concerning genetic algorithms, Van Breedam and Schmitt are worth citing. Van Breedam [7] measures the impact of various parameters on a GA and an SA and compares the two algorithms with a previously developed TS. His chromosomes contain one substring per trip and multiple copies of the depot used as trip delimiters. The crossover extends the classical order-based crossover PMX [8] and may produce infeasible children that are rejected. Van Breedam reports comparable results for the three algorithms, but the study is conducted on his own set of instances and no comparison is provided with metaheuristics already evaluated in the literature. Schmitt [9]  and  [10] designed a GA with TSP-like permutation chromosomes (that is, without trip delimiters). The fitness is computed by scanning the chromosomes from their first customer onwards: a new trip is created each time the next customer cannot fit the current trip. Using the OX crossover [11] , Schmitt evaluates his GA on the 14 classical instances proposed by Christofides et al. [4] with disappointing results: the GA easily outperforms the Clarke and Wright heuristic but cannot compete with some constructive heuristics combined with steepest descent improvement procedures. In fact, several authors like Gendreau [5] underline the lack of competitive GA for the VRP. This situation seems abnormal since efficient GAs are available both for a simpler problem like the Traveling Salesman Problem or TSP [12] and for an extension like the VRP with time windows or VRPTW [13]  and  [14] . The goal of this paper is to remedy this anomaly by presenting a relatively simple but effective hybrid GA for a version of the VRP specified in Section 2 . Section 3 underlines some key-points essential for the GA efficiency. The chromosomes and their evaluation are described in Section 4 , while 5 , 6 , 7  and  8 are, respectively, devoted to the crossover, to the local search used as mutation operator, to the population structure and to the GA iterations. A computational evaluation is presented in Section 9 . 2. Problem treated and assumptions The classical benchmarks used in Section 9 for testing comprise a few distance-constrained VRP (DVRP) instances: each customer is associated with a non-negative delivery cost d i and the total cost of each trip (travel costs plus delivery costs) may not exceed a fixed limit L . This is why our GA is designed for the DVRP. Of course, it can solve the pure VRP by setting all d i to 0 and L to a huge value. equation ( 3 ) In the sequel, the number of vehicles m is a decision variable, the costs are real numbers and the cost matrix satisfies the triangle inequality (1) . To guarantee the existence of feasible solutions, the input data satisfy condition (2) (no demand must exceed vehicle capacity) and condition (3) (a return trip to each customer must be possible within the limit L ). The goal is to minimize total cost of the trips. As we shall see, the GA is flexible enough to handle more complicated objectives. 3. Outline of key-points in the GA design Our GA for the DVRP is based upon the following key-ideas, developed in the following sections: K1. TSP-like permutation chromosomes, without trip delimiters. K2. Exact fitness computation using a splitting procedure. K3. Small population in which all individuals are distinct. K4. Inclusion of good heuristic solutions in the initial population. K5. Improvement procedure as mutation operator (hybrid GA). K6. Incremental management of the population. K7. Main exploration phase followed by a few short restarts. Points 3–7 were already combined by Prins into a very efficient GA for the open-shop scheduling problem [15] . This GA outperforms two other GAs and three TS algorithms. It is still the only algorithm able to solve to optimality 30 instances with 100, 225 and 400 tasks proposed by Taillard, except one for which the best-known solution is improved. More recently, Lacomme et al. [16] have applied the same ideas, plus ideas 1–2 specific to vehicle routing, to the capacitated arc routing problem (CARP). There again, the resulting GA performs very well on classical benchmark problems: two thirds are solved to optimality and eight best-known solutions are improved. The lack of competitive GA was the main motivation for trying these successful ideas on the DVRP.