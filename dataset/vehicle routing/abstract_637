  One of the major research topics in the supply chain management field is the multi-depot vehicle routing problem with time windows (m-VRPTW). It aims to designing a set of minimum-cost routes for a vehicle fleet servicing many customers with known demands and predefined time windows. This paper presents an m-VRPTW local search improvement algorithm that explores a large neighborhood of the current solution to discover a cheaper set of feasible routes. The neighborhood structure comprises all solutions that can be generated by iteratively performing node exchanges among nearby trips followed by a node reordering on every route. Manageable mixed-integer linear programming (MILP) formulations for both algorithmic steps were developed. To further reduce the problem size, a spatial decomposition scheme has also been applied. A significant number of large-scale benchmark problems, some of them including up to 200 customers, multiple depots and different vehicle-types, were solved in quite reasonable CPU times. Keywords Supply chain management ; Vehicle routing ; Improvement algorithm ; MILP-formulations 1. Introduction The supply chain management problem covers the entire process of moving raw materials and input requirements from suppliers to plants, converting them into products at processing plants, shipping the finished products to several warehouses, and subsequently delivering them to the final customers. Effective supply chain management (SCM) should deal with a variety of decisions at the strategic, tactical and operational levels. Structural decisions concerning the location of facilities, like production plants or warehouses, may be viewed as strategic, while the problem of determining the fleet size and the vehicle-type mix could be regarded as tactical. At the operational level, the routing and scheduling of vehicles/vessels and the crew assignment are to be selected on a daily basis. Logistic costs for the chemical industry are often considerable and sometimes as large as 20% of the purchasing costs ( Jetlund & Karimi, 2004 ). Moreover, logistic expenses directly related to transport operations and crew salaries constitute a large portion of the total distribution cost. Consequently, better routes and schedules for vehicles/vessels transporting products from production sites to depots and from depots to clients may result in substantial cost savings over a number of years. As a result, logistics has become an issue of increasing importance to the chemical industry in reducing costs. Typical SCM-industrial cases at the operational level reported in the literature involve the delivery of refined products from depots to gasoline stations through using a fleet of multi-parcel trucks ( Van der Bruggen, Gruson, & Salomon, 1995 ), the scheduling of multi-compartment chemical carriers transporting chemicals between upstream and downstream refineries and manufacturers ( Jetlund & Karimi, 2004 ), the dispatching of either crude oil to refineries or refined products to industrial users through tankers and barges ( Fagerholt, 2004 ), and the fresh milk transportation from hundreds of dairy farms to processing plants and the delivery of dairy products from the central warehouse to retail outlets ( Tarantilis & Kiranoudis, 2007 ). Practical approaches to the vehicle routing problem (VRP) mostly apply heuristic approximate algorithms providing good solutions within a reasonable computer time. Heuristic methods can be classified into three broad categories: tour-construction procedures, tour-improvement procedures and composite procedures ( Bodin, Golden, Assad, & Ball, 1983 ). Tour construction procedures generate a good set of vehicle routes from the node-to-node distance matrix. Route improvement procedures generally start with a non-optimal set of feasible tours and seek out a better solution by performing local perturbations on the initial routes. Almost all VRP improvement algorithms iteratively use some version of a local search method to obtain a new set of lower-cost, feasible vehicle routes. They range from simple improvement heuristics to modern metaheuristics like simulated annealing, tabu search and genetic algorithms ( Papadimitrou & Steiglitz, 1982 ; Gendreau, Laporte, & Potvin, 1994 ). Routing improvement procedures generally assume symmetric traveling costs ( c ij  =  c ji ). On the other hand, composite or two-phase algorithms first construct an initial solution and then attempt to improve it using one or several tour improvement techniques. The other alternative to deal with vehicle routing problems is the use of exact approaches based on mixed-integer linear (MILP) or mixed-integer non-linear (MINLP) mathematical formulations ( Ball, Magnanti, Monma, & Nemhauser, 1995 ). Most of the exact approaches can be regarded as route construction methods. One of the most important features of a VRP improvement algorithm is the local search technique that it applies. A local search algorithm is basically a neighborhood search procedure that analyzes a set of feasible points within the neighborhood of the current solution and finds a better neighbor. Though the definition of the neighborhood structure varies with the local search approach, the set of neighbors is generally obtained from the current solution by doing a limited number of moves. Different types of improvement moves can be applied like string exchange, string relocation and string cross. String exchange means the exchange of two strings with at most k nodes within the same route or between neighboring routes. String relocation consists of moving a string of at most k nodes (with k  = 1–2) from one to another route. String cross is performed when two strings of vertices on two different routes are exchanged by crossing two edges of such routes. Therefore, the improvement procedure may operate on either an individual route or several routes at a time. A critical issue is the choice of the neighborhood structure, i.e. the way in which the neighborhood around the current solution is defined. Generally, the larger the neighborhood, the better is the quality of the best neighbor and the higher is the likelihood of converging to the truly optimal solution. At the same time, the larger the neighborhood, the longer the time it takes to search the neighborhood at each iteration. Therefore, a large neighborhood is not always the best option unless it is explored in a very efficient manner ( Ahuja, Ergun, Orlin, & Punnen, 2002 ). Sometimes, the neighborhood is generated by weakly modifying the current solution in only two or three edges per iteration. As a result, a local optimum that is very dependent on the initial solution is found and a little improvement is generally achieved. On the contrary, this paper is especially interested on local search algorithms that efficiently explore a large neighborhood so as to provide a set of feasible tours much cheaper than the starting routes. Interesting surveys on classical and modern heuristic-based improvement methods for the vehicle routing problem with time windows (VRPTW) can be found in Laporte, Gendreau, Potvin, and Semet (2000) and Ahuja et al. (2002) . The neighborhood structure for the classical interchange procedure proposed for the traveling salesman problem (TSP) can be built by randomly breaking a trip at k points into k paths and reconnecting them in all possible ways. This is a variable-depth search method known as the k -OPT procedure ( Lin & Kernighan, 1973 ). For k  = 3, eight different trips can be generated. If a better route among them is identified, it is adopted. If not, the value of k may be increased. The procedure stops at a local minimum when no further improvement can be obtained. Van der Bruggen, Lenstra, and Schuur (1993) developed a local search improvement procedure exploring larger neighborhoods. The neighborhood structure is built by making arc-exchanges on individual trips, i.e. the interchange of k arcs in a route by some other k arcs on the same route. If a route cannot be improved by k -exchange is said to be k -optimal. The most used are 2-exchange, 3-exchange and Or-exchange operations with the later being a special 3-exchange move in which only strings of one, two or three consecutive nodes are relocated on the same route ( Or, 1976 ). On the other hand, cyclic transfer is a neighborhood search technique developed for multi-vehicle routing and scheduling problems ( Thompson & Psaraftis, 1993 ). It improves the set of vehicle routes by exchanging some k nodes among b routes according to a cyclic scheme, i.e. a b -cyclic k -transfer exchange. Usually, it is adopted b  = 2 and k  = 1–2. Given some routes ( r 1, r 2, r 3), a cyclic transfer consists of moving a certain number of requests k from route r 1 to route r 2, a similar one from route r 2 to r 3 and, finally, k customers will be moved from route r 3 to route r 1. Therefore, the cyclic-transfer neighborhood of a given solution s is the set of feasible routing networks that are reachable from solution s via cyclic transfer. It is said that s is a cyclic-transfer optimum if no member of the cyclic-transfer neighborhood has a better objective function value. Xu and Kelly (1995) used three different types of moves to define the neighborhood structure: swaps of nodes between a pair of routes, a global repositioning of some nodes into other routes and, finally, local route improvements. The node global repositioning is achieved by solving a network flow model to optimally relocate a given number of customers into different routes. Local route reoptimizations are performed by means of 3-opt exchanges and a TSP improvement strategy. Van Breedam (1994) identified a set of four parameters that substantially influence the computational behavior of local improvement procedures: (i) the initial solution, (ii) the type of string moves and the string length k , (iii) the improvement strategy for choosing the next starting solution, i.e. the first-improvement (FI) or the best-improvement (BI) policies, and (iv) the extent of the search procedure within the neighborhood of the current solution. The FI-strategy consists in adopting the first neighboring solution that improves the objective function as the next starting solution while the best-improvement strategy (BI) chooses the best neighbor. Van Breedam concludes that better results are found in terms of both solution quality and computing time by: (1) initiating the search from a good solution, (2) performing string exchanges with a string length k equals 2.