Password: In this paper, we present an approach, based on dynamic programming, for solving the 0–1 multi-objective knapsack problem. The main idea of the approach relies on the use of several complementary dominance relations to discard partial solutions that cannot lead to new non-dominated criterion vectors. This way, we obtain an efficient method that outperforms the existing methods both in terms of CPU time and size of solved instances. Extensive numerical experiments on various types of instances are reported. A comparison with other exact methods is also performed. In addition, for the first time to our knowledge, we present experiments in the three-objective case. Keywords Multi-objective knapsack problem ; Non-dominated criterion vectors ; Efficient solutions ; Dynamic programming ; Dominance relations ; Combinatorial optimization 1. Introduction In multi-objective combinatorial optimization, a major challenge is to develop efficient procedures to generate efficient solutions, that have the property that no improvement on any objective is possible without sacrificing on at least another objective. The aim is thus to find the efficient set (which consists of all the efficient solutions) or, more often, a reduced efficient set (which consists of only one solution for each non-dominated criterion vector). A survey and an annotated bibliography about multi-objective combinatorial optimization can be found in [1] and [2] . This paper deals with a particular multi-objective combinatorial optimization problem: the 0–1 multi-objective knapsack problem. The single-objective version of this problem has been studied extensively in the literature (see, e.g., [3]  and  [4] ). Moreover, in the multi-objective case, many real-world applications are reported dealing with capital budgeting [5] , selection of transportation investment alternatives [6] , relocation issues arising in conservation biology [7] , and planning remediation of contaminated lightstation sites [8] . Several exact approaches have been proposed in the literature to find the efficient set or a reduced efficient set for the multi-objective knapsack problem. We first mention a theoretical work [9] , without experimental results, where several dynamic programming (DP) formulations are presented. Two specific methods, with extensive experimental results, have been proposed: the two-phase method including a branch and bound algorithm proposed in [10] , and the method of Captivo et al. presented in [11] , based on a transformation of the problem into a bi-objective shortest path problem which is solved using a labeling algorithm. We can also mention the recent work of Silva et al. [12] . All these methods have been especially designed for the bi-objective case. Besides exact methods investigated in this paper, approximation algorithms [13] and metaheuristics [14] , [15]  and  [16] have been proposed. In this paper, we present a new approach based on DP. The main idea of the approach relies on the use of several complementary dominance relations to discard partial solutions that cannot lead to new non-dominated criterion vectors. Using conjointly complementary dominance relations, each of which focuses on specific aspects, make the approach quite efficient. This way, we obtain a method that outperforms the existing methods both in terms of CPU time and size of solved instances (up to 4000 items in less than 2 h in the bi-objective case). In our experiments, we compare our approach with the method proposed in [11] , which is the most efficient method currently known, and with an exact method based on a commercial Integer Programming solver. In addition, for the first time to our knowledge, we present experiments in the three-objective case. This paper is organized as follows. In Section 2 , we review basic concepts about multi-objective optimization and formally define the multi-objective knapsack problem. Section 3 presents and establishes the validity of a DP approach based on several dominance relations. Section 4 is devoted to implementation issues. Computational experiments and results are reported in Section 5 . Conclusions are provided in a final section. Consider a multi-objective optimization problem with p criteria or objectives where X   denotes the finite set of feasible solutions. Each solution x∈X x ∈ X is represented in the criterion space by its corresponding criterion vector f(x)=(f 1 (x),…,f p (x)) f ( x ) = ( f 1 ( x ) , … , f p ( x ) ) . We assume in the following that each criterion has to be maximized.