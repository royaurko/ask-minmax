  Many combinatorial optimization problems are known to be NP-complete. A common point of view is that finding fast algorithms for such problems using polynomial number of processors is unlikely. However, facts of this kind usually are established for “worst” case situations and in practice many instances of NP-complete problems are successfully solved in polynomial time by such traditional combinatorial optimization techniques as dynamic programming and branch-and-bound. New opportunities for effective solution of combinatorial problems emerged with the advent of parallel machines. In this paper we describe an algorithm which generates an optimal solution for the 0/1 integer Knapsack problem on the NCUBE hypercube computer. It is also demonstrated that the same algorithm can be applied for the two-dimensional 0/1 Knapsack problem. Experimental data which support the theoretical claims are provided for large instances of the one- and two-dimensional Knapsack problems. References 1. P.S. Gopalakrishnan, I.V. Ramakrishnan, L.N. Kanal Parallel approximate algorithms for the 0-1 knapsack problem Proc. International Conference on Parallel Processing (1986), pp. 444–451 2. J.P. Hayes, T.N. Mudge, Q.F. Stout, S. Colley, J. Palmer Architecture of a hypercube supercomputer Proc. International Conference on Parallel Processing (1986), pp. 653–660 3. G. Li, B.W. Wah Systolic processing for dynamic programming problems Proc. International Conference on Parallel Processing (1985), pp. 434–441 4. R.J. Lipton, D. Lopresti Delta transformations to simplify VLSI processor arrays for serial dynamic programming Proc. International Conference on Parallel Processing (1986), pp. 917–920 5. J. Peters, L. Rudolph Parallel approximation schemes for subset sum and Knapsack problems 22nd Annual Allerton Conference on Communication, Control and Computing (1984), pp. 671–680 6. A.C.-C. Yao On the parallel computation for the Knapsack problem 13th Annual ACM Symposium on Theory of Computing (1981), pp. 123–127 7. E. Horowitz, S. Sahni Fundamentals of Computer Algorithms This research was supported in part by the National Science Foundation under Grants MCS83-05567 and DCR84-20935. † Currently with AT&T Bell Laboratories, Allentown, PA. Copyright © 1988 Published by Elsevier Inc.