A time–memory-processor tradeoff for the knapsack problem is proposed. While an exhaustive search over all possible solutions of an n-component knapsack requires T = 0(2n) running time, our parallel algorithm solves the problem in O(2n/2) operations and requires only 0(2n/6) processors and memory cells. It is an improvement over previous time–memory-processor tradeoffs, being the only one which outperforms the CmCs = 2" curve. Cm is the cost of the machine, i.e., the number of its processors and memory cells, and C, is the cost per solution, which is the product of the machine cost by the running time.