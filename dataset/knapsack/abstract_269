Password: The paper describes a computational experiment which goal is to evaluate computational efficiency of three multiple objective evolutionary metaheuristics on the multiple objective multiple constraints knapsack problem. The relative efficiency of the multiple objective algorithms is evaluated with respect to a single objective evolutionary algorithm (EA). We use a methodology that allows consistent evaluation of the quality of approximately Pareto-optimal solutions generated by both multiple and single objective metaheuristics. Then, we compare computational efforts needed to generate solutions of approximately the same quality by the two kinds of methods. The results indicate that computational efficiency of multiple objective EAs deteriorates with the growth of the number of objectives. Furthermore, significant differences in the performance of the three algorithms are observed. Keywords Multiple objective programming ; Combinatorial optimization ; Metaheuristics Many real-life optimization problems require taking into account multiple points of view corresponding to multiple objectives. Research activities within the area of multiple objective optimization (MOO) traditionally concentrated on multiple objective linear programming (MOLP) (see e.g. [26]  and  [32] ). In recent years, the demand for new applications and the increasing power of computers resulted in growing interest in computationally hard MOO problems, e.g. nonlinear and combinatorial optimization problems. Problems of this kind are difficult to solve even in the single objective case. Following the success of metaheuristics in the single objective optimization (see e.g. [22]  and  [23] ) many researchers proposed the use of metaheuristics in MOO. At present, multiple objective metaheuristics (MOMHs), e.g. evolutionary algorithms (EAs), tabu search, simulated annealing, constitute one of the most active areas of research in the field of MOO (see e.g. [2] , [5]  and  [8] ). The goal of such methods is to generate a set of approximately Pareto-optimal solutions, being a good approximation of the whole or a part of the nondominated set, in a single run. A number of comparative studies involving various MOMHs have been reported in the literature [3] , [10] , [18]  and  [34] . It should be stressed, however, that MOMHs should not be compared only with other methods of the same type. The methods should also be evaluated with respect to alternative approaches to MOO, e.g. general-purpose mathematical programming solvers, specialized exact or heuristic methods, and single objective metaheuristics (SOMHs) applied to the generation of approximately Pareto-optimal solutions. In this paper we focus on the last issue. Metaheuristics may be used in many ways to generate approximately Pareto-optimal solutions in the multiple objective context. In fact, the most direct adaptation of the conventional MOO approach relies on the use of a SOMH to generation of such solutions [26] . The general idea is to formulate a substitute single objective problem which optimum is guaranteed to be a (weakly) Pareto-optimal solution of the original multiple objective problem. A typical example is optimization of a scalarizing function on the feasible set of the original multiple objective problem [26]  and  [31] . Obviously, SOMHs can be applied to such substitute single objective problems. In this case, there is no warranty, however, that the suboptimal solutions of the substitute problem will be Pareto-optimal solutions of the original problem. Thus, alike in the case of MOMHs, SOMHs generate approximately Pareto-optimal solutions. In this paper, we use a technique for comparison of computational efficiency of MOMHs and SOMHs proposed originally in [13] . The idea of the technique is to compare computational efforts needed by a MOMH and a SOMH to generate approximately Pareto-optimal solutions of the same quality. We describe a computational experiment on the multiple objective multiple constraints knapsack problem (MOMCKP). We compare three multiple objective EAs controlled elitist nondominated sorting genetic algorithm (CENSGA) [6] , strength Pareto evolutionary algorithm (SPEA) [34] and Pareto memetic algorithm (PMA) [11] with a standard single objective EA. MOMCKP is one of the standard test problems for MOMHs (see e.g. [14]  and  [34] ). Single objective knapsack problem is NP-hard already in its basic version with single knapsack. In practice, however, many of its instances, especially those with wide range of profit/weight ratio can be solved relatively easily by specialized methods and general purpose solvers. In the case of MOMCKP, it allows relatively easy generation of, so called, supported Pareto-optimal solutions, i.e. solutions that can be generated by optimization of a weighted sum of objectives. In general, however, generation of any Pareto-optimal solution, e.g. by optimization of the achievement scalarizing functions may be difficult for state-of-the-art commercial solvers in the case of larger instances (see e.g. [14] ). The paper is organized in the following way. In Section 2 , some basic definitions are given. The evaluation methodology and its interpretations are described in Section 3 . In Section 4 , we describe the SOMH and MOMHs evaluated in this experiment. The adaptation of the metaheuristics to the MOMCKP is characterized in Section 5 . In Section 6 , the design of the computational experiment and its results are presented. Section 7 contains summary. 2. Basic definitions where: solution is a vector of decision variables , D is the set of feasible solutions. If the variables are discrete the MOO problem is called multiple-objective combinatorial optimization (MOCO) problem. The image of a solution in the objective space is a point , such that , j =1,…, J .