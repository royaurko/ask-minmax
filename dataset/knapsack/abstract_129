Geometric Constraint and Cutting planes have been successfully used to solve the 0–1 multidimensional knapsack problem. Our algorithm combines Linear Programming with an efficient tabu search. It gives best results when compared with other algorithms on benchmarks issued from the OR-L ibrary . Embedding this algorithm in a variables fixing heuristic still improves our previous results. Furthermore difficult sub problems with about 100 variables issued from the 500 original ones could be generated. These small sub problems are always very hard to solve. Keywords Variables fixing ; Heuristics ; Linear programming ; Tabu search 1. Introduction The 0–1 multidimensional knapsack problem (01MDK) is a NP-hard problem which arises in several practical problems such as the capital budgeting problem, cargo loading [8]  and  [16] , cutting stock problem, and computing processors allocation in huge distributed systems. It can be stated as follows: where and . The binary components x j of x are decision variables: x j =1 if the item j is selected, 0 otherwise. c j is the profit associated with selecting item j . A ij is the “cost” (in terms of the i th resource) of selecting item j . b i is the budget available for resource i . A specific case of the 01MDK problem is the classical knapsack problem ( m =1), which has been given much attention in the literature [14] though it is not, in fact, as difficult as 01MDK: more precisely, it can be solved in a pseudo-polynomial time. Much research has been conducted around the 01MDK problem. Exact solving of the problem is usually considered in a branch and bound framework, and some schemes were designed to provide good lower and upper bounds to solve the problem optimally. Shih [16] found an upper bound by solving m single constrained knapsack problems, and was able to solve to optimality randomly generated instances with up to five knapsack constraints and ninety variables. Gavish and Pirkul [9] improved significantly these results in a branch and bound framework by using different relaxation techniques and were able to solve instances up to 5 constraints and 200 variables. Due to the intrinsic difficulty (NP-hardness) of the 01MDK problem, which leads to intractable computation time for larger instances, several heuristics have been used to solve it, including simulated annealing [5] , tabu search [11]  and  [12] , and genetic algorithms [2] . Large instances ( n =500, m =30 from OR-L ibrary ) have thus been tackled successfully (i.e. very good lower bounds were obtained). The best known results within these benchmarks were detailed in [17] , [18]  and  [19] . They were resulting from an hybrid algorithm which used global information (the fractional solution to the linear relaxation of the problem) to guide a tabu search phase. The significance of the cut ∑ 1 n x j = k with k integer was also emphasized. Starting from this point, we try to intensify the local search around best promising zones in order to produce better lower bounds. To do so, we have combined this previous algorithm with a problem reduction technique. This requires to select and fix some variables by using “good” points in the search space. Our heuristic is efficient and is able to improve again our previous results [18]  and  [19] on the OR-L ibrary benchmarks. In Section 2 , we remind main principles on which our heuristic is based. Section 3 gives a thorough justification of the rule we used to choose the order in which hyperplanes ∑ 1 n x j = k are examined. In Section 4 , we present the variables fixing heuristic technique called limited branch and bound . In Section 5 , we present experimental results on large instances ( n =500 and m =30). Then, we conclude by highlighting one weakness about our algorithm, and consider further work to be conducted. 2. Previous works reminding The main idea of our previous algorithm [17] , [18]  and  [19] is to search around a fractional optimal solution with additional constraints. Starting from the obviousness that each 01MDK solution verifies the following property: where k is an integer. Adding this constraint to the fractional relaxed 01MDK, we obtain a series of problems such as Several authors used a key parameter called the “number of items”, for solving the simple knapsack problem [14] , and for bounding the number of items at optima [6] , but not directly for solving the 01MDK as we intend to do it. The bounding values of k : k min and k max , are computed by using again two other linear problems: k min is the nearest integer greater or equal to the optimal value of the linear program: and k max is the nearest integer lesser or equal to the optimal value of the following linear program: The 1+ k max − k min fractional optima are considered as promising points around which a tabu search is carried out. Then, to take into account the information provided by these optimal points, but also to reduce the search space which is explored by our tabu algorithm, we have to consider an additional geometric constraint to the neighborhood rule: local search is limited to a sphere of fixed radius around the point which is the optimal solution of the fractional relaxed 01MDK( k ). In summary, each x binary configuration reached by our local search process verifies the two following constraints: 1.1·x=k, Hence a move consists in adding 1 item which was not into the knapsack and, simultaneously, dropping 1 item which was already into the knapscak. Such a move concerns 2 different items also called attributes.