  A processor-efficient parallel algorithm is presented for the 0/1 knapsack problem. The algorithm can run on any number of processors specified by a user and, more importantly, it has optimal time speedup and processor efficiency over the best known sequential algorithm. Most of the existing parallel algorithms for the problem have high processor complexity and low processor efficiency. These algorithms are useful when the problem size is relatively small. One parallel algorithm has been proposed to run on fewer processors but it has much higher time complexity. The parallel algorithm proposed here is more efficient and practical even for large problem sizes. Experimental results on the Connection Machine show that the algorithm performs very well for a wide range of input sizes. 1. R. Bellman, S. Dreyfus Princeton Univ. Press, Princeton, NJ (1962) 2. D.P. Bertsekas, J.N. Tsitsiklis Parallel and Distributed Computation: Numerical Methods Prentice-Hall, Englewood Cliffs, NJ (1989) 3. J. Casti, M. Richardson, R. Larson Dynamic programming and parallel computers J. Optim. Theory Appl., 12 (4) (1973), pp. 423–438 4. M.R. Garey, D.S. Johnson Computers and Intractability: A Guide to the Theory of NP-Completeness Freeman, New York (1979) 5. S. Gensi, U. Montanari, A. Martelli Dynamic programming as graph searching: An algebraic approach J. ACM, 28 (4) (1981), pp. 737–751 6. P.S. Gopalakrishnan, I.V. Ramakrishnan, L.N. Kanal Parallel approximate algorithms for the 0-1 knapsack problem Proc. International Conference on Parallel Processing (1986), pp. 444–451 7. D.W. Hillis The Connection Machine MIT Press, Cambridge, MA (1985) 8. E. Horowitz, S. Sahni Fundamentals of Computer Algorithms Computer Science Press, Rockville, MD (1978) 9. E.L. Lawler Fast approximation algorithms for knapsack problems Math. Oper. Res., 4 (4) (1979), pp. 339–356 10. J. Lee, E. Shragowitz, S. Sahni A hypercube algorithm for the 0/1 knapsack problem J. Parallel Distrib. Comput., 5 (1988), pp. 438–456 11. G. Li, B.W. Wah Systolic processing for dynamic programming problems Proc. International Conference on Parallel Processing (1985), pp. 434–441 12. R.J. Lipton, D. Lopresti Delta transformations to simplify VLSI processor arrays for serial dynamic programming Proc. International Conference on Parallel Processing (1986), pp. 917–920 13. E.W. Mayr Parallel approximation algorithms Proc. International Conference on Fifth Generation Computer Systems (1988), pp. 542–551 14. T. Morin, R. Marsten Branch-and-bound strategies for dynamic programming Oper. Res., 24 (4) (1976), pp. 611–627 15. J. Peters, L. Rudolph Parallel approximation schemes for subset sum and knapsack problems 22nd Annual Allerton Conference on Communication, Control, and Computing (1984), pp. 671–680 16. M.M. Syslo, N. Deo, J.S. Kowalik Discrete Optimization Algorithms Prentice-Hall, Englewood Cliffs, NJ (1983) 17. S. Teng Adaptive parallel algorithms for integral knapsack problems J. Parallel Distrib. Comput., 8 (1990), pp. 400–406 18. B.W. Wah, G. Li, C.F. Yu Multiprocessing of combinatorial search problems Computer, 18 (1985), pp. 93–108 19. D.L. Waltz Applications of the connection machine Computer, 20 (1) (1987), pp. 85–97 20. A.C. Yao On the parallel computation for the knapsack problem 13th Annual ACM Symposium on Theory of Computing (1981), pp. 123–127 This work was supported in part by the National Science Foundation under Grant NCR-8917489. An extended abstract of part of this paper appeared at the 3rd Symposium on the Frontiers of Massively Parallel Computation , Maryland, 1990. Copyright © 1991 Published by Elsevier Inc.