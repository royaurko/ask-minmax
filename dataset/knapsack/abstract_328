A parallel algorithm for solving the knapsack problem on a single-instruction, multiple-data machine with shared memory is presented. The shared memory allows concurrent reading while concurrent writing is forbidden. The knapsack problem is of size n , which the algorithm solves in time T = O ( n ×(2 n/2 ) ε ) when P = O ((2 n/2 ) (1-ε) ), 0&les;ε&les;1, processors are available. It is shown that the algorithm needs S = O (2 n/2 ) memory space in a shared memory. If H (for hardware) is the number of processors plus the number of memory cells used by a parallel algorithm, the parallel algorithm takes a linear time proportional to ( n /2) to find a solution when P = O (2 n/2 ), leading a tradeoff T × H = O (2 n/2 )