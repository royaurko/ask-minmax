  This paper presents a preprocessing procedure for the 0–1 multidimensional knapsack problem. First, a non-increasing sequence of upper bounds is generated by solving LP-relaxations. Then, a non-decreasing sequence of lower bounds is built using dynamic programming. The comparison of the two sequences allows either to prove that the best feasible solution obtained is optimal, or to fix a subset of variables to their optimal values. In addition, a heuristic solution is obtained. Computational experiments with a set of large-scale instances show the efficiency of our reduction scheme. Particularly, it is shown that our approach allows to reduce the CPU time of a leading commercial software. Keywords Dynamic programming ; Integer programming ; Multidimensional knapsack problem ; Variable reduction ; Heuristics 1. Introduction In this paper, we present a preprocesssing scheme for the 0–1 Multidimensional Knapsack Problem (MKP), which can be formulated as max ∑ j ∈ N c j x j s.t . ∑ j ∈ N a ij x j ⩽ b i , i ∈ M , x j ∈ { 0 , 1 } , j ∈ N , where N={1,2,…,n} N = { 1 , 2 , … , n } is the set of items, M={1,2,…,m} M = { 1 , 2 , … , m } is the set of knapsack constraints with capacities b i , associated weights a ij and profits c j . The objective is to find a subset of items that yields a maximum profit. We assume that all the data a ij , b i , c j are non-negative integers and, without loss of generality, that c j >0 c j > 0 , b i >0 b i > 0 , a ij ⩽b i a ij ⩽ b i for all j∈N j ∈ N and all i∈M i ∈ M and ∑ j∈N a ij >b i ∑ j ∈ N a ij > b i for all i∈M i ∈ M . The MKP is typically encountered in the areas of capital budgeting and resource allocation. The paper by Manne and Markowitz [27] is probably one of the earliest references to this problem. Other applications include project selection, cutting stock, loading problems, determining the optimal investment policy for the tourism sector of a developing country, and, more recently, delivery of groceries in vehicles with multiple compartments, approval voting, multi-project scheduling, satellite communications. It also appears in a collapsing problem and as a subproblem in large models for allocating processors and data bases in a distributed computer system. Finally, the MKP model is more and more frequently used as a benchmark to compare general purpose methods as metaheuristics.