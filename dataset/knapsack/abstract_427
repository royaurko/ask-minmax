Volume 7256 of the series Lecture Notes in Computer Science pp 61-72 On the Advice Complexity of the Knapsack Problem Hans-Joachim Böckenhauer Affiliated with Department of Computer Science, ETH Zurich , Dennis Komm Affiliated with Department of Computer Science, ETH Zurich , Richard Královič Affiliated with Department of Computer Science, ETH Zurich , Peter Rossmanith Affiliated with Department of Computer Science, RWTH Aachen We study the advice complexity and the random bit complexity of the online knapsack problem: Given a knapsack of unit capacity, and n items that arrive in successive time steps, an online algorithm has to decide for every item whether it gets packed into the knapsack or not. The goal is to maximize the value of the items in the knapsack without exceeding its capacity. In the model of advice complexity of online problems, one asks how many bits of advice about the unknown parts of the input are both necessary and sufficient to achieve a specific competitive ratio. It is well-known that even the unweighted online knapsack problem does not admit any competitive deterministic online algorithm. We show that a single bit of advice helps a deterministic algorithm to become 2-competitive, but that \(\ensuremath{\mathrm{\Omega}\mathopen{}\left(\log n\right)} \) advice bits are necessary to further improve the deterministic competitive ratio. This is the first time that such a phase transition for the number of advice bits has been observed for any problem. We also show that, surprisingly, instead of an advice bit, a single random bit allows for a competitive ratio of 2, and any further amount of randomness does not improve this. Moreover, we prove that, in a resource augmentation model, i.e., when allowing a little overpacking of the knapsack, a constant number of advice bits suffices to achieve a near-optimal competitive ratio. We also study the weighted version of the problem proving that, with \(\ensuremath{\mathcal{O}\hspace*{-0.4pt}\mathopen{}\left(\log n\right)} \) bits of advice, we can get arbitrarily close to an optimal solution and, using asymptotically fewer bits, we are not competitive. This work was partially supported by ETH grant TH 18 07-3.