  An n -element knapsack problem has 2 n possible solutions to search over, so a task which can be accomplished in 2″ trials if an exhaustive search is used. Due to the exponential time in solving the knapsack problem, the problem is considered to be very hard. In the past decade, much effort has been done in order to find techniques which could lead to practical algorithms with reasonable running time. In 1994, Chang et al. proposed a brilliant parallel algorithm, which needs O(2 n /8 ) processors to solve the knapsack problem in O(2 n /2 ) time; that is, the cost of Chang et al.'s parallel algorithm is O (2 5 n /8 ). In this paper, we propose a parallel algorithm to improve Chang et al.'s parallel algorithm by reducing the time complexity to be O (2 3 n /8 ) under the same O (2 n /8 ) processors available. Thus, the proposed parallel algorithm has a cost of O(2 n /2 ). It is an improvement over previous literature. We believe that the proposed parallel algorithm is pragmatically feasible at the moment when multiprocessor systems become more and more popular. Keywords Knapsack problem ; NP-complete problems ; Parallel algorithms ; Cryptosystem [1] S.G. Akl The Design and Analysis of Parallel AlgorithmsPrentice-Hall (1989) [2] H.K.-C. Chang, J.J.-R. Chen, S.-J. Shyu A parallel algorithm for the knapsack problem using a generation and searching technique Parallel Computing, 20 (2) (1994), pp. 233–243 [3] B. Chor, R.L. Rivest A knapsack-type public key cryptosystem based on arithmetic in finite fields IEEE Trans. Inform. Theory, 34 (5) (1988), pp. 901–909 [4] M. Cosnard, A.G. Ferreira, H. Herbelin The two-list algorithm for the knapsack problem on a FPS T20 Parallel Computing, 9 (3) (1989), pp. 385–388 [5] Y.G. Desmedt, J.P. Vandewalle, R.M. Govaerts A critical analysis of the security of knapsack public-key algorithms IEEE Trans. Inform. Theory, 30 (4) (1994), pp. 601–611 [6] A.G. Ferreira A parallel time/hardware tradeoff T · H = O (2 n /2 ) for the knapsack problem IEEE Trans. Comput., 40 (2) (1991), pp. 221–225 [7] M. Garey, D. Johnson Computers and Intractability: A Guide to the Theory of NP-CompletenessFreeman, Englewood Cliffs, NJ (1979) [8] E. Horowitz, S. Sahni Computing partitions with applications to the knapsack problem J. ACM, 21 (2) (1974), pp. 277–292 [9] E. Horowitz, S. Sahni Fundamentals of Computer AlgorithmsComputer Science Press, San Francisco, CA (1978) [10] E.D. Karnin A parallel algorithm for the knapsack problem IEEE Trans. Comput., 33 (5) (1984), pp. 404–408 [11] C.-S. Laih, J.-Y. Lee, L. Harn, Y.-K. Su Linearly shift knapsack public-key cryptosystem IEEE J. Selected Areas Commun., 7 (4) (1989), pp. 534–539 [12] R.C. Merkle, M.E. Hellman Hiding information and signatures in trapdoor knapsacks IEEE Trans. Inform. Theory, 24 (5) (1978), pp. 525–530 [13] R.C. Merkle, M.E. Hellman On the security of multiple encryption Comm. ACM, 24 (7) (1981), pp. 465–467 [14] R. Schroeppel, A. Shamir A T = O (2 n /2 ) S = O (2 n /4 ) algorithm for certain NP-complete problems SIAM J. Comput, 10 (3) (1981), pp. 456–464 [15] A. Shamir A polynomial-time algorithm for breaking the basic Merkle-Hellman cryptosystem IEEE Trans. Inform. Theory, 30 (5) (1984), pp. 699–704 Corresponding author. Copyright © 1997 Published by Elsevier B.V.