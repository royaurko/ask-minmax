We pose a new and intriguing question motivated by distributed computing
regarding random walks on graphs: How long does it take for several independent
random walks, starting from the same vertex, to cover an entire graph? We study
the cover time - the expected time required to visit every node in a graph at
least once - and we show that for a large collection of interesting graphs,
running many random walks in parallel yields a speed-up in the cover time that
is linear in the number of parallel walks. We demonstrate that an exponential
speed-up is sometimes possible, but that some natural graphs allow only a
logarithmic speed-up. A problem related to ours (in which the walks start from
some probabilistic distribution on vertices) was previously studied in the
context of space efficient algorithms for undirected s-t connectivity and our
results yield, in certain cases, an improvement upon some of the earlier
bounds.