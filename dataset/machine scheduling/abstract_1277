This paper discusses the latest generation of the MONARC (MOdels of Networked
Analysis at Regional Centers) simulation framework, as a design and modelling
tool for large scale distributed systems applied to HEP experiments. A
process-oriented approach for discrete event simulation is well-suited for
describing concurrent running programs, as well as the stochastic arrival
patterns that characterize how such systems are used. The simulation engine is
based on Threaded Objects (or Active Objects), which offer great flexibility in
simulating the complex behavior of distributed data processing programs. The
engine provides an appropriate scheduling mechanism for the Active objects with
support for interrupts. This approach offers a natural way of describing
complex running programs that are data dependent and which concurrently compete
for shared resources as well as large numbers of concurrent data transfers on
shared resources. The framework provides a complete set of basic components
(processing nodes, data servers, network components) together with dynamically
loadable decision units (scheduling or data replication modules) for easily
building complex Computing Model simulations. Examples of simulating complex
data processing systems are presented, and the way the framework is used to
compare different decision making algorithms or to optimize the overall Grid
architecture and/or the policies that govern the Grid's use.