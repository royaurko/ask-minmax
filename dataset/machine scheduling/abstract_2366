In the manuscript titled "Computation environment (1)", we introduced a
notion called computation environment as an interactive model for computation
and complexity theory. In this model, Turing machines are not autonomous
entities and find their meanings through the interaction between a computist
and a universal processor, and thus due to evolution of the universal
processor, the meanings of Turing machines could change. In this manuscript, we
discuss persistently evolutionary intensions. We introduce a new semantics,
called persistently evolutionary semantics, for predicate logic that the
meaning of function and predicate symbols are not already predetermined, and
predicate and function symbols find their meaning through the interaction of
the subject with the language. In (classic) model theory, the mathematician who
studies a structure is assumed as a god who lives out of the structure, and the
study of the mathematician does not effect the structure. The meaning of
predicate and function symbols are assumed to be independent of the
mathematician who does math. The persistently evolutionary semantics could be
regarded as a start of "Interactive Model Theory" as a new paradigm in model
theory (similar to the paradigm of interactive computation). In interactive
model theory, we suppose that a mathematical structure should consist of two
parts: 1) an intelligent agent (a subject), and 2) an environment (language),
and every things should find its meaning through the interaction of these two
parts. We introduce persistently evolutionary Kripke structure for
propositional and predicate logic. Also, we propose a persistently evolutionary
Kripke semantics for the notion of computation, where the intension of a code
of a Turing machine persistently evolve. We show that in this Kripke model the
subject can never know P = NP.