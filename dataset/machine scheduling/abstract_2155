Component frameworks are complex systems that rely on many layers of
abstraction to function properly. One essential requirement is a consistent
means of describing each individual component and how it relates to both other
components and the whole framework. As component frameworks are designed to be
flexible by nature, the description method should be simultaneously powerful,
lead to efficient code, and be easy to use, so that new users can quickly adapt
their own code to work with the framework. In this paper, we discuss the Cactus
Configuration Language (CCL) which is used to describe components ("thorns'')
in the Cactus Framework. The CCL provides a description language for the
variables, parameters, functions, scheduling and compilation of a component and
includes concepts such as interface and implementation which allow thorns
providing the same capabilities to be easily interchanged. We include several
application examples which illustrate how community toolkits use the CCL and
Cactus and identify needed additions to the language.