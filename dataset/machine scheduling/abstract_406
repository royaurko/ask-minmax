This paper constructively proves the existence of an effective procedure
generating a computable (total) function that is not contained in any given
effectively enumerable set of such functions. The proof implies the existence
of machines that process informal concepts such as computable (total) functions
beyond the limits of any given Turing machine or formal system, that is, these
machines can, in a certain sense, "compute" function values beyond these
limits. We call these machines creative. We argue that any "intelligent"
machine should be capable of processing informal concepts such as computable
(total) functions, that is, it should be creative. Finally, we introduce
hypotheses on creative machines which were developed on the basis of
theoretical investigations and experiments with computer programs. The
hypotheses say that machine intelligence is the execution of a self-developing
procedure starting from any universal programming language and any input.