We consider the problem of scheduling on a single processor a given set of n
jobs. Each job j has a workload w_j and a release time r_j. The processor can
vary its speed and hibernate to reduce energy consumption. In a schedule
minimizing overall consumed energy, it might be that some jobs complete
arbitrarily far from their release time. So in order to guarantee some quality
of service, we would like to impose a deadline d_j=r_j+F for every job j, where
F is a guarantee on the *flow time*. We provide an O(n^3) algorithm for the
more general case of *agreeable deadlines*, where jobs have release times and
deadlines and can be ordered such that for every i<j, both r_i<=r_j and
d_i<=d_j.