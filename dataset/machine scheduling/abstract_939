\emph{Are analog models of computations more powerful than classical models
of computations?} From a series of recent papers, it is now clear that many
realistic analog models of computations are provably equivalent to classical
digital models of computations from a \emph{computability} point of view. Take,
for example, the probably most realistic model of analog computation, the
General Purpose Analog Computer (GPAC) model from Claude Shannon, a model for
Differential Analyzers, which are analog machines used from 1930s to early
1960s to solve various problems. It is now known that functions computable by
Turing machines are provably exactly those that are computable by GPAC.
  This paper is about next step: understanding if this equivalence also holds
at the \emph{complexity} level. In this paper we show that the realistic models
of analog computation -- namely the General Purpose Analog Computer (GPAC) --
can simulate Turing machines in a computationally efficient manner. More
concretely we show that, modulo polynomial reductions, computations of Turing
machines can be simulated by GPACs, without the need of using more (space)
resources than those used in the original Turing computation.
  As we recently proved that functions computable by a GPAC in a polynomial
time with similar restrictions can always be simulated by a Turing machine,
this opens the way to, first, a proof that realistic analog models of
computations do satisfy the effective Church Turing thesis, and second to a
well founded theory of complexity for analog models of computations.