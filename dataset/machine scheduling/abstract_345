This paper elaborates on a new approach of the question of the
proof-theoretic study of concurrent interaction called "proofs as schedules".
Observing that proof theory is well suited to the description of confluent
systems while concurrency has non-determinism as a fundamental feature, we
develop a correspondence where proofs provide what is needed to make concurrent
systems confluent, namely scheduling. In our logical system, processes and
schedulers appear explicitly as proofs in different fragments of the proof
language and cut elimination between them does correspond to execution of a
concurrent system. This separation of roles suggests new insights for the
denotational semantics of processes and new methods for the translation of
pi-calculi into prefix-less formalisms (like solos) as the operational
counterpart of translations between proof systems.