Quantitative theories of information flow give us an approach to relax the
absolute confidentiality properties that are difficult to satisfy for many
practical programs. The classical information-theoretic approaches for
sequential programs, where the program is modeled as a communication channel
with only input and output, and the measure of leakage is based on the notions
of initial uncertainty and remaining uncertainty after observing the final
outcomes, are not suitable to multi-threaded programs. Besides, the
information-theoretic approaches have been also shown to conflict with each
other when comparing programs. Reasoning about the exposed information flow of
multi-threaded programs is more complicated, since the outcomes of such
programs depend on the scheduler policy, and the leakages in intermediate
states also contribute to the overall leakage of the program.
  This paper proposes a novel model of quantitative analysis for multi-threaded
programs that also takes into account the effect of observables in intermediate
states along the trace. We define a notion of the leakage of a program trace.
Given the fact that the execution of a multi-threaded program is typically
described by a set of traces, the leakage of a program under a specific
scheduler is computed as the expected value of the leakages of all possible
traces. Examples are given to compare our approach with the existing
approaches.