We present a type system for an extension of lambda calculus with a
conditional construction, named STAB, that characterizes the PSPACE class. This
system is obtained by extending STA, a type assignment for lambda-calculus
inspired by Lafont's Soft Linear Logic and characterizing the PTIME class. We
extend STA by means of a ground type and terms for booleans and conditional.
The key issue in the design of the type system is to manage the contexts in the
rule for conditional in an additive way. Thanks to this rule, we are able to
program polynomial time Alternating Turing Machines. From the well-known result
APTIME = PSPACE, it follows that STAB is complete for PSPACE. Conversely,
inspired by the simulation of Alternating Turing machines by means of
Deterministic Turing machine, we introduce a call-by-name evaluation machine
with two memory devices in order to evaluate programs in polynomial space. As
far as we know, this is the first characterization of PSPACE that is based on
lambda calculus and light logics.