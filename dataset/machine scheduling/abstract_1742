In a previous paper, we provided a formal definition for the concept of
computational irreducibility (CIR), i.e. the fact for a function f from N to N
that it is impossible to compute f(n) without following approximately the same
path than computing successively all the values f(i) from i=1 to n. Our
definition is based on the concept of E Turing machines (for Enumerating Turing
Machines) and on the concept of approximation of E Turing machines for which we
also gave a formal definition. We precise here these definitions through some
modifications intended to improve the robustness of the concept. We introduce
then a new concept: the Computational Analogy and prove some properties of
computationally analog functions. Computational Analogy is an equivalence
relation which allows partitioning the set of computable functions in classes
whose members have the same properties regarding to their computational
irreducibility and their computational complexity.