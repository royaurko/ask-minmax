The Generalized Traveling Salesman Problem (GTSP) is a generalization of the well-known Traveling Salesman Problem (TSP), in which the set of cities is divided into mutually exclusive clusters. The objective of the GTSP consists in visiting each cluster exactly once in a tour, while minimizing the sum of the routing costs. This paper addresses the solution of the GTSP using a Memetic Algorithm. The originality of our approach rests on the crossover procedure that uses a large neighborhood search. This algorithm is compared with other algorithms on a set of 54 standard test problems with up to 217 clusters and 1084 cities. Results demonstrate the efficiency of our algorithm in both solution quality and computation time. Keywords Genetic Algorithm ; Traveling Salesman Problem ; Large neighborhood search 1. Introduction In this paper, we propose a solution method for the Generalized Traveling Salesman Problem (GTSP) based on a Memetic Algorithm (Genetic Algorithm plus local search, see [1] or [2] for further details). The GTSP is a generalization of the well-known Traveling Salesman Problem (TSP). The main contribution of the paper stands in the crossover operator based on the exploration of a large neighborhood around the father and mother individuals. The GTSP can be described as follows. Let G=(V,E) G = ( V , E ) be a complete undirected graph, V={v 1 ,…,v n } V = { v 1 , … , v n } a set of cities and W={W 1 ,…,W m } W = { W 1 , … , W m } a set of clusters, with 0<m≤n 0 < m ≤ n . Each city v i ∈V v i ∈ V belongs to exactly one cluster (note that from this definition the clusters are mutually disjoint). Let c ij c ij denote the routing costs for v i ,v j ∈V v i , v j ∈ V . The objective is to find a tour visiting exactly once each cluster while minimizing the sum of the routing costs. In this work, we only consider symmetric cost matrices ( c ij =c ji c ij = c ji ), but the algorithm could easily be generalized to the asymmetric case. In particular, the crossover operator can be indifferently applied on symmetric or asymmetric instances. The GTSP is NP-hard in the strong sense since it generalizes the TSP. Indeed, the special case where m=n m = n (a city per cluster) is a TSP: the problem resorts to find a tour visiting each city at a minimum cost. In Section 2 , we review the literature on the GTSP. Section 3 presents a new Memetic Algorithm developed for the GTSP. The main characteristic of this algorithm is its large neighborhood search crossover procedure (see [3] for a recent work on large neighborhood search techniques). Section 4 provides a computational evaluation of our algorithm through benchmark instances from the GTSPLIB [4] . 2. State of the art The GTSP was first introduced by Srivastava et al. [5] and Henry-Labordere [6] , each one proposing to solve it through dynamic programming. Laporte and Norbert [7] and Laporte et al. [8] developed integer programming formulation, permitting to solve exactly the GTSP with Branch & Bound techniques. More recently, an efficient Branch & Cut solution scheme was proposed by Fischetti et al. [9] , who provide optimal solutions for instances with up to 89 clusters and 442 cities. Many attempts have been done to transform efficiently the GTSP into the TSP [10] , [11] , [12] , [13]  and  [14] . Some of the resulting TSP instances have nearly the same number of nodes as the original GTSP instances. Moreover, some transformations of the GTSP into the TSP [11] have an important property: an optimal solution to the related TSP can be converted to an optimal solution to the GTSP. Unfortunately, a feasible non-optimal solution for the TSP may be not feasible for the GTSP. Furthermore, well-known heuristics for the TSP may not perform well for the GTSP.