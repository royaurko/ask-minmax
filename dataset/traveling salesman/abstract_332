Password: Heuristics for the traveling salesman problem (TSP) have made remarkable advances in recent years. We survey the leading methods and the special components responsible for their successful implementations, together with an experimental analysis of computational tests on a challenging and diverse set of symmetric and asymmetric TSP benchmark problems. The foremost algorithms are represented by two families, deriving from the Lin–Kernighan (LK) method and the stem-and-cycle (S&C) method. We show how these families can be conveniently viewed within a common ejection chain framework which sheds light on their similarities and differences, and gives clues about the nature of potential enhancements to today’s best methods that may provide additional gains in solving large and difficult TSPs. Keywords Traveling salesman problem ; Heuristics ; Ejection chains ; Local search 1. Introduction The traveling salesman problem (TSP) is undoubtedly the most extensively studied problem in combinatorial optimization. In popular language, the TSP can be described as the problem of finding a minimum distance tour of n cities, starting and ending at the same city and visiting each other city exactly once. In spite of the simplicity of its problem statement, the TSP is exceedingly challenging and has inspired well over a thousand publications devoted to analyses and algorithms attempting to solve it more effectively. In graph theory, the problem can be defined on a graph G  = ( V ,  A ), where V  = { v 1 , … ,  v n } is a set of n vertices (nodes) and A  = {( v i ,  v j )∣ v i ,  v j  ∈  V , i  ≠  j } is a set of arcs, together with a non-negative cost (or distance) matrix C  = ( c ij ) associated with A . The problem is considered to be symmetric (STSP) if c ij  =  c ji for all ( v i ,  v j ) ∈  A , and asymmetric (ATSP) otherwise. Elements of A are often called edges (rather than arcs) in the symmetric case. The version of STSP in which distances satisfy the triangle inequality ( c ij  +  c jk  ⩾  c ik ) is the most studied special case of the problem. The STSP (ATSP) consists in determining the Hamiltonian cycle (circuit), often simply called a tour, of minimum cost . The TSP is a classic NP-complete combinatorial problem, and therefore there is no known polynomial-time algorithm (and unless P  =  NP , none exists) that is able to solve all instances of the problem. Consequently, heuristic algorithms are used to provide solutions that are of high quality but not necessarily optimal. The importance of identifying effective heuristics to solve large-scale TSP problems prompted the “8th DIMACS Implementation Challenge”, organized by Johnson et al. [21] and solely dedicated to TSP algorithms. In this paper we survey leading heuristics for the TSP, which come from the families called Lin–Kernighan (LK) and stem-and-cycle (S&C) methods, and report their computational performances. These foremost heuristics have proven to dominate other known approaches, solving TSP problems of vastly greater size and difficulty than would have been imagined possible before the advent of recent algorithmic developments. We also describe the state-of-the-art data structures used in the implementation of TSP algorithms, which play a key role in their efficiency. As we demonstrate, the LK and S&C families of methods are members of a broader class known as ejection chain (EC) methods. Although there are several individual publications on ejection chain approaches to the TSP, with this paper we adopt the unifying EC perspective to give a convenient foundation for highlighting and differentiating the key features of the best current algorithms. Other general survey publications concerning heuristics for TSP, such as the excellent book chapters of Johnson and McGeoch [18]  and  [20] , are no longer up to date and we include algorithms in our analysis that are not considered in these previous treatments. We also introduce and report computational outcomes for additional algorithms that represent new advances for solving problems in the ATSP class. Finally, we summarize latest developments in data structures that are providing greater efficiencies in solving TSP problems. Taking advantage of the ejection chain perspective, the following sections provide a brief survey of the most prominent algorithms for the TSP and discuss their salient performance characteristics, together with a summary of computational results that demonstrate the remarkable efficacy of these methods. 2. Ejection chain fundamentals In the general context of combinatorial optimization, ejection chains are constructions to create variable-depth neighborhoods efficiently for local search procedures. The underlying technique consists of decomposing a very large neighborhood into a sequence of component neighborhood structures that can be evaluated in polynomial-time. Each component neighborhood structure in the sequence does not usually correspond to a feasible solution but constitutes a reference structure that permits a feasible solution to be obtained efficiently. More advanced EC variants are typically based on specialized decision rules that adaptively take the search to promising regions of the solution space. In this paper, we specifically refer to ejection chains defined on graph structures relevant to the TSP setting. 2.1. Graph theory representation We briefly overview the nature of an ejection chain process on a graph, as a foundation for a more specific description relative to the TSP problem. An ejection chain of L levels on a graph G consists of a sequence of simple operations, called ejection moves , 〈 e 1 , … ,  e m , … ,  e L 〉, that iteratively transform a subgraph G m of G into another subgraph G m +1 by disconnecting a subpath and reconnecting it with different components. At each level of the chain the subgraph composing the reference structure leads to a feasible solution via an extra operation called a trial move . Therefore, a neighborhood search ejection chain procedure consists in generating a sequence 〈 e 1 ,  t 1 , … ,  e m ,  t m , … ,  e L ,  t L 〉, where 〈 e m ,  t m 〉 represents the paired ejection and trial moves at level m of the chain. The new solution that constitutes the starting point of the next iteration is obtained from the compound move 〈 e 1 ,  e 2 , … ,  e m ,  t m 〉, where the subscript m identifies the chain level that produced the best trial solution. Such a sequence can be efficiently evaluated by a simple recursive process. An extensive description of ejection chain methods for the TSP can be found in [33] , and a recent survey of ejection chain methods and applications to other combinatorial optimization problems can be found in [34] . See also [30] for additional applications. 2.2. TSP ejection chains In the TSP setting, the EC framework provides a hierarchy of four types of reference structures: (1) a detached stem (or chain) structure; (2) a stem-and-cycle structure; (3) a doubly-rooted stem-and-cycle structure; (4) a multi-cycle structure. Only the first two of these (the detached stem and the stem-and-cycle) have been extensively studied in the symmetric TSP setting, and only an intermediate variant along with modified instances of the second and third structures have been studied (much less extensively) in the asymmetric TSP setting. Consequently, there is a possibility that an exploration of elements of the ejection chain framework so-far unexamined may yield additional advances. We will not examine the issues surrounding these unexamined variants, but instead focus on the details of the widely-studied structures and the accompanying strategic devices that have produced their most effective implementations. The detached stem procedure, which is better known as the Lin–Kernighan (LK) method [23] , is far and away the most thoroughly investigated of the EC approaches for the TSP, and has been fortified and supplemented over the years with special auxiliary schemes to enhance its performance. Until the recent emergence of the stem-and-cycle (S&C) approach, the “name of the game” in TSP algorithmic development has largely consisted of efforts to find ever more subtle and ingenious ways to coax out another increment of speed or solution quality from implementations of the LK approach. Now, as will be seen, the game has acquired a new dimension, as the stem-and-cycle method has been found to match or surpass the best results of the LK approach without including several of the supporting techniques that have contributed to the LK successes. This raises the question for future study concerning whether the auxiliary strategies that will provide the greatest enhancements for the S&C approach will turn out to have a different character than those used to enhance the LK method. Currently, this is a realm for speculation, and no real answers are known. An interesting discovery that surfaced from the EC framework is a relationship between the LK and S&C methods that binds them to specialized graph theory algorithms for certain problems of polynomial complexity. In particular, the operations of the LK approach result in generating classical alternating paths, having the same structure (though derived from different mechanisms) as the alternating paths implicitly and explicitly exploited by well known network assignment algorithms and matroid intersection algorithms. The S&C approach also generates alternating paths, but of a more general class that is not considered by the classical graph theory constructions. Over the subclass that consists of ordinary alternating paths, the S&C method additionally generates instances that are not accessible to the LK method.