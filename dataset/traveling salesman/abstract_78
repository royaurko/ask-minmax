Password: This paper presents a new metaheuristic approach called ACOMAC algorithm for solving the traveling salesman problem (TSP). We introduce multiple ant clans' concept from parallel genetic algorithm to search solution space utilizing various islands to avoid local minima and thus can yield global minimum for solving the traveling salesman problem. Moreover, we present two approaches named the multiple nearest neighbor (NN) and the dual nearest neighbor (DNN) to ACOMAC to enhance large TSPs. To validate the proposed methods, numerous simulations were conducted to compare ACOMAC and Dorigo's ACS with and without the addition of the multiple nearest neighbor (NN) method or the dual nearest neighbor (DNN) approach, using a range of TSP benchmark problems. According to the results of the simulation, adding the NN or DNN approach to ACOMAC or ACS, as initial solutions, also significantly enhances the performance of ACOMAC and ACS in solving the traveling salesman problem. Meanwhile, using ACOMAC + DNN with TSP can yield better solutions than the other stated approaches. Additionally, ACOMAC or ACOMAC + NN, utilizing five ant clans with a total of 20 ants, is verified to yield better solutions. Furthermore, ACOMAC with a local weighting ( w ) set to 0.6 can yield better solutions in terms of length. Keywords Ant colony system ; Traveling salesman problem ; Metaheuristic approach The most important member of the large set of combinatorial optimization problems is undoubtedly the traveling salesman problem (TSP), which involves the task of determining a route among a given set of nodes with the shortest possible length [10] , [11]  and  [12] . The study of this problem has attracted several researchers in various fields such as artificial intelligence, biology, mathematics, physics, and operations research, and there is a very large of literature exists on the problem. Although it is easily formulated, it involves all aspects of combinatorial optimization and has served and continues to serve as a benchmark problem to which to apply new algorithms, including ant system (AS) [1] , [2] , [3] , [4] , [5] , [6]  and  [7] , evolutionary methods, neural networks [14] , tabu search [16]  and  [17] , simulated annealing (SA) [15] , genetic algorithm (GA) [13]  and  [20] , and greedy algorithm [4] . Ant system comprises a set of cooperating agents called ants, which utilize an indirect form of communication mediated by a pheromone. The ant system has been inspired by the collective behavior of real ant colonies, and in particular, by their foraging behavior. The primary idea of the ant algorithm is the indirect communication among ants in the colony agents, based on pheromone trails. The pheromone trails constitute a type of distributed numerical information, which is altered by the ants to reflect the experiences gained when solving a particular problem. Ant system is known as one of the most efficient algorithm for TSP. Inspired by the collective behavior of ant colony, Dorigo developed the ant system (AS) [2] , and later continue to design this system [1] , [2] , [3] , [4] , [5] , [6] , [7] , [8] , [9]  and  [18] . To demonstrate the AS method, Dorigo apply this approach to the job-shop scheduling problem, classical traveling salesman problem (TSP), and quadratic assignment problem (QAP). AS shows very excellent results in each applied area. More recently Dorigo has been designing expanded versions of the AS paradigm. The AS is one such extension and has been applied to the symmetric and asymmetric TSP with excellent results [9] . The AS has also been successfully applied to other combinatorial optimization problems, including the telecommunications networks, partitioning, scheduling, coloring, and vehicle routing problem [6]  and  [7] . Recently, the ant colony optimization (ACO) meta-heuristic has been proposed, representing a unifying framework to support most applications of ant algorithms to combinatorial optimization problems. All the ant algorithms applied to the TSP fit perfectly into the ACO meta-heuristic; therefore, these algorithms are hereinafter also called ACO algorithms. This study describes a very simple, yet empirically powerful approach, called the ant colony optimization with multiple ant clans (ACOMAC) algorithm, that has been found more effective than the ant colony system (ACS) or ant colony optimization (ACO) approach proposed by Dorigo for the TSP on some benchmark test problems in the literature [18] . Moreover, this work introduces the multiple ant clans concept from the parallel genetic algorithm to search the solution space utilizing different islands to avoid local minima and thus obtain a global minimum for solving the TSP problem. In addition, we present two methods called multiple nearest neighbor (NN) and dual nearest neighbor (DNN) to ACOMAC to improve large TSPs thus obtain good solutions quickly. The multiple nearest neighbor (NN) heuristic for determining a traveling salesman tour is near at hand. The salesman starts at a city and then visits the city nearest to the starting city. From there he visits the nearest city not yet visited, and repeats this process until he has visited all cities, after which he returns to the starting city. Multiple nearest neighbor (NN) tours provide the advantage of only involving a few serious mistakes, but long segments connect nodes with short edges. Consequently, such tours serve as good starting tours to which to apply improvements, and making efforts to design heuristics based on the multiple nearest neighbor (NN) principle is reasonable. This paper also presents another new method, called the dual nearest neighbor (DNN) approach, to improve ACOMAC or ACO (ACS) and thus search the solution space efficiently in the initial searching stage. According to the results of the simulation, employing the DNN approach can augment the search solution space in the initial searching stage more efficiently than using the single starting point searching method and the multiple nearest neighbor (NN) heuristic, yielding much better comparisons of the lengths of TSPs. To validate the proposed methods, numerous simulations were performed to compare ACOMAC and Dorigo's ACS with and without the addition of the multiple nearest neighbor (NN) method or the dual nearest neighbor (DNN) approach, using a range of TSP benchmark problems. For example, the simulations were run to compare the ACOMAC (include ACOMAC + NN and ACOMAC + DNN) with Dorigo's ACS (include ACS + NN and ACS + DNN) using the Kroa100 benchmark problem with 100 nodes. Using ACOMAC + DNN with TSP was observed to improve significantly the global optimum solution or a near global optimum solution. The rest of this paper is organized as follows. Section 2 describes the ant colony optimization approach. Section 3 presents our proposed ACOMAC algorithm. Section 4 illustrates our simulation results. Section 5 makes a conclusion for this paper. 2. Ant colony optimization (ACO) The ant colony optimization (ACO) technique has emerged recently [9]  and  [22] as a relatively novel meta-heuristic for solving hard combinatorial optimization problems. It was designed to simulate the ability of ant colonies to determine the shortest paths to food. While individual ants have few capabilities, a colony can exhibit complex behavior. The ant colony optimization technique has emerged recently as a new meta-heuristic that belongs to the class of problem-solving strategies derived from nature. (Other categories include neural networks, simulated annealing, and evolutionary algorithms) [13] , [14] , [15] , [16]  and  [17] . Ants lay trails of pheromone (in varying quantities) on the ground as they move, thus creating a trail. While isolated ants move essentially at random, ants that encounter previously laid pheromone trails detect these trails and are highly likely to follow them, thus reinforcing the trails with their own pheromone. The ant colony system (ACS) is investigated as a representative ACO method. The results can be generalized to other members of the ACO group. The ant colony optimization algorithm can briefly described as Fig. 1 . Fig. 1. 