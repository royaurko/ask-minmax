Password: This paper proposes a methodology to find weakly Pareto optimal solutions to a symmetric multi-objective traveling salesman problem using a memetic random-key genetic algorithm that has been augmented by a 2-opt local search. The methodology uses a “target-vector approach” in which the evaluation function is a weighted Tchebycheff metric with an ideal point and the local search is randomly guided by either a weighted sum of the objectives or a weighted Tchebycheff metric. The memetic algorithm has several advantages including the fact that the random keys representation ensures that feasible tours are maintained during the application of genetic operators. To illustrate the quality of the methodology, experiments are conducted using Euclidean TSP examples and a comparison is made to one example found in the literature. Keywords Multi-objective traveling salesman problem ; Random-key ; Memetic algorithms ; Hybrid algorithms ; Genetic algorithms 1. Introduction The Traveling Salesman Problem (TSP) is a widely studied problem in the combinatorial optimization literature. The goal of the TSP is to find a tour that begins in a specific city, visits each of the remaining cities exactly once, and returns to the initial city such that some objective function is optimized, typically involving minimizing a function such as total distance traveled, total time, or total cost. In the multi-objective TSP (mo-TSP), simultaneous optimization of distances, costs, times, or other relevant objectives is required. In this research, the symmetric case is considered where the distance, time, or cost between cities is known and symmetric. Determining whether a solution is inefficient is a non-deterministic polynomial-time complete (NPC) task for many multi-objective combinatorial optimization problems. Single-objective shortest path problem and minimum spanning tree problem are both polynomially solvable problems. However, multi-criteria versions of these problems belong to the class of NPC problems even for two objectives ( Hansen, 2000 ). TSP is NP-hard even with single objective. The multi-criteria version has the difficulty of the TSP itself and the difficulty of multiple objectives ( Ehrgott, 2000 ). Therefore, for mo-TSP, heuristic methods which provide sub-optimal solutions are widely used. The literature contains many such approaches for addressing the mo-TSP such as tabu search ( Hansen, 2000 ) and genetic algorithms (GA) ( Jaszkiewicz, 2002 ). It is noted, particularly for larger TSP problems, that combining approaches can enhance the ability to find good solutions. Methods that combine domain-specific local search and evolutionary algorithms have received special attention and are called memetic algorithms ( Merz & Freisleben, 2001 ). In this research, we combine a 2-opt local search (2-opt) with a GA having been inspired by Jaszkiewicz (2002) . In the research, GA is allowed to work in the search space of local minima (with respect to the local search implemented) and diversity is preserved via different genetic operators to avoid trapping. To be more precise, the proposed methodology combines a random-keys genetic algorithm (RKGA) with 2-opt local search to find good solutions to the symmetric mo-TSP. RKGA was introduced by Bean (1994) and was found particularly useful in manufacturing cell formation problems ( Goncalves & Resende, 2004 ) and sequencing and scheduling problems ( Kurz and Askin, 2004  and  Norman and Bean, 2000 ). This, along with Snyder and Daskin’s (2006) application to the generalized TSP problem, provided initial motivation for using an RKGA in the mo-TSP setting. Preliminary results were quite promising as reported in Samanlioglu, Kurz, Ferrell Jr., and Tangudu (2007) for the symmetric TSP and Samanlioglu, Kurz, and Ferrell Jr. (2006) for the mo-TSP. In addition to a much more extensive look at the problem, this preliminary work has led to a number of fundamental modifications in the methodology including: a set of swap mutations for the inversion, and a different 2-opt implementation – a randomly selected guide for the 2-opt in which a weighted sums or a weighted Tchebycheff metric is applied with equal likelihood. Details of these are provided when the mo-TSP and the methodology are discussed. In summary, the proposed methodology utilizes a novel memetic algorithm to address the mo-TSP problem. To effectively explain this methodology, we now address the basic idea of the RKGA and identify the unique aspects that make it particularly amenable to the mo-TSP. We then provide a brief discussion of the critical ideas related to the mo-TSP that directly relate to the proposed methodology that is presented in Section 4 . Finally, experimental results are shown and comparisons made with the literature. 2. Random-key genetic algorithm GAs were introduced by Holland in the 1970s ( Holland, 1975 ). These algorithms mimic the concepts of biological evolution to develop solutions to complex real world problems. GAs have been used in many applications of TSP and its extensions throughout the literature ( Cheng and Gen, 1994 , Cheng et al., 1995  and  Kubota et al., 1996 ). The main idea behind GAs is to start with randomly generated solutions and implement the “survival of the fittest” strategy in order to evolve to increasing better solutions through generations. A typical GA process consists of initial population generation, fitness evaluation, chromosome selection, applying genetic operators such as mutation, immigration, inversion, and crossover for reproduction, and termination. A particularly nice introduction to GAs is given in Goldberg’s book ( Goldberg, 1989 ). An important issue in designing a GA is the chromosomal representation of a solution. Chromosomes are strings of numbers which represent the solution of the problem or can be decoded to represent the solution. Sometimes these numbers are 0s and 1s but other possibilities exist like strings of non-negative integers. When applying GAs to sequencing problems like scheduling and TSP, one of the key genetic operators is crossover. The simplest form of crossover is to select two chromosomes from the population, randomly select a point to split each into two pieces, and splice the front end of the first chromosome with the complementary end from the other and vice versa to form two different chromosomes, each of correct length. To illustrate this in TSP, assume that we have two chromosomes randomly selected from the population representing two different tours of a salesman starting at a city and visiting six other cities. These tours are 1→2→3→4→5→6→7 1 → 2 → 3 → 4 → 5 → 6 → 7 and 5→4→3→6→1→2→7 5 → 4 → 3 → 6 → 1 → 2 → 7 as seen in Fig. 1 . Assume that each tour is split at a randomly selected point, for example after the third city visited, and the front end of the first tour is spliced with the complementary end of the second tour, and vice versa. The resulting tours are 1→2→3→6→1→2→7 1 → 2 → 3 → 6 → 1 → 2 → 7 and 5→4→3→4→5→6→7 5 → 4 → 3 → 4 → 5 → 6 → 7 . These tours are infeasible since in each tour some cities are visited twice and others are not visited at all. This is a common occurrence for TSP; however feasibility can be maintained in a number of ways. Some have proposed “repair algorithms” to recreate feasible tours; however, repair algorithms can consume a considerable amount of time and can inhibit convergence ( Michalewicz, 2000 ). A better alternative is to use an alternative chromosomal representation like the one introduced by Bean (1994) in which a random numbers encoding structure is used, resulting in the so-called Random Keys GA (RKGA). The structure proposed by Norman and Bean (1999) for a multiple machine scheduling problem was to assign a real number to each job. The part of the number to the left of the decimal was used to assign the machine and the part to the right of the decimal was used to assign the job sequence.