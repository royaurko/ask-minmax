Password: Stochastic local search (SLS) algorithms are typically composed of a number of different components, each of which should contribute significantly to the final algorithm's performance. If the goal is to design and engineer effective SLS algorithms, the algorithm developer requires some insight into the importance and the behavior of possible algorithmic components. In this paper, we analyze algorithmic components of SLS algorithms for the multiobjective travelling salesman problem. The analysis is done using a careful experimental design for a generic class of SLS algorithms for multiobjective combinatorial optimization. Based on the insights gained, we engineer SLS algorithms for this problem. Experimental results show that these SLS algorithms, despite their conceptual simplicity, outperform a well-known memetic algorithm for a range of benchmark instances with two and three objectives. Keywords Multiobjective combinatorial optimization ; Meta-heuristics Stochastic local search (SLS) algorithms are among the most successful techniques for tackling computationally hard problems [1] . In recent years, they have become very popular also for tackling multiobjective combinatorial optimization problems (MCOPs) [2]  and  [3] . The currently best performing SLS algorithms for MCOPs typically involve a number of different algorithmic components that are combined into a more complex algorithm. An algorithm developer should therefore have some form of insights into the importance of these algorithmic components and know how they interact with problem characteristics with respect to performance. Ideally, such insights are gained first to make the SLS algorithm design more informed and directed. In this paper, we present an in-depth experimental analysis of SLS algorithms for the multiobjective traveling salesman problem (MTSP), a paradigmatic NP-hard MCOP. Our analysis is based on a sound experimental design that investigates some usual algorithmic components that can be found in a general algorithmic framework for tackling MCOPs, the scalarized acceptance criterion (SAC) search model [3] . The SAC search model mimics local search approaches that are based on the scalarization of the multiple objective functions. Many such scalarizations are then tackled using local search (or exact algorithms, if the scalarized problems are efficiently solvable by such algorithms) and the resulting approximate solutions are possibly further treated. Essential components of algorithms following the SAC search model are the number of scalarizations, the search strategy followed (for example, whether information between various scalarizations is exchanged or not), the computation time invested for tackling each of the resulting single objective problems and various others. In fact, decomposing an SLS algorithm into its components allows to employ an experimental design perspective for the analysis of its performance: algorithmic components are seen as factors , that is, as abstract characteristics of an SLS algorithm that can affect the response variables such as solution quality. Designing the experiments in a careful way and analyzing them by methods from experimental design allows then to arrive at statistically sound conclusions on the importance of these components and their mutual interdependencies. While there exist few researches where experimental designs have been used to analyze SLS algorithms for optimization problems with a single objective function [4]  and  [5] , the usage of experimental designs for analyzing SLS algorithms for MCOPs is rather recent [6]  and  [7] . One reason for this is certainly that the outcomes of algorithms for MCOPs are difficult to compare. In fact, fundamental criticisms have been raised against the usage of many unary and binary performance measures [8] , which also makes it difficult, if not virtually impossible, to apply the classical ANOVA-type analysis for comparing approximations to the efficient set. Instead, we employ a sound methodology that follows three steps. In a first step, the outcomes of algorithms are compared pairwise with respect to outperformance relations [9] ; if these comparisons do not yield clear conclusions, we compute in a next step the attainment functions to detect significant differences between sets of outcomes [10]  and  [11] . If such differences are detected, the usage of graphical illustrations is used in a third step to examine the areas in the objective space where the results of two algorithms differ more strongly [12] . Our experimental analysis allows an identification of the key-success algorithm components. For example, our results indicate that the two-phase search strategy and the component-wise step [13] are two component levels that yield a significant improvement with respect to solution quality. In addition, the experimental analysis gives insights into the behavior of specific components such as the effectiveness of increasing either the number of scalarizations or the search length. There is yet another aspect that makes the analysis through the lens of experimental design useful: the insights gained can be exploited to define new high-performing algorithms or at least indicate directions into which existing algorithms should be extended. In other words, the insights gained from the experimental analysis can be helpful to direct the design and engineering of successful SLS algorithms. In fact, based on our experimental analysis, we define SLS algorithms that are assembled from the most promising levels of components we have identified; still, these algorithms remain conceptually rather simple. An extensive experimental comparison of these SLS algorithms on the MTSP with two and three objectives to a well-known state-of-the-art algorithm for this problem shows that they are very competitive or often superior. The article is structured as follows. In Section 2 , we introduce basic notions on MCOPs and the MTSP. Section 3 introduces the SAC model and explains the particular components of these SLS algorithms studied in our experiments. Next, in Section 4 , we give an overview of the experimental design, the methodology that was used for comparing the performance of the algorithms and we describe the experimental results obtained. Finally, in Section 5 , we compare the performance of our SLS algorithms to a well-known state-of-the-art algorithm. We conclude in Section 6 .