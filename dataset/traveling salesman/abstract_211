Password: The traveling salesman problem (TSP) is a classical problem in discrete or combinatorial optimization and belongs to the NP-complete classes, which means that it may be require an infeasible processing time to be solved by an exhaustive search method, and therefore less expensive heuristics in respect to the processing time are commonly used in order to obtain satisfactory solutions in short running time. This paper proposes an effective local search algorithm based on simulated annealing and greedy search techniques to solve the TSP. In order to obtain more accuracy solutions, the proposed algorithm based on the standard simulated annealing algorithm adopts the combination of three kinds of mutations with different probabilities during its search. Then greedy search technique is used to speed up the convergence rate of the proposed algorithm. Finally, parameters such as cool coefficient of the temperature, the times of greedy search, and the times of compulsive accept and the probability of accept a new solution, are adaptive according to the size of the TSP instances. As a result, experimental results show that the proposed algorithm provides better compromise between CPU time and accuracy among some recent algorithms for the TSP. Keywords Simulated annealing ; Greedy search ; Traveling salesman problem ; Adaptive ; Combinatorial optimization ; Heuristic 1. Introduction The TSP is a typical example of a very hard combinatorial optimization problem, and can be understood as a search for the shortest closed tour that visits each city once and only once. As is well known, the TSP belongs to a family of NP-complete problems [27] whose computational complexity rises exponentially by increasing the number of cities. For many current TSP applications such as data association, vehicle routing [21]  and  [30] , data transmission in computer networks [25] , scheduling, drilling of printed circuits boards [26] , analysis of the structure of crystals, clustering of data arrays, assignment of routes for planes of a specified fleet, image processing and pattern recognition [2] , and transportation and logistics, finding suboptimal solutions with a reasonable cost may be more advantageous, and therefore the great interest in efficient heuristics to solve the TSP. The TSP has received considerable attention over twenty years and various methods based on deterministic or probabilistic heuristics have been proposed to solve the known problem. The methods include branch-and-bound [9] , particle swarm optimization [21] , [22]  and  [32] , neural network [6] , [23]  and  [29] , tabu search [11] , ant colony optimization [5] , [10] , [20]  and  [34] , genetic algorithms [3] , [13]  and  [36] , self-organizing maps [1] , simulated annealing [18] , [19] , [24]  and  [33] , elastic net [7] , [8]  and  [37] , and Lagrangean relaxation [38] . Among the above methods, the branch-and-bound approach is an exact algorithm, which is only adapted the TSP with small scale. The particle swarm optimization algorithm has been successfully applied in solving the TSP with the problem size is ranged from 51 to 76, and been successfully applied in solving the vehicle routing problem and the probabilistic TSP. The neural network algorithms converge significantly faster than other algorithms do with neglecting the accuracy of the solution. The tabu search algorithm's convergence rate is fast while its effective is relatively poor. The ant colony optimization algorithm has been mainly used to solve small-scale TSP, fixed destination multi-depot multiple TSP and TSP with time windows. The genetic algorithm has been utilized for TSP with other approaches such as immunity and other heuristics. The self-organizing map strategy has been applied in solving TSP with the problem size is ranged from 51 to 442. It is difficult for the standard simulated annealing algorithm to improve its quality-time trade-off, and therefore simulated annealing technique is usually combined with other heuristics to solve the TSP. The elastic net approach has been considered to solve the large TSP, and the validity needs to be improved. Simulated annealing is a new approach to the approximate solution of different combinational optimization problems. It was originally proposed by Kirkpatrick, Gelatt and Vecchi [17] , and Cerny [4] , who reported promising results based on sketchy experiments. For simulated annealing technique, since then there has been an immense outpouring of papers such as graph partitioning [15] , graph coloring [16] , determine the thickness of a graph [28] , logic programming [31] , and machine scheduling [14] . Differ from other heuristics, simulated annealing in essence is a method for improving local optimization, and it needs less memory space. However, simulated annealing algorithm generally requires longer computational time to find a better solution than other heuristics such as neural network algorithms. In our early work [35] , an effective two-stage simulated annealing (Two-stage SA) algorithm was present for the TSP. For the Two-stage SA algorithm, in the first stage, a simple simulated annealing algorithm is proposed to obtain some appropriate solutions or closed tours. In the second stage, an effective simulated annealing algorithm is present to obtain solutions with good quality based on the solutions or closed tours obtained by the simple simulated annealing. Finally, the Two-stage SA algorithm is performed on 23 TSP benchmark instances with scale from 51 to 783. The numerical results show the proposed algorithm in [35] is difficulty in solving the TSP benchmark instances with scale exceeded 1000 cities based on CPU time. Based on the reason, this paper presents a new meta-heuristics approach called adaptive simulated annealing algorithm with greedy search to solve TSP, and the original purpose of this paper is to look for more effective mutations, more rational greedy search strategy and more universal adaptive parameter control of the proposed algorithm to achieve better results and a faster convergence in solving TSP with large-scale cities from 51 to 85,900. The rest of this paper is organized as follows. Section 2 describes the TSP and designs its mathematical formulation. The mutation strategy, greedy search strategy and adaptive parameter control strategy of the proposed algorithm based on simulated annealing and greedy search are proposed in Section 3 , respectively. Section 4 selects some recent published competitive algorithms that have been used to solve TSP and gives the comparisons of experimental results between our algorithm and the recent algorithms. This paper is concluded in Section 5 . 2. The traveling salesman problem The TSP is one which has commanded much attention of mathematicians and computer scientists specifically because it is so easy to describe and so difficult to solve. The problem can simply be stated as: a search for the shortest closed tour that visits each city once and only once. A complete historical development of this and related problems can be seen in [12] . The importance of TSP is that it is representative of a larger class of problems known as NP-complete. Specifically, if one can find an efficient algorithm that will be guaranteed to find the optimal solution in a polynomial number of steps for the TSP, then the efficient algorithm could be found for all other problems in the NP-complete class. To date, however, no one has found a polynomial-time algorithm for TSP. The first step to solve TSP must be to find a good mathematical formulation. In the case of TSP, the mathematical structure is a graph where each city is denoted by a point and lines are drawn connecting every two nodes. Associated with every line is an edge, distance or cost. When the salesman can get from every city to other cities directly, then the graph is said to be complete. A round-trip of the cities corresponds to some subset of the lines, and is called a tour or a Hamiltonian cycle in graph theory. The length of a tour is the sum of the lengths of the lines in the round-trip.