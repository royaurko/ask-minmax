  In this paper, an ensemble of discrete differential evolution algorithms with parallel populations is presented. In a single populated discrete differential evolution ( DDE ) algorithm, the destruction and construction ( DC ) procedure is employed to generate the mutant population whereas the trial population is obtained through a crossover operator. The performance of the DDE algorithm is substantially affected by the parameters of DC procedure as well as the choice of crossover operator. In order to enable the DDE algorithm to make use of different parameter values and crossover operators simultaneously, we propose an ensemble of DDE ( eDDE ) algorithms where each parameter set and crossover operator is assigned to one of the parallel populations. Each parallel parent population does not only compete with offspring population generated by its own population but also the offspring populations generated by all other parallel populations which use different parameter settings and crossover operators. As an application area, the well-known generalized traveling salesman problem ( GTSP ) is chosen, where the set of nodes is divided into clusters so that the objective is to find a tour with minimum cost passing through exactly one node from each cluster. The experimental results show that none of the single populated variants was effective in solving all the GTSP instances whereas the eDDE performed substantially better than the single populated variants on a set of problem instances. Furthermore, through the experimental analysis of results, the performance of the eDDE algorithm is also compared against the best performing algorithms from the literature. Ultimately, all of the best known averaged solutions for larger instances are further improved by the eDDE algorithm. Keywords Generalized traveling salesman problem ; Metaheuristic ; Discrete differential evolution algorithm ; Ensemble of optimization algorithms ; Evolutionary algorithms 1. Introduction A variant of the traveling salesman problem ( TSP ) is known as the generalized traveling salesman problem ( GTSP ) where a tour does not visit all the nodes since the set V of nodes is divided into m sets or clusters, V 1 , …,  V m with V 1  ∪ ⋯ ∪  V m  =  V and V j  ∩  V k  =  ϕ if j  ≠  k . The objective is to find a minimum length tour that passes through exactly one node from each cluster V j . Several applications of the GTSP can be found in postal routing [1] , computer file processing [2] , order picking in warehouses [3] , process planning for rotational parts [4] , and the routing of clients through welfare agencies [5] . Furthermore, many other combinatorial optimization problems can be reduced to the GTSP [1] . TSP is NP-Hard and hence the GTSP is NP-hard because if the set N of nodes is partitioned into ∣ N ∣ subsets with each containing one node, it results in a TSP . Regarding the literature for the GTSP , it was first addressed in [2] , [5]  and  [6] . Several exact algorithms were proposed by Laporte et al. [7]  and  [8] , Laporte and Nobert [9] , Fischetti et al. [10]  and  [11] and others in [12] , [13]  and  [14] . On the other hand, several worthy heuristic approaches are applied to the GTSP . Noon [3] presented several heuristics for the GTSP among which the most promising one is an adaptation of the well-known nearest-neighbour heuristic for the TSP . Similar adaptations of the farthest-insertion, nearest-insertion, and cheapest-insertion heuristics are proposed in Fischetti et al. [11] . GI 3 (Generalized Initialization, Insertion, and Improvement) is one of the most sophisticated heuristics which was developed by Renaud and Boctor [15] . GI 3 is a generalization of the I 3 heuristic presented by Renaud et al. in [16] . The application of evolutionary algorithms specifically to the GTSP is rare in the literature. A random key genetic algorithm ( RKGA ) was proposed by Snyder and Daskin [17] which stimulated the evolutionary research on the GTSP . Thereafter, Tasgetiren et al. [18]  and  [19] presented a discrete particle swarm optimization algorithm ( DPSO ) and genetic algorithm ( GA ), respectively, whereas Silberholz and Golden proposed another genetic algorithm in [20] denoted as mrOXGA . Furthermore, a memetic algorithm ( MA ) is also proposed for the GTSP by Gutin et. al. [21] along with a revised version in [22] . The discrete differential evolution ( DDE ) algorithm has demonstrated superior performance in solving both the permutation flowshop scheduling problem in [23] and the single machine total weighted tardiness problem with sequence dependent setup times in [24] . In this paper, an ensemble of DDE algorithms is proposed to solve a set of standard GTSP benchmark instances with symmetric distances. The main contribution of this paper is due to the presentation of the ensemble of DDE ( eDDE ) algorithms in which each constituent DDE algorithm has its distinct parameter set and crossover operator combination with its own population. Therefore, eDDE enable us to use different parameter values and crossover operators simultaneously in each DDE population in the ensemble. Furthermore, each parallel population does not only compete with offspring population generated by itself but also with all offspring populations generated by all other parallel populations using different parameter settings and crossover operators. In our previous published works, we employed a DPSO algorithm [18] and a GA [19] to solve the GTSP without employing the ensemble concept. The DPSO algorithm in [18] employed a variable neighbourhood descend ( VND ) algorithm where the destruction and construction procedures with the size of d being equal to 1 and d being equal to 2 were used as local search heuristics in the VND structure, respectively. Since the performance of the DPSO algorithm, especially the VND local search, was not so promising, the authors have developed a traditional GA in [19] for the GTSP employing an iterated local search ( ILS ) which is based on a removal of a node from a solution, perturbing (replacing) that node with another randomly chosen node from the same cluster, then inserting it into the best of all possible slots of the current partial solution. However, this paper focuses on an ensemble of DDE algorithms with the most effective local search procedure ( Swap ) presented in Snyder and Daskin [17] as well as 2-opt commonly used for the TSP in the literature. The difference between Swap and ILS procedures stems from the fact that Swap considers all the nodes in a cluster to be inserted into all possible slots and chooses the best insertion. Since Swap considers all nodes in a cluster, it generates and evaluates much more neighbouring solutions (i.e. the number of nodes in a solution times the cluster size) than ILS (i.e. only a single node from a cluster is considered), Swap is much more effective than ILS . For this reason, Swap is chosen as a local search insertion method together with 2-opt in this paper. The remaining paper is organized as follows. Section 2 introduces the DDE algorithm and its basic components. Section 3 presents the ensemble of DDE algorithms and Section 4 gives the computational results on benchmark problems. Finally, Section 5 summarizes the concluding remarks.