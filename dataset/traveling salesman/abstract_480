Password: The double traveling salesman problem with multiple stacks (DTSPMS) is a vehicle routing problem that consists on finding the minimum total length tours in two separated networks, one for pickups and one for deliveries. A set of orders is given, each one consisting of a pickup location and a delivery location, and it is required to send an item from the former location to the latter one. Repacking is not allowed, but collected items can be packed in several rows in such a way that each row must obey the LIFO principle. In this paper, a variable neighborhood search approach using four new neighborhood structures is presented to solve the problem. Keywords Traveling salesman problem ; Variable neighborhood search ; LIFO loading 1. Introduction The double traveling salesman problem with multiple stacks (DTSPMS) was introduced in Petersen and Madsen [22] as one of the main problems of a joint project with a computer software company. This company provides solutions for the transportation and fleet management business and hence it has to deal with very different routing problems that appear in real life. They were interested in finding the best way to handle orders consisting on picking-up items from several locations belonging to one region and delivering them in the corresponding locations of another region that is far apart from the first one. The vehicles used by the company, that are rear-loaded, have a 40-foot pallet container and the items to be delivered are usually standardized Euro Pallets, which fit 3 by 11 on the vehicle container. The driver is not allowed to touch the goods due to security reasons, and as a consequence repacking is not permitted during the whole process. Then the first items to be picked up must be the last ones to be delivered, and since the items fit 3 by 11 on the rear-loaded container, there are three independent loading rows, each of which behaves as an independent last-in-first-out (LIFO) system. In this situation, the company had to decide the picking-up route in the first region, the way to load the items in the vehicle and the delivery route in the second region, keeping in mind that, due to the three independent loading rows of the rear-loaded vehicle, the order in which items are picked-up and the way they are stored restrict the order in which deliveries can be performed. The objective of the company, as usual, was to minimize the final total travel cost, that is proportional to the length of the routes. This real life problem is formulated as a vehicle routing problem that is called DTSPMS. It adds new elements to the classical vehicle routing problems which have been so much studied during the last decades, but this new problem has not been treated in detail in the literature yet. As previously stated, in the DTSPMS there is a single vehicle in which repacking is not allowed, but the load can be packed in several rows that must obey the LIFO principle, while there are no mutual constraints between two different rows. From now on the rows of the container will be referred as stacks . Two independent regions that are supposed to be very far apart are considered, and one item must be picked up in every location of the first region and delivered to the corresponding location of the second region. Hence the elements of the problem are two separated networks , each of them represented by a complete graph, and a set of orders , each of which consists of a pickup location in the first network and a delivery location in the second network. Each network has a distinguished node called depot that represents the location from which the vehicle departs and arrives after covering its route. Every location of one of the regions is represented by a node in its corresponding network (pickup or delivery) and every connection between two locations is represented by an edge, and thus every order is associated to one node in the pickup network and another node in the delivery network. The two regions of the problem are supposed to be far apart, and thus some long-haul transport is required to carry the picked-up load from the depot of the first region to the depot of the second one. Thistransportation is not part of the problem, and thus the only costs are the ones originated by travelled distances in the pickup route and the delivery route. For simplicity we will suppose that all stacks have the same capacity, all items are uniform and every order consists of one single item. The number of available stacks in the container and their capacity are parameters of the problem. Fig. 1 represents the pickup route (left hand side) and the delivery route (right hand side) of a solution of a DTSPMS with six orders. A stack assignment that is compatible with the previous routes is shown as well in this figure, assuming that there are two available stacks with capacity 3. Fig. 1.  A feasible solution for the DTSPMS. The objective of the problem is to find a pair of hamiltonian cycles, one for the pickup network and one for the delivery network, such that the sum of travelled distances in both networks is minimized and capacity restrictions and precedence conditions are satisfied. Hence a feasible solution for an instance of the DTSPMS consists of a pickup route , a delivery route and a stack assignment . Each route determines an ordering of the corresponding set of nodes (pickup and delivery nodes), and the stack assignment gives the stack in which each item must be stored. A stack assignment, on its own, cannot determine what position will occupy every item on its corresponding stack, since that depends on the routes of the solution. Given a stack assignment together with one route (pickup or delivery) the loading plan can be designed, providing the exact position of each item in the container. The DTSPMS generalizes the classical TSP, since any TSP instance can be transformed into a DTSPMS instance in which all delivery locations are placed at the same point, and thus the DTSPMS is an NP-hard problem as well. The precedence constraints associated to the LIFO stacks impose very strong restrictions on both routes of the DTSPMS, making it very hard to characterize feasible solutions in an easy and operative way to solve the problem. This is the main reason why the DTSPMS is such a hard problem to solve, being in fact quite more difficult than the TSP. The largest DTSPMS instances that could be solved to optimality have 12 orders, while TSP instances with thousands of customers could be solved in a reasonable running time. Note also that, given a pickup route and a delivery route found by considering two independent TSPs, the probability of finding a feasible loading plan is extremely low, making it necessary to approach the problem globally. As previously stated, only very small instances can be solved to optimality, so then heuristics are needed to find good solutions for instances with a realistic size. In Petersen and Madsen [22] two neighborhood structures for the problem are proposed and four heuristic approaches using iterated local search (ILS), tabu search (TS), simulated annealing (SA) and large neighborhood search (LNS) are presented, being the LNS approach the algorithm with the best overall performance. In this paper, we propose a new hybridized variable neighborhood search (VNS) approach to solve the problem using the two existing neighborhood structures and four new ones. The DTSPMS combines pickup and delivery problems (Cordeau et al. [7] , Desaulniers et al. [8] ) with the TSP. The traveling salesman problem with pickup and delivery (TSPPD) has been treated during the last years using heuristics (Bianchessi and Righini [1] , Hernández-Pérez and Salazar-González [17] ) and exact methods (Dumitrescu et al. [10] , Hernández-Pérez and Salazar-González [18] ); imposing LIFO loading conditions a new problem called the TSPPD with LIFO loading (TSPPDL) is obtained, which presents more similarities with the DTSPMS (with only one stack). Exact approaches (Carrabs et al. [2] , Cordeau et al. [6] ) and heuristics based on VNS (Carrabs et al. [3] , Cassani and Righini [4] ) and column generation for the multi-vehicle version (Xu et al. [24] ) have been recently proposed to solve the TSPPDL. More complex problems including different loading conditions in two or three dimensions and allowing items to be heterogeneous have also been approached in Doerner et al. [9] , Gendreau et al. [11]  and  [12] and Iori et al. [19] . The remainder of this paper is organized as follows. Section 2 presents a mathematical model for the problem and Section 3 describes the neighborhood structures that will be used. In Section 4 two methods to generate initial solutions for the problem are presented. Some heuristics to solve the problem using VNS methodology are proposed in Section 5 and detailed computational experience is presented in Section 6 . Finally, Section 7 draws some conclusions from this work.