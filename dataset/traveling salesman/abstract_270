Password: We describe how to use the traveling salesman problem to create continuous line drawings of target pictures. Keywords Traveling salesman problem ; Continuous line drawings ; Art 1. Introduction If you ever took a drawing class, even as a child, chances are good that at some point you made a continuous line drawing . (Art teachers are fond of them.) When you did this, you looked at the object you were asked to draw, you placed the tip of your drawing implement on your paper, and you made a line drawing of the object, taking great care to keep the tip of your drawing implement in contact with your paper until you were finished. When you were making your continuous line drawing, you were solving an optimization problem. Your objective was to produce the best possible line drawing of the object. What made this difficult was the constraint: you were not allowed to remove your drawing implement from the paper until your drawing was complete. In this brief note we describe how to construct traveling salesman problem (TSP) instances that when solved yield continuous line drawings of target pictures. 2. The procedure To create a continuous line drawing of a target picture, we do the following: Step 1 ( Format the target picture ): Resize the target picture so that it is km × kn (i.e., so that it has km rows and kn columns of pixels). Then convert it into PGM (portable graymap) format. In PGM format, each pixel has a grayscale value between 0 (completely black) and 255 (completely white). Step 2 ( Divide the target picture into squares ): Partition the pixels of the target picture into m rows and n columns of k × k squares. For each row i and column j , compute the mean grayscale value μ ij of the pixels in square ( i , j ). Then set g ij = γ −⌊ γμ ij /256⌋. Note that g ij is the average darkness of square ( i , j ) on a 0 (completely white) to γ (completely black) gray scale. For γ , we use an integer between 4 and 9, inclusive. Step 3 ( Construct and solve the TSP instance ): Divide the canvas into m rows and n columns of squares. For each row i and column j , randomly place g ij cities (points) in square ( i , j ). Do this in such a way that the cities in square ( i , j ) are uniformly distributed in square ( i , j ). After computing the intercity distances, solve the TSP instance and plot the tour. Fig. 1 displays two continuous line drawings produced via this TSP-based procedure. One of our target pictures was a 231×210 picture of Marilyn Monroe; the other was a 240×198 picture of a portion of the Mona Lisa. For both pictures, we used k =3 and γ =9. We used John Bradley's XV package [2] to resize and format the target pictures and the chained Lin-Kernighan heuristic in Applegate, Bixby, Chvatal, and Cook's Concorde [1] package to “solve” the TSP instances. Fig. 1.  Marilyn Monroe (20332 cities) and the Mona Lisa (27486 cities). [1] D. Applegate, R. Bixby, V. Chátal, W. Cook, Concorde—a code for solving Traveling Salesman Problems, http://www.princeton.edu/tsp/concorde.html . [2] J. Bradley, The On-Line Version of the XV 3.10a Manual, http://www.icgeb.trieste.it/~netsrv/xvman/index.html . Corresponding author Copyright © 2003 Elsevier B.V. All rights reserved.