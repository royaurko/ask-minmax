  Computational experiments show that the greedy algorithm (GR) and the nearest neighbor algorithm (NN), popular choices for tour construction heuristics, work at acceptable level for the Euclidean TSP, but produce very poor results for the general Symmetric and Asymmetric TSP (STSP and ATSP). We prove that for every n ⩾2 there is an instance of ATSP (STSP) on n vertices for which GR finds the worst tour. The same result holds for NN. We also analyze the repetitive NN (RNN) that starts NN from every vertex and chooses the best tour obtained. We prove that, for the ATSP, RNN always produces a tour, which is not worse than at least n /2−1 other tours, but for some instance it finds a tour, which is not worse than at most n −2 other tours, n ⩾4. We also show that, for some instance of the STSP on n ⩾4 vertices, RNN produces a tour not worse than at most 2 n −3 tours. These results are in sharp contrast to earlier results by Gutin and Yeo, and Punnen and Kabadi, who proved that, for the ATSP, there are tour construction heuristics, including some popular ones, that always build a tour not worse than at least ( n −2)! tours. Keywords TSP ; Domination analysis ; Greedy algorithm ; Nearest neighbor algorithm 1. Introduction In this note we consider the Asymmetric Traveling Salesman Problem (ATSP) : given a weighted complete directed graph, , where n is the number of vertices and c is the weight function from the arc set of to the set of reals, one seeks a hamiltonian cycle of minimum total weight. Below we call a hamiltonian cycle a tour and c ( a ) the cost of a for an arc a of For a tour T , its cost c ( T ) is the sum of the costs of its arcs. The Symmetric TSP (STSP) is defined similarly to the ATSP apart from the fact that is replaced by the complete undirected graph . Since an instance of the STSP can be transformed into an “equivalent” instance of the ATSP by replacing every edge { x , y } of K n by the pair ( x , y ),( y , x ) of arcs of the costs equal to the cost of { x , y }, every heuristic for the ATSP can be used for the STSP. We well use the term TSP when it is not important whether the ATSP or STSP is under consideration. It is well-known that for the majority of combinatorial optimization problems (including the TSP) even the problem to find an approximate solution (within a guaranteed constant factor from the optimum) is NP-hard. As a result, heuristics for such problems are usually compared using computational experiments. Glover and Punnen [3] suggested a new approach for evaluation of heuristics that compares heuristics according to their so-called domination number. We define this notion only for the TSP since its extension to other problems is obvious. The domination number of a heuristic for the TSP is the maximum integer d ( n ) such that, for every instance of the TSP on n vertices, produces a tour T which is not worse than at least d ( n ) tours in including T itself. Observe that an exact algorithm for the ATSP (STSP) has domination number ( n −1)! (( n −1)!/2). Clearly, the domination number is well defined for every heuristic, and a heuristic with higher domination number may be considered a better choice than a heuristic with lower domination number. (This kind of comparison is somewhat similar to the standard comparison of approximation algorithms, which continues to be the most popular choice of theoretical performance analysis.) Computational experiments show that the greedy algorithm (GR) and the nearest neighbor algorithm (NN), popular choices for tour construction heuristics, work at acceptable level for the Euclidean TSP (see e.g. [7]  and  [9] ), but produce very poor results for the general Symmetric and Asymmetric TSP (see, e.g., [1] , [2] , [6]  and  [7] ). For the ATSP, GR builds a tour by repeatedly choosing the cheapest eligible arc of until the chosen arcs form a tour; an arc a =( u , v ) is eligible if the out-degree of u in D and the in-degree of v in D equal zero, where D is the digraph induced by the set S of chosen arcs, and a can be added to S without creating a non-hamiltonian cycle. NN starts its tour from a fixed vertex i 1 , goes to the nearest vertex i 2 (i.e., ), then to the nearest vertex i 3 (from i 2 ) distinct from i 1 and i 2 , etc. The repetitive NN (RNN) starts NN from every vertex and chooses the best tour obtained. We analyze GR, NN and RNN using the domination number approach. We prove that for every n ⩾2 there is an instance of ATSP (STSP) on n vertices for which GR finds the worst tour, i.e., the domination number of GR for the ATSP (STSP) is 1. The same result holds for NN. We show that, for the ATSP, RNN always produces a tour, which is not worse than at least n /2−1 other tours, but for some instance on n vertices it finds a tour, which is not worse than at most n −2 other tours, i.e., the domination number of RNN is between n /2 and n −1. We also prove that, for the STSP, the domination number of RNN is at most 2 n −2 . These results are in sharp contrast to earlier results by Gutin and Yeo [4]  and  [5] , and Punnen and Kabadi [8] , who proved that, for the ATSP, there are tour construction heuristics, including some popular ones (such as the Karp–Steele patching algorithm, which is a good choice for the ATSP [2] ) that always build a tour not worse than at least ( n −2)! tours. (It follows from the simple construction mentioned in the last sentence of the first paragraph of this section that those heuristics have domination number at least ( n −2)!/2 for the STSP.) This provides some theoretical explanation why “being greedy” is not so good for solving the TSP.