This note proposes a transformation of the Generalized Traveling Salesman Problem on an undirected graph into an equivalent Traveling Salesman Problem and provides an assessment of its computational efficiency. Keywords: Generalized Traveling Salesman Problem. Dans cette note on propose une transformation du probleme du voyageur de commerce generalise sur un graphe non dirige en un probleme du voyageur de commerce equivalent et on etudie sa performance numerique. Mots clefs : Probleme du voyageur de commerce generalise. 1. INTRODUCTION The Generalized Traveling Salesman Problem (GTSP) consists of determining a least cost tour passing through each of several clusters of vertices of a graph. Several versions of the problem exist. Here we consider the GTSP defined on an undirected graph G = (V, E), where V = {v^sub l^,... v^sub n^} is the vertex set and E = {(v^sub i^,v^sub j^): v^sub i^,v^sub j^ Epsilon V,i < j} is the edge set. In what follows, (v^sub i^, v^sub j^) must be interpreted as (v^sub j^, v^sub i^) whenever j < i. The set V is partitioned into m clusters V^sub 1^, . . ., V^SUB m^ and a non-negative cost cij is associated with each edge (v^sub i^,v^sub j^). The version of the GTSP treated here is to determine a least cost Hamiltonian cycle containing exactly one vertex from each cluster. The GTSP was introduced in the late sixties and early seventies (Henry-Labordere [3], Srivastava et al. [13], Saksena [12]) in the context of computer record balancing and of visit sequencing through welfare agencies. Several other interesting applications exist in areas as diverse as location-routing, postal delivery and the layout of tracks for automated guided vehicles in factories (Laporte, Asef-Vaziri and Sriskandarajah [5]). Recently, Laporte [4[ as well as Dror and Langevin [1] have shown how several classes of arc routing problems can be formulated and solved as GTSPs. Early algorithms for the GTSP were based on dynamic programming [6, 13] but these can only handle modest size instances. Better algorithms are now available. Noon and Bean [9] have developed a branch and bound procedure combined with Lagrangean relaxation for the asymmetric case. For symmetric problems, branch and cut is probably the best method available (Laporte and Nobert [6], Fischetti, Salazar and Toth [2]). In a recent paper, Noon and Bean [10] have shown how asymmetric GTSPs can be transformed into asymmetric Traveling Salesman Problems (TSPs) over the same number of vertices. Lien, Ma and Wah [7] have proposed a transformation of the symmetric GTSP into and equivalent asymmetric TSP with roughly three times as many vertices. Volgenant [14] also suggested a transformation of the GTSP into a TSP which appears to be similar to ours. It is not obvious whether such transformations are beneficial. On the positive side, several good exact and approximate algorithms already exist for the TSP and could therefore be used as "black boxes" to solve transformed GTSP instances. This is the approach recently taken by Laporte [4] who transformed several classes of arc routing problems into GTSPs and then into TSPs. On the negative side, such transformations typically yield highly degenerate TSPs which may be much harder to solve than TSP instances generated on random graphs. To our knowledge, this computational question has never been investigated in the past. Volgenant [14] points to the "practical limitation of [his] transformation". In this note we first present our transformation of the symmetric GTSP into a symmetric TSP doubling the number of vertices. We then report the results of some computational experiments relative to this transformation. Proposition 1 The TSP defined on G' yields an optimal solution for the GTSP defined on G. The thesis follows from the fact that the optimal solutions to the two problems have inter-cluster edges having the same total cost. Indeed, whenever |V^sub k^| > 1, any optimal TSP solution will contain the 2t^sub k^ -1 cheapest edges in cluster Vk, i.e., t^sub k^ edges of cost -2M and t^sub k^ -1 edges of cost -M, since M is larger than the sum of the costs of any n edges of E. It follows that in the TSP solution on G^sup0^, there will be exactly two edges linking each cluster V^sub k^ to other clusters, and these two edges will be incident to some vertex v^sub i^ and its copy v^sub i'^. The GTSP solution is immediately obtained from the TSP solution by conserving only the inter-cluster edges, and coalescing each vertex with its copy. The transformation is illustrated in Figure 1. Here V = {1,2,3,4,5}, V^sub 1^ = {1}, V^sub 2^ = {2},3, V^sub 3^ = {4,5}. E = {1,2}, (1,3), (1,4), (1,5), (2,4), (2,5), (3,4), (3,5)}. For simplicity, these edges are not shown on the figure. Assume the GTSP solution is (1,3,4,1). 3. COMPUTATIONAL RESULTS To assess the computational efficiency of the proposed approach, we solved a number of 50-vertex instances of the GTSP. Tests were carried out on two types of instances: random and clustered. In random instances, n = 50 points were first generated in the [0,100]^sup 2^ square according to a continous uniform distribution. Then m' clusters of cardinality p and q clusters of cardinality 1 (with m'p + q = n and q + m' = m) were created by arbitrarily assigning each point to a cluster. In clustered instances, we first divided the [0,100]^sup 2^ square into m' equal or approximately equal rectangles. We then associated a cluster with each rectangle and generated within each cluster p vertices according to a continuous uniform distribution over the rectangle. We then created q = n - m'p = m - m' additional clusters of cardinality 1 by generating vertices randomly in the [0, 100]^sup 2^ square. For both instance types and for each combination of m', p and q considered, we generated five instances. These were first transformed into a TSP and then solved exactly by means of the Padberg and Rinaldi [11] code. This code also incorporates a heuristic based on the Lin-Kernighan [8] edge interchange scheme. Each instance was solved on a Sun Ultra Sparc 1 Station, with a time limit of two hours. For each case we computed the TSP objective using the transformed costs, and the corresponding GTSP objective using the original costs. Our computational results are presented in Tables 1 and 2. The table headings are as follows: m' number of clusters of cardinality greater than 1; p number of vertices in each of these clusters; q number of clusters of cardinality 1; SUCC: number of instances, out of five, thant could be solved to optimality within two hours; SUBTOURS: number of subtour elemeination constraints generated in the Padberg-- Rinaldi algorithm; COMBS: number of comb inequalities; CL-TREES: number of clique-tree inequalities; LB/OPT: Objective value at the root of the search tree divided by the optimal solution value; the letter "G" refers to the GTSP and the letter "T" refers to the TSP; UB/OPT: heuristic solution value divided by the optimal solution value; NODES: number of nodes in the search tree; SECONDS: CPU time in seconds. All statistics represent average values over the number of successful instances. The first line of Tables 1 and 2 corresponds to a 100-vertex TSP. It is reported for comparison purposes. The number of vertices in the TSPs resulting from the GTSP transformations is equal to q + 2m'p and this value is equal to 100 - q in our experiments since n = 50. Thus the number of vertices varies between 50 and 100 in the transformed test problems since 0 <= q <= n. Still, the pure 100-vertex TSP is much easier to solve than the transformed GTSPs, sometimes by three orders of magnitude. As a rule, clustered instances are easier to solve than random instances. For both cases, problems become easier when q increases. Also, for a given q, problem difficulty increases with p, except perhaps for q = 30. The two columns LB/OPT(T) and UB/OPT (T) indicate that the Padberg-Rinaldi method performs quite well on the transformed instances. However, since M is large with respect to the other costs, the branching process has difficulty distinguishing between two solutions that are close to each other with respect to the TSP objective, but quite different with respect to the GTSP objective. This is confirmed by looking at the LB/OPT (G) and UB/OPT (G) columns. Even if the corresponding ratios are good for the TSP, they can be quite poor for the GTSP. While the exact TSP algorithm does not always perform well, the heuristic is generally quite reliable. As a rule, it provides GTSP solutions close to the optimum. In this context, the type of transformation proposed would appear to be valuable. This research was partly funded by the Natural Sciences and Engineering Research Council of Canada under grants OPG0039682 and OPG0005392. This support is gratefully acknowledged. Thanks are also due to Manfred Padberg and Giovanni Rinaldi for having made their TSP code available to the authors. Finally, we thank the anonymous reviewers for their valuable comments. 1. M. Dror and A. Langevin (1997). "A Generalized Traveling Salesman Approach to the Directed Clustered Rural Postman Problem". Transportation Science 31, 187-192. 2. M. Fischetti, J.J. Salazar and P. Toth (1997). "A Branch-and-Cut Algorithm for the Symmetric Generalized Traveling Salesman Problem", Operations Research 45, 378-394. 3. A.L. Henry-Labordere (1969). "The Record Balancing Problem: A Dynamic Programming Solution of a Generalized Travelling Salesman Problem".RIRO B-2, 43-9. 4. G. Laporte (1997). "Modeling and Solving Several Classes of Arc Routing Problems as Traveling Salesman Problems". Computers 6 Operations Research, 24, 1057-1061. 5. G. Laporte, A. Asef-Vaziri and C. Sriskandarajah (1996). "Some Applications of the Generalized Traveling Salesman Problem". Journal of the Operational Research Society 47, 1461-1467. 6. Laporte and Y. Nobert (1983). "Generalized Ea.velling Salesman Problem through n Sets of Nodes: An Integer Programming Approach". INF^oR 21, 61-75. 7. Y.N. Lien, E. Ma and B.W.-S. Wah (1993). "Tansformation of the Generalized Traveling-- Salesman Problem into the Standard Traveling-Salesmain Problem". Information Sciences 74, 177-189. 8. S. Lin and B.W. Kernighan (1973). "An Effective Heuristic Algorithm for the Traveling Salesman Problem". Operations Research 21, 498-516. 9. C.E. Noon and J.C. Bean (1991). "A Lagrangian Based Approach for the Asymmetric Generalized Traveling Salesman Problem". Operations Research 39, 623-32. 10. C.E. Noon and J.C. Bean (1993). "An Efficient Transformation of the Generalized Traveling Salesman Problem". INFOR 31, 39-44. 11. M.W. Padberg and G. Rinaldi (1991). "A Branch-and-Cut Algorithm for the Resolution of Large-Scale Symmetric Traveling Salesman Problems". SIAM Review 33, 6-100. 12. J.P. Saksena ( 1970). "Mathematical Model for Scheduling Clients through Welfare Agencies". CORS Journal 8, 185-200. 13. S.S. Srivastava, S. Kumar, R.C. Garg and P. Sen (1969). "Generalized Travelling Salesman Problem through Sets of Nodes". CORS Journal 7, 97-101. 14. A. Volgenant ( 1991). "Transforming the Generalized Traveling Salesman Problem through n Sets of Nodes into a Standard Problem". Presented at the 14th International Symposium on Mathematical Programming, Amsterdam. LIMAV, Universite de Valenciennes, 59304 Valenciennes Cedex, France Gilbert Laporte obtained his Ph.D. in Operations Research at the London School of Economics in 1975. He is Professor of Operations Research at the Ecole des Hautes Etudes Commerciales, de Montreal, and adjunct Professor at the University of Alberta. He is also a member of the Centre for Research on Transportation (serving as director from 1987 to 1991) and Fellow of the Center for Management of Operations and Logistics, University of Texas at Austin. He has authored or coauthored several books, as well as more than 150 scientific articles in combinatorial optimization, mostly in the area of vehicle routing, location and timetabling. He is the Editor of Transportation Science, and associate editor or editorial board member of several other operations research journals. He has received many scientific awards including the Pergamon Prize (United Kingdom) in 1987, the 1994 Merit Award of the Canadian Operational Research Society, and the CORS Practice Prize on two occasions. In 1998 he became a member of the Royal Society of Canada. Frederic Semet is asociate professor at the University of Valenciennes, France. He received his Ph.D. in the Department of Mathematics, Ecole Polytechnique Federale de Lausanne. He is a member of the Groupe de recherche interdisciplinaire en sante and of the Centre for research on transportation. His research interests include vehicle routing, workforce scheduling and classification. He has been involved in a variety of projects for distribution companies.