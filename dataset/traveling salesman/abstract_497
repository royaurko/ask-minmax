Password:   We consider the standard dynamic program to solve the TSP. We then obtain exponentially large neighborhoods by selecting a polynomially bounded number of states, and restricting the dynamic program to those states only. We show how the Balas and Simonetti neighborhood and the insertion dynasearch neighborhood can be viewed in this manner. We also show that one of the dynasearch neighborhoods can be derived directly from the 2-exchange neighborhood using this approach. Keywords Traveling salesman problem ; Very large-scale neighborhood search ; Dynamic programming 1. Introduction Neighborhood search is a practical method for efficiently finding “good” solutions to hard combinatorial optimization problems. Let P=min{cx:x∈D} P = min { c x : x ∈ D } be an instance of an optimization problem with cost vector c c and feasible set D D . Given a feasible solution x x in D D , a neighborhood search algorithm has an associated neighborhood function N N that identifies a subset, N(x) N ( x ) , of D D as the “neighbors” of x x under N N . A local search algorithm has the following basic scheme. Start with a current feasible solution, say x x , and iteratively replace the current solution with a neighbor y y of the current solution with lower objective value. Continue until there is no neighbor with improved objective value, at which point the current solution is called locally optimal . There is a large literature on local search as well as extensions of local search including simulated annealing and tabu search. For an excellent reference on local search in combinatorial optimization, see  [1] . In very large-scale neighborhood ( VLSN ) search, the number of solutions in a neighborhood is very large (often exponential) with respect to the size of the input. As a rule of thumb, one expects to find better locally optimal solutions assuming that one can search a larger neighborhood efficiently. Unfortunately, for many very large neighborhoods, the search time may be much larger. There are a variety of techniques for efficiently searching neighborhoods in VLSN search. One general approach that has been successful in searching exponentially large neighborhoods in polynomial time has been dynamic programming. See [3] , [12]  and  [9] for surveys on these techniques, including a number of papers on VLSN search that employ dynamic programming. See also [6] for representing neighborhoods using context free grammars so that the dynamic program is derived automatically from the grammar.