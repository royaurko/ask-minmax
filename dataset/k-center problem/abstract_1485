We introduce a faster pseudopolynomial time algorithm for the SubsetSum
problem: deciding if there exists a subset of a given set $S$ whose elements
sum to a target number $t$, in $\tilde{O}\left(\sqrt{n}\:t\right)$ time, where
$n$ is the size of $S$. In fact, we answer a more general question than that,
we compute this for all target numbers $t\leq u$ in
$\tilde{O}\left(\sqrt{n}\:u\right)$. Our algorithm improves on the textbook
$O(nu)$ dynamic programming algorithm, and as far as we know, is the fastest
general algorithm for the problem. Our approach is based on a fast Minkowski
sum calculation that exploits the structure of subset sums of small intervals.
Finally, we attempt to shed some light on the number of applications this
problem and its variations have.