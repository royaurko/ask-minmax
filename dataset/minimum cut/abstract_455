We show how to find a small loop curser in a Bayesian network. Finding such a
loop cutset is the first step in the method of conditioning for inference. Our
algorithm for finding a loop cutset, called MGA, finds a loop cutset which is
guaranteed in the worst case to contain less than twice the number of variables
contained in a minimum loop cutset. We test MGA on randomly generated graphs
and find that the average ratio between the number of instances associated with
the algorithms' output and the number of instances associated with a minimum
solution is 1.22.