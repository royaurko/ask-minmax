An \itbf{indeterminate string} (or, more simply, just a \itbf{string}) $\s{x}
= \s{x}[1..n]$ on an alphabet $\Sigma$ is a sequence of nonempty subsets of
$\Sigma$. We say that $\s{x}[i_1]$ and $\s{x}[i_2]$ \itbf{match} (written
$\s{x}[i_1] \match \s{x}[i_2]$) if and only if $\s{x}[i_1] \cap \s{x}[i_2] \ne
\emptyset$. A \itbf{feasible array} is an array $\s{y} = \s{y}[1..n]$ of
integers such that $\s{y}[1] = n$ and for every $i \in 2..n$, $\s{y}[i] \in
0..n\- i\+ 1$. A \itbf{prefix table} of a string $\s{x}$ is an array $\s{\pi} =
\s{\pi}[1..n]$ of integers such that, for every $i \in 1..n$, $\s{\pi}[i] = j$
if and only if $\s{x}[i..i\+ j\- 1]$ is the longest substring at position $i$
of \s{x} that matches a prefix of \s{x}. It is known from \cite{CRSW13} that
every feasible array is a prefix table of some indetermintate string. A
\itbf{prefix graph} $\mathcal{P} = \mathcal{P}_{\s{y}}$ is a labelled simple
graph whose structure is determined by a feasible array \s{y}. In this paper we
show, given a feasible array \s{y}, how to use $\mathcal{P}_{\s{y}}$ to
construct a lexicographically least indeterminate string on a minimum alphabet
whose prefix table $\s{\pi} = \s{y}$.