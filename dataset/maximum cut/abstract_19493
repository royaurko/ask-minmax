Maximum cardinality matching in bipartite graphs is an important and
well-studied problem. The fully dynamic version, in which edges are inserted
and deleted over time has also been the subject of much attention. Existing
algorithms for dynamic matching (in general graphs) seem to fall into two
groups: there are fast (mostly randomized) algorithms that do not achieve a
better than 2-approximation, and there slow algorithms with $\O(\sqrt{m})$
update time that achieve a better-than-2 approximation. Thus the obvious
question is whether we can design an algorithm -- deterministic or randomized
-- that achieves a tradeoff between these two: a $o(\sqrt{m})$ approximation
and a better-than-2 approximation simultaneously. We answer this question in
the affirmative for bipartite graphs.
  Our main result is a fully dynamic algorithm that maintains a $3/2 + \eps$
approximation in worst-case update time $O(m^{1/4}\eps^{/2.5})$. We also give
stronger results for graphs whose arboricity is at most $\al$, achieving a $(1+
\eps)$ approximation in worst-case time $O(\al (\al + \log n))$ for constant
$\eps$. When the arboricity is constant, this bound is $O(\log n)$ and when the
arboricity is polylogarithmic the update time is also polylogarithmic.
  The most important technical developement is the use of an intermediate graph
we call an edge degree constrained subgraph (EDCS). This graph places
constraints on the sum of the degrees of the endpoints of each edge: upper
bounds for matched edges and lower bounds for unmatched edges. The main
technical content of our paper involves showing both how to maintain an EDCS
dynamically and that and EDCS always contains a sufficiently large matching. We
also make use of graph orientations to help bound the amount of work done
during each update.