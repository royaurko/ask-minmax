We study the aggregate/group nearest neighbor searching for the MAX operator
in the plane. For a set $P$ of $n$ points and a query set $Q$ of $m$ points,
the query asks for a point of $P$ whose maximum distance to the points in $Q$
is minimized. We present data structures for answering such queries for both
$L_1$ and $L_2$ distance measures. Previously, only heuristic and approximation
algorithms were given for both versions. For the $L_1$ version, we build a data
structure of O(n) size in $O(n\log n)$ time, such that each query can be
answered in $O(m+\log n)$ time. For the $L_2$ version, we build a data
structure in $O(n\log n)$ time and $O(n\log \log n)$ space, such that each
query can be answered in $O(m\sqrt{n}\log^{O(1)} n)$ time, and alternatively,
we build a data structure in $O(n^{2+\epsilon})$ time and space for any
$\epsilon>0$, such that each query can be answered in $O(m\log n)$ time.
Further, we extend our result for the $L_1$ version to the top-$k$ queries
where each query asks for the $k$ points of $P$ whose maximum distances to $Q$
are the smallest for any $k$ with $1\leq k\leq n$: We build a data structure of
O(n) size in $O(n\log n)$ time, such that each top-$k$ query can be answered in
$O(m+k\log n)$ time.