Flash memory is a non-volatile computer memory comprising blocks of cells,
wherein each cell can take on q different values or levels. While increasing
the cell level is easy, reducing the level of a cell can be accomplished only
by erasing an entire block. Since block erasures are highly undesirable, coding
schemes - known as floating codes (or flash codes) and buffer codes - have been
designed in order to maximize the number of times that information stored in a
flash memory can be written (and re-written) prior to incurring a block
erasure.
  An (n,k,t)q flash code C is a coding scheme for storing k information bits in
$n$ cells in such a way that any sequence of up to t writes can be accommodated
without a block erasure. The total number of available level transitions in n
cells is n(q-1), and the write deficiency of C, defined as \delta(C) =
n(q-1)-t, is a measure of how close the code comes to perfectly utilizing all
these transitions. In this paper, we show a construction of flash codes with
write deficiency O(qk\log k) if q \geq \log_2k, and at most O(k\log^2 k)
otherwise.
  An (n,r,\ell,t)q buffer code is a coding scheme for storing a buffer of r
\ell-ary symbols such that for any sequence of t symbols it is possible to
successfully decode the last r symbols that were written. We improve upon a
previous upper bound on the maximum number of writes t in the case where there
is a single cell to store the buffer. Then, we show how to improve a
construction by Jiang et al. that uses multiple cells, where n\geq 2r.