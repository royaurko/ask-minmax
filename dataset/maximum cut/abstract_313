We study the problem of sketching an input graph, so that given the sketch,
one can estimate the weight of any cut in the graph within factor $1+\epsilon$.
We present lower and upper bounds on the size of a randomized sketch, focusing
on the dependence on the accuracy parameter $\epsilon>0$.
  First, we prove that for every $\epsilon > 1/\sqrt n$, every sketch that
succeeds (with constant probability) in estimating the weight of all cuts
$(S,\bar S)$ in an $n$-vertex graph (simultaneously), must be of size
$\Omega(n/\epsilon^2)$ bits. In the special case where the sketch is itself a
weighted graph (which may or may not be a subgraph) and the estimator is the
sum of edge weights across the cut in the sketch, i.e., a cut sparsifier, we
show the sketch must have $\Omega(n/\epsilon^2)$ edges, which is optimal.
Despite the long sequence of work on graph sparsification, no such lower bound
was known on the size of a cut sparsifier.
  We then design a randomized sketch that, given $\epsilon\in(0,1)$ and an
edge-weighted $n$-vertex graph, produces a sketch of size $\tilde
O(n/\epsilon)$ bits, from which the weight of any cut $(S,\bar S)$ can be
reported, with high probability, within factor $1+\epsilon$. The previous upper
bound is $\tilde O(n/\epsilon^2)$ bits, which follows by storing a cut
sparsifier (Bencz{\'u}r and Karger, 1996). To obtain this improvement, we
critically use both that the sketch need only be correct on each fixed cut with
high probability (rather than on all cuts), and that the estimation procedure
of the data structure can be arbitrary (rather than a weighted subgraph). We
also show a lower bound of $\Omega(n/\epsilon)$ bits for the space requirement
of any data structure achieving this guarantee.