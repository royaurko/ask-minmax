BEE is a compiler which facilitates solving finite domain constraints by
encoding them to CNF and applying an underlying SAT solver. In BEE constraints
are modeled as Boolean functions which propagate information about equalities
between Boolean literals. This information is then applied to simplify the CNF
encoding of the constraints. We term this process equi-propagation. A key
factor is that considering only a small fragment of a constraint model at one
time enables to apply stronger, and even complete reasoning to detect
equivalent literals in that fragment. Once detected, equivalences propagate to
simplify the entire constraint model and facilitate further reasoning on other
fragments. BEE is described in several recent papers. In this paper, after a
quick review of BEE, we elaborate on two undocumented details of the
implementation: the hybrid encoding of cardinality constraints and complete
equi-propagation. We thendescribe on-going work aimed to extend BEE to consider
binary representation of numbers.