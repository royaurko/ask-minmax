A ride sharing problem is considered where we are given a graph, whose edges
are equipped with a travel cost, plus a set of objects, each associated with a
transportation request given by a pair of origin and destination nodes. A
vehicle travels through the graph, carrying each object from its origin to its
destination without any bound on the number of objects that can be
simultaneously transported. The vehicle starts and terminates its ride at given
nodes, and the goal is to compute a minimum-cost ride satisfying all requests.
This ride sharing problem is shown to be tractable on paths by designing a $O(h
\log h+n)$ algorithm, with $h$ being the number of distinct requests and with
$n$ being the number of nodes in the path. The algorithm is then used as a
subroutine to efficiently solve instances defined over cycles, hence covering
all graphs with maximum degree $2$. This traces the frontier of tractability,
since $\bf NP$-hard instances are exhibited over trees whose maximum degree is
$3$.