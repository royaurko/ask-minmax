Memoryless computation is a novel means of computing any function of a set of
registers by updating one register at a time while using no memory. We aim to
emulate how computations are performed on modern cores, since they typically
involve updates of single registers. The computation model of memoryless
computation can be fully expressed in terms of transformation semigroups, or in
the case of bijective functions, permutation groups. In this paper, we view
registers as elements of a finite field and we compute linear permutations
without memory. We first determine the maximum complexity of a linear function
when only linear instructions are allowed. We also determine which linear
functions are hardest to compute when the field in question is the binary field
and the number of registers is even. Secondly, we investigate some matrix
groups, thus showing that the special linear group is internally computable but
not fast. Thirdly, we determine the smallest set of instructions required to
generate the special and general linear groups. These results are important for
memoryless computation, for they show that linear functions can be computed
very fast or that very few instructions are needed to compute any linear
function. They thus indicate new advantages of using memoryless computation.