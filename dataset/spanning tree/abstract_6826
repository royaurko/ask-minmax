For the purpose of this paper, updating a sub-array of the given
$d$-dimensional array, with a constant, refers to the addition of the constant
to all the elements of the sub-array. Querying a sub-array refers to
computation of the sum of all the elements in the sub-array. The 1D updating
and querying problem has been studied intensively, and is usually solved using
segment trees. This paper presents a new algorithm incorporating Binary Indexed
Tree to accomplish the same task. The algorithm is then extended to update and
query sub-matrices in a matrix (two-dimensional array). Finally, a general
solution is proposed for a $d$-dimensional array, with $N$ elements along every
dimension, having complexity $O(2^d*\log^{d}N)$ for each operation (query or
update). This is an improvement, in terms of time complexity, over previously
known algorithms utilizing hierarchical data structures like Quadtree and
Octree.