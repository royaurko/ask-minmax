An answer set is a plain set of literals which has no further structure that
would explain why certain literals are part of it and why others are not. We
show how argumentation theory can help to explain why a literal is or is not
contained in a given answer set by defining two justification methods, both of
which make use of the correspondence between answer sets of a logic program and
stable extensions of the Assumption-Based Argumentation (ABA) framework
constructed from the same logic program. Attack Trees justify a literal in
argumentation-theoretic terms, i.e. using arguments and attacks between them,
whereas ABA-Based Answer Set Justifications express the same justification
structure in logic programming terms, that is using literals and their
relationships. Interestingly, an ABA-Based Answer Set Justification corresponds
to an admissible fragment of the answer set in question, and an Attack Tree
corresponds to an admissible fragment of the stable extension corresponding to
this answer set.