In this paper we present a discrete data structure for reservations of
limited resources. A reservation is defined as a tuple consisting of the time
interval of when the resource should be reserved, $I_R$, and the amount of the
resource that is reserved, $B_R$, formally $R=\{I_R,B_R\}$.
  The data structure is similar to a segment tree. The maximum spanning
interval of the data structure is fixed and defined in advance. The granularity
and thereby the size of the intervals of the leaves is also defined in advance.
The data structure is built only once. Neither nodes nor leaves are ever
inserted, deleted or moved. Hence, the running time of the operations does not
depend on the number of reservations previously made. The running time does not
depend on the size of the interval of the reservation either. Let $n$ be the
number of leaves in the data structure. In the worst case, the number of
touched (i.e. traversed) nodes is in any operation $O(\log n)$, hence the
running time of any operation is also $O(\log n)$.