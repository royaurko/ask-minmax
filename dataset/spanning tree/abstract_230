We consider the minimum spanning tree problem in a setting where information
about the edge weights of the given graph is uncertain. Initially, for each
edge $e$ of the graph only a set $A_e$, called an uncertainty area, that
contains the actual edge weight $w_e$ is known. The algorithm can `update' $e$
to obtain the edge weight $w_e \in A_e$. The task is to output the edge set of
a minimum spanning tree after a minimum number of updates. An algorithm is
$k$-update competitive if it makes at most $k$ times as many updates as the
optimum. We present a 2-update competitive algorithm if all areas $A_e$ are
open or trivial, which is the best possible among deterministic algorithms. The
condition on the areas $A_e$ is to exclude degenerate inputs for which no
constant update competitive algorithm can exist. Next, we consider a setting
where the vertices of the graph correspond to points in Euclidean space and the
weight of an edge is equal to the distance of its endpoints. The location of
each point is initially given as an uncertainty area, and an update reveals the
exact location of the point. We give a general relation between the edge
uncertainty and the vertex uncertainty versions of a problem and use it to
derive a 4-update competitive algorithm for the minimum spanning tree problem
in the vertex uncertainty model. Again, we show that this is best possible
among deterministic algorithms.