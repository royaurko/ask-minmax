The aim of rendezvous in a graph is meeting of two mobile agents at some node
of an unknown anonymous connected graph. In this paper, we focus on rendezvous
in trees, and, analogously to the efforts that have been made for solving the
exploration problem with compact automata, we study the size of memory of
mobile agents that permits to solve the rendezvous problem deterministically.
We assume that the agents are identical, and move in synchronous rounds.
  We first show that if the delay between the starting times of the agents is
arbitrary, then the lower bound on memory required for rendezvous is Omega(log
n) bits, even for the line of length n. This lower bound meets a previously
known upper bound of O(log n) bits for rendezvous in arbitrary graphs of size
at most n. Our main result is a proof that the amount of memory needed for
rendezvous with simultaneous start depends essentially on the number L of
leaves of the tree, and is exponentially less impacted by the number n of
nodes. Indeed, we present two identical agents with O(log L + loglog n) bits of
memory that solve the rendezvous problem in all trees with at most n nodes and
at most L leaves. Hence, for the class of trees with polylogarithmically many
leaves, there is an exponential gap in minimum memory size needed for
rendezvous between the scenario with arbitrary delay and the scenario with
delay zero. Moreover, we show that our upper bound is optimal by proving that
Omega(log L + loglog n)$ bits of memory are required for rendezvous, even in
the class of trees with degrees bounded by 3.