A static binary search tree where every search starts from where the previous
one ends (lazy finger) is considered. Such a search method is more powerful
than that of the classic optimal static trees, where every search starts from
the root (root finger), and less powerful than when rotations are
allowed---where finding the best rotation based tree is the topic of the
dynamic optimality conjecture of Sleator and Tarjan. The runtime of the classic
root-finger tree can be expressed in terms of the entropy of the distribution
of the searches, but we show that this is not the case for the optimal lazy
finger tree. A non-entropy based asymptotically-tight expression for the
runtime of the optimal lazy finger trees is derived, and a dynamic
programming-based method is presented to compute the optimal tree.