Searching in partially ordered structures has been considered in the context
of information retrieval and efficient tree-like indexes, as well as in
hierarchy based knowledge representation. In this paper we focus on tree-like
partial orders and consider the problem of identifying an initially unknown
vertex in a tree by asking edge queries: an edge query $e$ returns the
component of $T-e$ containing the vertex sought for, while incurring some known
cost $c(e)$.
  The Tree Search Problem with Non-Uniform Cost is: given a tree $T$ where each
edge has an associated cost, construct a strategy that minimizes the total cost
of the identification in the worst case.
  Finding the strategy guaranteeing the minimum possible cost is an NP-complete
problem already for input tree of degree 3 or diameter 6. The best known
approximation guarantee is the $O(\log n/\log \log \log n)$-approximation
algorithm of [Cicalese et al. TCS 2012].
  We improve upon the above results both from the algorithmic and the
computational complexity point of view: We provide a novel algorithm that
provides an $O(\frac{\log n}{\log \log n})$-approximation of the cost of the
optimal strategy. In addition, we show that finding an optimal strategy is
NP-complete even when the input tree is a spider, i.e., at most one vertex has
degree larger than 2.