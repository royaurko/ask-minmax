In this short paper, we present an improved algorithm for approximating the
minimum cut on distributed (CONGEST) networks. Let $\lambda$ be the minimum
cut. Our algorithm can compute $\lambda$ exactly in
$\tilde{O}((\sqrt{n}+D)\poly(\lambda))$ time, where $n$ is the number of nodes
(processors) in the network, $D$ is the network diameter, and $\tilde{O}$ hides
$\poly\log n$. By a standard reduction, we can convert this algorithm into a
$(1+\epsilon)$-approximation $\tilde{O}((\sqrt{n}+D)/\poly(\epsilon))$-time
algorithm. The latter result improves over the previous
$(2+\epsilon)$-approximation $\tilde{O}((\sqrt{n}+D)/\poly(\epsilon))$-time
algorithm of Ghaffari and Kuhn [DISC 2013]. Due to the lower bound of
$\tilde{\Omega}(\sqrt{n}+D)$ by Das Sarma et al. [SICOMP 2013], this running
time is {\em tight} up to a $\poly\log n$ factor. Our algorithm is an extremely
simple combination of Thorup's tree packing theorem [Combinatorica 2007],
Kutten and Peleg's tree partitioning algorithm [J. Algorithms 1998], and
Karger's dynamic programming [JACM 2000].