In this paper, we are interested in the number of red nodes in red-black
trees. We first present an $O(n^2\log n)$ time dynamic programming solution for
computing $r(n)$, the largest number of red internal nodes in a red-black tree
on $n$ keys. Then the algorithm is improved to some $O(\log n)$ time recursive
and nonrecursive algorithms. Based on these improved algorithms we finally find
a closed-form solution of $r(n)$.