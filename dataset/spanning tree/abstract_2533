This thesis presents a number of results related to path traversal in trees
and graphs. In particular, we focus on data structures which allow such
traversals to be performed efficiently in the external memory setting. In
addition, for trees and planar graphs the data structures we present are
succinct. Our tree structures permit efficient bottom-up path traversal in
rooted trees of arbitrary degree and efficient top-down path traversal in
binary trees. In the graph setting, we permit efficient traversal of an
arbitrary path in bounded degree planar graphs. Our data structures for both
trees and graphs match or slightly improve current best results for external
memory path traversal in these settings while at the same time improving space
bounds due to the succinct nature of our data structures. Employing our path
traversal structure for bounded degree planar graphs, we describe a number of
useful applications of this technique for triangular meshes in R^2. As an
extension of the R^2 representation for triangular meshes we also present an
efficient external memory representation for well-shaped tetrahedral meshes in
R^3. The external memory representation we present is based on a partitioning
scheme that matches the current best-known results for well-shaped tetrahedral
meshes. We describe applications of path traversal in tetrahedral meshes which
are made efficient in the external memory setting using our structure. Finally,
we present a result on using jump-and-walk point location in well-shaped meshes
in both R^2 and R^3. We demonstrate that, given an approximate nearest
neighbour from among the vertices of a mesh, locating the simplex containing
the query point involves a constant length walk (path traversal) in the mesh.