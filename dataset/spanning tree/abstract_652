We consider dynamic subgraph connectivity problems for planar graphs. In this
model there is a fixed underlying planar graph, where each edge and vertex is
either "off" (failed) or "on" (recovered). We wish to answer connectivity
queries with respect to the "on" subgraph. The model has two natural variants,
one in which there are $d$ edge/vertex failures that precede all connectivity
queries, and one in which failures/recoveries and queries are intermixed.
  We present a $d$-failure connectivity oracle for planar graphs that processes
any $d$ edge/vertex failures in $sort(d,n)$ time so that connectivity queries
can be answered in $pred(d,n)$ time. (Here $sort$ and $pred$ are the time for
integer sorting and integer predecessor search over a subset of $[n]$ of size
$d$.) Our algorithm has two discrete parts. The first is an algorithm tailored
to triconnected planar graphs. It makes use of Barnette's theorem, which states
that every triconnected planar graph contains a degree-3 spanning tree. The
second part is a generic reduction from general (planar) graphs to triconnected
(planar) graphs. Our algorithm is, moreover, provably optimal. An implication
of Patrascu and Thorup's lower bound on predecessor search is that no
$d$-failure connectivity oracle (even on trees) can beat $pred(d,n)$ query
time.
  We extend our algorithms to the subgraph connectivity model where edge/vertex
failures (but no recoveries) are intermixed with connectivity queries. In
triconnected planar graphs each failure and query is handled in $O(\log n)$
time (amortized), whereas in general planar graphs both bounds become $O(\log^2
n)$.