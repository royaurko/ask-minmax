Enumeration algorithms have been one of recent hot topics in theoretical
computer science. Different from other problems, enumeration has many
interesting aspects, such as the computation time can be shorter than the total
output size, by sophisticated ordering of output solutions. One more example is
that the recursion of the enumeration algorithm is often structured well, thus
we can have good amortized analysis, and interesting algorithms for reducing
the amortized complexity. However, there is a lack of deep studies from these
points of views; there are only few results on the fundamentals of enumeration,
such as a basic design of an algorithm that is applicable to many problems. In
this paper, we address new approaches on the complexity analysis, and propose a
new way of amortized analysis Push-Out Amortization for enumeration algorithms,
where the computation time of an iteration is amortized by using all its
descendant iterations. We clarify sufficient conditions on the enumeration
algorithm so that the amortized analysis works. By the amortization, we show
that many elimination orderings, matchings in a graph, connected vertex induced
subgraphs in a graph, and spanning trees can be enumerated in O(1) time for
each solution by simple algorithms with simple proofs.