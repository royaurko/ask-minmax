The increasing availability of web services within an organization and on the
Web demands for efficient search and composition mechanisms to find services
satisfying user requirements. Often consumers may be unaware of exact service
names that is fixed by service providers. Rather consumers being well aware of
their requirements would like to search a service based on their commitments
(inputs) and expectations (outputs). Based on this concept we have explored the
feasibility of I/O based web service search and composition in our previous
work. The classical definition of service composition, i.e., one-to-one and
onto mapping between input and output sets of composing services, is extended
to give rise to three types of service match: Exact, Super and Partial match.
Based on matches of all three types, different kinds of compositions are
defined: Exact, Super and Collaborative Composition. Process of composition,
being a match between inputs and outputs of services, is hastened by making use
of information on service dependency that is made available in repository as an
one time preprocessed information obtained from services populating the
registry. Adopting three schemes for matching for a desired service outputs,
the possibility of having different kinds of compositions is demonstrated in
form of a Composition Search Tree. As an extension to our previous work, in
this paper, we propose the utility of Composition Search Tree for finding
compositions of interest like leanest and the shortest depth compositions.