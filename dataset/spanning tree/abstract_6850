Champarnaud and Ziadi, and Khorsi et al. show how to compute the equation
automaton of word regular expression $E$ via the $k$-C-Continuations.
  Kuske and Meinecke extend the computation of the equation automaton to a
regular tree expression $E$ over a ranked alphabet $\Sigma$ and produce a
$O(R\cdot|E|^2)$ time and space complexity algorithm, where $R$ is the maximal
rank of a symbol occurring in $\Sigma$ and $|E|$ is the size of $E$. In this
paper, we give a full description of the algorithm based on the acyclic
minimization of Revuz. Our algorithm, which is performed in an $O(|Q|\cdot|E|)$
time and space complexity, where $|Q|$ is the number of states of the produced
automaton, is more efficient than the one obtained by Kuske and Meinecke.