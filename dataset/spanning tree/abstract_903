Motivated by the increasing need to understand the algorithmic foundations of
distributed large-scale graph computations, we study a number of fundamental
graph problems in a message-passing model for distributed computing where $k
\geq 2$ machines jointly perform computations on graphs with $n$ nodes
(typically, $n \gg k$). The graph is assumed to be randomly partitioned among
the $k$ machines, a common implementation in many real-world systems. The
communication is point-to-point, and the goal is to minimize the time
complexity, i.e., the number of communication rounds of the computation.
  Our main result is an (almost) optimal distributed randomized algorithm for
graph connectivity. Our algorithm runs in $\tilde{O}(n/k^2)$ rounds
($\tilde{O}$ notation hides a $\text{polylog}(n)$ factor and an additive
$\text{polylog}(n)$ term). This improves over the best previously known bound
of $\tilde{O}(n/k)$ [Klauck et al., SODA 2015], and is optimal (up to a
polylogarithmic factor) in view of the existing lower bound of
$\tilde{\Omega}(n/k^2)$. Our improved algorithm uses a bunch of techniques,
including linear graph sketching, which for the first time is applied in a
non-trivial way in distributed computing. We then present fast randomized
algorithms for computing minimum spanning trees, (approximate) min-cuts, and
for many graph verification problems. All these algorithms take
$\tilde{O}(n/k^2)$ rounds, and are optimal up to polylogarithmic factors. We
also show an almost matching lower bound of $\tilde{\Omega}(n/k^2)$ for many
graph verification problems.