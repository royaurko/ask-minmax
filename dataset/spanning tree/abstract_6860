This paper proposes a new mechanism for pruning a search game-tree in
computer chess. The algorithm stores and then reuses chains or sequences of
moves, built up from previous searches. These move sequences have a built-in
forward-pruning mechanism that can radically reduce the search space. A typical
search process might retrieve a move from a Transposition Table, where the
decision of what move to retrieve would be based on the position itself. This
algorithm stores move sequences based on what previous sequences were better,
or caused cutoffs. This is therefore position independent and so it could also
be useful in games with imperfect information or uncertainty, where the whole
situation is not known at any one time. Over a small set of tests, the
algorithm was shown to clearly out-perform Transposition Tables, both in terms
of search reduction and game-play results.