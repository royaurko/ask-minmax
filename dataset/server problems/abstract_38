  We consider the k-server problem , with the additional assumption that (1) the adversary makes only lazy moves (if it has a free server, not matched with our server, then it puts a request on such a server without moving it), and (2) whenever all our servers are matched with his servers, then he announces it to our algorithm. We show a k -competitive algorithm against such an adversary. As with the original server problem, no better than a k -competitive on-line algorithm is possible in this model. Keywords Analysis of algorithms ; combinatorial problems ; on-line algorithms ; competitive analysis ; server problems [1] M. Chrobak and L.L. Larmore, An optimal algorithm for the server problem on trees, SIAM J. Comput. , to appear. [2] M. Chrobak and L.L. Larmore, A new approach to the server problem, SIAM J. Discrete Math. , to appear. [3] D. Coppersmith, P.G. Doyle, P. Raghavan, M. Snir Random walks on weighted graphs and applications to on-line algorithms Proc. 22nd ACM STOC (1990), pp. 369–378 [4] A. Fiat, Y. Rabani, Y. Ravid Competitive k -server algorithms Proc. 31st Symp. on Foundations of Computer Science (1990), pp. 454–463 [5] M. Manasse, L.A. McGeoch, D. Sleator Competitive algorithms for server problems Proc. 20th ACM Symp. on Theory of Computing (1988), pp. 322–333J. Algorithms, 11 (1990), pp. 208–230 [6] P. Raghavan, M. Snir Memory versus randomization in on-line algorithms Proc. of 16th Internat. Colloq. on Automata, Languages, and Programming, Lecture Notes in Computer Science, 372, Springer, Berlin (1989), pp. 687–703 Copyright © 1991 Published by Elsevier B.V.