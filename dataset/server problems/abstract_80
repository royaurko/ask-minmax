Volume 2516 of the series Lecture Notes in Computer Science pp 158-176 Date: 10 October 2002 Learning Unknown Attacks — A Start James E. Just Affiliated with Teknowledge Corporation , James C. Reynolds Affiliated with Teknowledge Corporation , Larry A. Clough Affiliated with Teknowledge Corporation , Melissa Danforth Affiliated with University of California , Karl N. Levitt Affiliated with University of California , Ryan Maglich Affiliated with Teknowledge Corporation , Jeff Rowe Affiliated with University of California Since it is essentially impossible to write large-scale software without errors, any intrusion tolerant system must be able to tolerate rapid, repeated unknown attacks without exhausting its redundancy. Our system provides continued application services to critical users while under attack with a goal of less than 25% degradation of productivity. Initial experimental results are promising. It is not yet a general open solution. Specification-based behavior sensors (allowable actions, objects, and QoS) detect attacks. The system learns unknown attacks by relying on two characteristics of network-accessible software faults: attacks that exploit them must be repeatable (at least in a probabilistic sense) and, if known, attacks can be stopped at component boundaries. Random rejuvenation limits the scope of undetected errors. The current system learns and blocks single-stage unknown attacks against a protected web server by searching and testing service history logs in a Sandbox after a successful attack. We also have an initial class-based attack generalization technique that stops web-server buffer overflow attacks. We are working to extend both techniques.