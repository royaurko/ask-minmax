Password: Minimizing Waiting Time Variance (WTV) is a job scheduling problem where we schedule a batch of n n jobs, for servicing on a single resource, in such a way that the variance of their waiting times is minimized. Minimizing WTV is a well known scheduling problem, important in providing Quality of Service (QoS) in many industries. Minimizing the variance of job waiting times on computer networks can lead to stable and predictable network performance. Since the WTV minimization problem is NP-hard, we develop two heuristic job scheduling methods, called Balanced Spiral and Verified Spiral, which incorporate certain proven properties of optimal job sequences for this problem. We test and compare our methods with four other job scheduling methods on both small and large size problem instances. Performance results show that Verified Spiral gives the best performance for the scheduling methods and problems tested in this study. Balanced Spiral produces comparable results, but at less computational cost. During our investigation we discovered a consistent pattern in the plot of WTV over mean of all possible sequences for a set of jobs, which can be used to evaluate the sacrifice of mean waiting time while pursuing WTV minimization. Keywords Waiting time variance ; Job scheduling ; Quality of Service (QoS) ; Computer networks 1. Introduction This paper supports an overall effort to achieve end-to-end QoS assurance for individual high-priority jobs on an information infrastructure (such as the Internet). We work on QoS models at the local, regional, and global levels. A local level QoS model aims to provide service stability and dependability on individual resources, leading to standard parts, which enable predictable performance. This simplifies QoS assurance at the regional and global levels. This paper represents our local level work and considers a single resource on a computer and network system. Resources provide services to processes, which are generated in response to users’ service requests. In a computer and network system, a router is a resource that provides the service of routing and forwarding packets. Timeliness is an important aspect of QoS on computer networks [1] . Various measures of timeliness exist for services on computer networks, including response time, delay, etc. [2] . Delay usually measures the time that a job spends on a computer or network resource. This can be considered completion time or the time elapsed between the job arriving at and leaving the resource after being serviced. Response time usually measures the time elapsed between sending a service request and receiving a response. For example, in a web browsing application, the response time is the elapsed time between sending a web request and receiving the requested web page. Thus, response time includes the round-trip data transmission time between the web client and server, and delays at the client computer, server, and all routers along the client–server path. Regardless of the measures considered, computer and network resources do not currently provide dependable timeliness of service. For example, a large variance in web request response times makes the service appear unstable and thus unpredictable from a user's perspective. However, if service is dependable or stable over time, a user can establish an expectation on timeliness of service. Service consistency within the user's expectations will lead to user satisfaction and allow the user to plan a service request in advance so as to get service on time. The goal of this study is to pursue dependability and stability in service timeliness by minimizing its variance. We would like to see the same service request served at a consistent level of timeliness with minimum variance. Merten and Muller [3] stated the importance of minimizing response time variance in computer file organization problems. This study focuses on a job scheduling method to minimize WTV to achieve service stability on an individual resource. It is important to have an efficient heuristic method for computer and network resources since they need to handle many concurrent jobs. For example, a network router may process hundreds of thousands of data packets per second. We develop two job scheduling methods and define sets of small and large WTV problem instances to compare the performance of our methods with existing ones. During our investigation, we discovered that when the means and variances of job waiting times from all possible sequences in a set of jobs are plotted, a consistent pattern emerges. We present these findings before concluding the paper. 2. Job scheduling Since most computer and network resources may receive multiple service requests (jobs) at a given time, scheduling is required to determine the order in which jobs are serviced. On computers and networks, a large job may be divided into multiple smaller units for processing in parallel or serial. In this study, we consider these smaller units as unique jobs. Different scheduling methods result in different job sequences, leading to different waiting times and WTV of individual jobs. When scheduling jobs, we can take into account several factors of individual jobs, such as processing time, priority, due date, and so on [4] . This study considers only the factor of processing time. Since jobs arrive dynamically at computer and network resources, we develop Batch Scheduled Admission Control (BSAC), which changes the dynamic system into a static one [5] . Using the BSAC method, dynamically arriving jobs are admitted into a resource in batches. Hence, in this study we investigate the problem of scheduling a batch of jobs to minimize WTV, given the processing times of those jobs. Our concern is to provide better QoS in computer systems, thus we review job scheduling literature, which has been studied extensively for managing computer and network resources [6] , [7] , [8] , [9] , [10] , [11] , [12]  and  [13] . This is also a well known problem in many other fields, such as manufacturing resources in production environments [4] . There exists theoretical and application oriented analysis of deterministic scheduling problems arising in computer and manufacturing environments [14] . Most existing job scheduling methods aim to optimize the worst case or mean performance of various measures such as execution time, throughput, resource utilization, etc. Statistically, given a sample or population, worst case performance corresponds to the minimum or maximum value, and mean performance corresponds to the mean value. These objectives differ from our objective of minimizing the performance variance. Consequently, such methods cannot be directly applied to the job scheduling problem in this study. There are a number of studies which consider minimizing the variance of job completion time or completion time variance (CTV) [15] , [16] , [17] , [18] , [19] , [20] , [21] , [22] , [23] , [24] , [25] , [26] , [27] , [28] , [29] , [30]  and  [31] . A tabu search-based procedure, a dynamic programming algorithm, and a branch and bound algorithm for the CTV problem have been reported [17] , [18]  and  [32] . Several heuristic methods have been developed for the CTV problem [25] , [27]  and  [33] . There are only a few studies that consider job scheduling to minimize WTV, although a job sequence for WTV and a job sequence for CTV are antithetic [3] . For example, the WTV value of a sequence ( 1,2,…,n-1,n 1 , 2 , … , n - 1 , n ) is equal to the CTV value of its antithetical one ( n-1,n-2,…,1,n n - 1 , n - 2 , … , 1 , n ). Two studies report several heuristic methods of job scheduling for WTV problems and compare their performance on small data sets [3]  and  [33] . Other studies prove the V-Shape property of the optimal sequence for CTV and WTV [3] , [16]  and  [33] . In a computer and network system, it is desirable to minimize WTV because CTV relies on the variable sizes of jobs, which is out of our control. CTV and WTV problems are NP-hard [28] . Thus, cost-efficient heuristic methods of job scheduling are necessary for practical use on computers and networks to schedule jobs efficiently and achieve service stability.