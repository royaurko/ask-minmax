The authors describe a heuristic for dynamically scheduling time-constrained tasks in a distributed environment. When a task is submitted to a node, the scheduling software tries to schedule the task locally so as to meet its deadline. If that is not feasible, it tries to locate another node where this could be done with a high probability of success. Nodes in the system inform each other about their state (vis-a-vis the availability of free cycles) using a combination of broadcasting and gossiping. The performance of the proposed protocol is evaluated both analytically and via simulation. Based on these findings, they argue that keeping a diverse availability profile and using passive bidding (through gossiping) are both advantageous to distributed scheduling for real-time systems