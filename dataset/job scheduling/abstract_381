Despite growing popularity of small-scale clusters built out of off-the-shelf components, there has been little research on how these small-scale clusters behave under different scheduling policies. Batch scheduling policies with backfilling provide excellent space-sharing strategy for parallel jobs. However, as the performances of uniprocessor and symmetric multiprocessor have improved with time-sharing scheduling strategies, it is intuitive that the performance of a cluster of PCs with distributed memory may also improve with time-sharing strategies, or a combination of time-sharing and space-sharing strategies. Apart from the batch scheduling policies, this research explores the possibilities of using synchronized time-sharing scheduling algorithms for clusters. This paper describes simulation of the Gang scheduling policies on top of an existing batch scheme. The simulation results indicate that time-sharing scheduler for clusters could exhibit superior performance over a batch policy