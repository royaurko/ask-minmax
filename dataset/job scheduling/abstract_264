Simultaneous parallel computational grid jobs require reservation by the local job schedulers to ensure allocation of matching time slots at the different sites involved. However, reservations create road blocks in the local schedule, leading to only a small percentage of reservations being tolerable. A large number of reservations typically has adverse effects on local response times and machine utilization. We have extended our SCOJO scheduler to enable advance reservations. SCOJO can perform space sharing or gang scheduling and can run as either adaptive or traditional non-adaptive variant. We show that gang scheduling is more flexible than space sharing in regards to tolerating reservations. We also show that, for space sharing and a low multiprogramming level, the adaptive variants can tolerate reservations better than the non-adaptive variants.