Gang scheduling is a job scheduling policy for parallel computers that combines elements of space-sharing and time-sharing. In this paper we analyze the performance of gang scheduling policies that allow the remapping of an executing job to a new set of processors. Most previously proposed gang-scheduling policies do not allow such job remapping under the assumption that it is prohibitively expensive. Through a detailed trace-driven simulation, we analyze the tradeoff between the benefits and overheads of such job relocation. Our results show that gang-scheduling policies that support such job relocation offer significant performance gains over policies that do not use remapping