Computational grids have the potential for solving large-scale scientific problems using heterogeneous and geographically distributed resources. However, a number of major technical hurdles must be overcome before this potential can be realized. One problem that is critical to effective utilization of computational grids is the efficient scheduling of jobs. This work addresses this problem by describing and evaluating a grid scheduling architecture and a job-scheduling algorithm. The architecture is scalable and does not assume control of local site resources. In our algorithm Grid Resource Manager or Grid Scheduler performs resource brokering and job scheduling. The scheduler selects computational resources based on job requirements, job characteristics and information provided by the resources. The main aim of these schedulers is to minimize the total time to release for the individual application. The Time To Release (TTR) includes the processing time of the program, waiting time in the queue, transfer of input and output data to and from the resource. Since grid resources are heterogeneous and distributed over many areas the transmission time is very important criteria. In this paper, an algorithm for minimum time to release is proposed. The proposed scheduling algorithm has been compared with other scheduling schemes such as First Come First Served (FCFS) and Min-Min. These existing algorithms does not consider the transmission time (in time and out time) when scheduling jobs to resources. The proposed algorithm has been verified through the GridSim simulation toolkit and the simulation results confirm that the proposed algorithm produce schedules where the execution time of the application is minimized. The average weighted response times of all submitted jobs decrease up to about 19.79%. The results have been verified using different workloads and Grid configurations.