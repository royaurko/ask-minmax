This paper presents an attempt to improve job scheduling over heterogeneous GRID nodes by employing machine learning methods. Our proposed architecture takes into account the fact that GRID frameworks and their modules are not easy to modify or re-implement. It is therefore our aim to provide a plug-in which can be easily added to existing frameworks, thus avoiding significant and time-consuming modifications. Furthermore, we assume that existing scheduling algorithm in the framework should not be completely overridden, but rather modified only if there are chances, based on historical data, that the modification will yield a better result. Finally, we focus on use of off-the-shelf simple machine learning methods in a black-box manner with internal parameter optimization. We present three experiments within a simulated environment, performed with synthetic data aimed at congestion of the system. The results show that improvements over the simple scheduling algorithms can be made.