  This paper discusses the problem of simultaneously selecting and scheduling parallel machines to minimize the sum of machine holding cost and job tardiness cost. A combinatorial optimization model is developed for this purpose. Solving the developed model is NP-hard. A heuristic algorithm is developed to locate the optimal or near optimal solutions based on a Tabu search mechanism specially designed to control the search process in the solution neighborhood for jobs scheduled on specific machines. Numerical examples show that the solutions of the model lead to compromises between the system cost related to machine selection and the operational cost related to job tardiness penalties. The examples also show that the developed algorithm is effective and computationally efficient. Keywords Machine selection ; Parallel machine scheduling ; Optimization ; Tabu search 1. Introduction In recent years, parallel machine scheduling problems have been studied by many researchers [1] , [2] , [3] , [4]  and  [5] . In a general parallel machine scheduling problem, a set of independent jobs are to be scheduled on a number of parallel machines to meet certain job completion time related objectives [1] . Minimizing total weighted job tardiness is one of the objectives often used in scheduling parallel machines [6]  and  [7] . This more specific problem has also been studied extensively as can be found in the literature [2] , [3] , [4] , [8]  and  [9] . When the job tardiness penalty weights are arbitrary positive numbers, the problem is NP-hard in strong sense [9]  and  [10] and it is NP-hard in ordinary sense when all weights are equal [11] . Alidaee and Rosa [9] generalized the modified due date (MDD) heuristic algorithm of Baker and Bertrand [12] for single machine problems and used it to solve parallel machine problems. Liaw et al. [4] extended the work of Azizoglu and Kirca [2] from weighted flow-time to total weighted tardiness and developed a branch and bound algorithm to solve the problem. However, solving this problem by branch and bound algorithm is computationally prohibitive due to its strong NP-hard property. Recently, local search methods were used to solve parallel machine scheduling problems. Sivrikaya and Ulusoy [1] used a genetic algorithm to solve a parallel machine scheduling problem with earliness and tardiness penalties. Radhakrishnan and Ventura [13] developed a simulated annealing method to search for optimal or near optimal solutions of parallel machine scheduling problems with earliness and tardiness penalties considering sequence-dependent set-up times. Bilge et al. [3] used a Tabu search method to schedule parallel machines with total weighted tardiness penalties. These local search-based algorithms can successfully locate near optimal solutions for parallel machine scheduling problems of real life sizes. In this paper, we also consider a parallel machine scheduling problem with additional decisions to identify the machines from a set of potential machines. The problem is to select a number of machines and to schedule a set of given independent jobs to be processed by the selected machines. Scheduling the jobs on the selected machines is a parallel machine scheduling problem. The selection and scheduling objective is to minimize the sum of machine holding cost and the cost incurred from total weighted job tardiness penalties. To solve this problem, we first developed a combinatorial optimization model. The model is an extension to that of a regular parallel machine scheduling problem. Hence it is also a NP-hard problem. Directly solving this problem by a brute force search algorithm may not be efficient if the size of the problem increases. In this research, we developed a heuristic search algorithm based on Tabu search to locate optimal or near optimal solutions of the extended problem. A Tabu search mechanism was specially designed to control the search process in the solution neighborhood for jobs scheduled on specific machines. The heuristic algorithm is able to find optimal or near optimal solutions for problems of larger sizes. In Section 2 , details of the problem and the optimization model are presented. In Section 3 several small size example problems are solved using optimization software to demonstrate the nature of the problem and the features of the model. Section 4 presents details of the Tabu search heuristic algorithm. In Section 5 , a number of example problems of various sizes solved by the heuristic algorithm are presented. Computational results show that the heuristic method is effective in locating optimal or near optimal solutions and computationally efficient in solving larger size problems. Conclusions and future research in this area are given in Section 6 . 2. Problem description and model development Consider a problem to schedule N independent jobs on a number of parallel machines selected from a set of K potential machines. If a machine is selected to process any of the jobs, a machine cost will be incurred. Generally speaking, the cost of a machine with higher processing capacity will be higher than that with lower capacity. A job can be processed by more than one of the selected machines. Job processing time may be different if it is processed by a different machine. The distinct processing times for the same job on different machines reflect the differences in machine capacity to process the particular job. Once a job is determined to be processed by a certain machine, it will stay on the machine until completion. No job preemption is allowed. Delivery times for the jobs are specified and a tardiness penalty will be imposed if the job completion time misses the specified target time. Integrating the machine selection and job scheduling decisions, a combinatorial optimization model is developed to minimize machine cost and the cost related to the total weighted tardiness penalties imposed on the jobs. Before the mathematical formulation of the optimization model is presented, we first give notations and definitions below.