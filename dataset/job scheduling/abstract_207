Distributed memory parallel systems such as the IBM SP2 execute jobs using variable partitioning. Scheduling jobs in FCFS order leads to severe fragmentation and utilization loss, which lead to the development of backfilling schedulers such as EASY. This paper presents a backfilling scheduler that improves EAST in two ways: It supports both user selected and administrative priorities, and guarantees a bounded wait time for all jobs. The scheduler gives each waiting job a slack, which determines how long it may have to wait before running: `important' and `heavy' jobs will have little slack in comparison with others. Experimental results show that the priority scheduler reduces the average wait time by about 15% relative to EASY in an equal priorities scenario, and is responsive to differential priorities as well