Password: Production scheduling of grouped jobs has been an active research area since GT (Group Technology) was widely applied in practical manufacturing systems. To minimize the total flowtime of grouped jobs on a single machine, we combine jobs into fundamental runs based upon the necessary condition of the optimal solution. It is proved that the optimal solution is a combination of fundamental runs. A genetic algorithm is designed based on studies on the combinatorial rules of fundamental runs. The numerical results show that the computational performance of the algorithm depends on the number of ‘fundamental’ runs, not on the number of jobs. In general, the number of fundamental runs is far less than the number of jobs. Therefore, the algorithm has potential for practical application in large scale production systems. 1. Introduction Since Group Technology (GT) was widely applied in industrial manufacturing systems, the production scheduling of grouped jobs has been an active area of research [23] . In GT, the jobs are divided into several families according to their similarity. For example, the axis are processed by a same cutting tool consist of a family; the flange plates consist of other. A job does not require a setup when it follows another job from the same family, but a known family setup is required when it follows a member of another family. The computational complexity of the grouped job scheduling problem still remains open as to when the families can be split. This means that computation is very complicated without the simplifying GT assumption which requires precisely m setups in the schedule [15]  and  [17] , where m is the number of families. The grouped job scheduling problems come from the industrial practice. For example, grouped parts are processed in a machine tool works; steel pipes of different sizes are milled by different rollers in a steel works; and multi-products are produced in batch production mode in a chemical plant. Their production scheduling can all be described by the grouped job scheduling problems [1]  and  [14] . Presented approaches to the problems of grouped job scheduling include mainly dynamic programming and heuristic approaches [1]  and  [18] . Most approaches are based on identical job scheduling. Thus, when the number of jobs is large, these approaches would be limited by the computation time. To study and apply the production scheduling problems of grouped jobs, we begin with the simplest problem to minimize the total flowtime on a singe machine. First, we combine similar jobs into fundamental runs . What is called fundamental run is a job sequence of the same family which is generated by a simple algorithm based on the necessary condition of optimal solutions. It is proven that the optimal solution is just a combination of fundamental runs. Based on the studies on the combinatorial rules of fundamental runs, we propose the gene representation method for fundamental runs and develop a genetic algorithm to solve the problem. By the elaborate chromosome representation of binary string the recommended genetic algorithm works very efficiently. The results show that the computational performance of the algorithm depends on the number of fundamental runs, not on the number of jobs. In general, the number of fundamental runs is far less than the number of jobs. Therefore, the algorithm has potential for practical applications in large scale production systems. Compared with the results of literature [22] for the same examples, the genetic algorithm is much more efficient than the simulated annealing algorithm for this problem. This paper is organized as follows: First, we describe the problem mathematically and develop the necessary condition for an optimal solution in section 2 . Then, we discuss the theory of the fundamental runs in section 3 . The genetic algorithm based on fundamental runs is introduced in section 4 . Finally, we give numerical results and conclusions in 5  and  6 . 2. Problem description and necessary condition The problem of minimizing the total flowtime on a single machine for scheduling grouped jobs can be described as follows. Assume there are N jobs waiting for processing on a machine center. These jobs can be divided into m groups according to the similarity. For group i , there are n i jobs. The j th job in group i is noted as the pair ( i, j ). For job ( i, j ), the process time is p ij . The family setup time for group i is s i >0, i =1, 2, …, m . A schedule consists of a series of runs . A run is the job sequence that is processed between two family setups [23] . For a given schedule, let η be the number of runs. Denote the i th run as R i . Let β i be the number of jobs in R i , let [ i ] denote the index of the family processed in R i , let ([ i, j ]) denote the job pair of the j th job processed in R i , and define the position of R i in the schedule as K i , equation ( 1 ) equation ( 2 ) equation ( 4 ) The problem is equivalent to minimizing the total weighted flowtime with all weights equal to 1. From Property 2 in Webster and Baker [23] , we have the following property. 2.1. Property 1 To minimize the total flowtime of grouped jobs on a single machine, the optimal solution satisfies the conditions: 1. If p i,j ≤ p i,k , job ( i, j ) is scheduled ahead of job ( i, k ). 2. The runs are in SMMOT (Shortest Mean of Machine Occupied Time) order, i.e. equation ( 5 ) equation ( 6 ) where (1) means that any jobs with shorter process time are ahead of those of the same group with longer process time; (2) means the runs with shorter mean machine occupied time are ahead of those with longer; and (3) means conditions that a series of same family jobs can be divided into 2 runs by other runs. It is clear that Property 1 gives the necessary conditions for an optimal solution. To discuss how to maintain the necessary conditions, the following definition is given: Definition 1. A schedule that satisfies Property 1 is called a reasonable schedule . Reasonable schedules have the following properties.