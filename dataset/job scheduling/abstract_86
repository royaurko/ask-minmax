Current job scheduling systems for massively parallel machines and Beowulf-class compute clusters support batch scheduling involving two classes of queues: prime time vs. non-prime time. Jobs running in these queue classes must satisfy different criteria with respect to job-size, runtime, or other resource needs. These constraints are designed to delay big jobs to non-prime time in order to provide better quality service during the prime time workday hours. This paper surveys existing prime time/non-prime time scheduling policies and investigates the sensitivity of scheduling performance to changes in the jobsize and runtime limits allowed during prime time vs. non-prime time. Our simulation study, using real workload traces from the NASA NAS IBM SP/2 cluster gives strong evidence for the use of specific prime time limits and sheds light oil the performance trade-offs regarding response times, utilization, short term scheduling algorithm (FCFS vs. EASY backfilling), and success and overflow rates.