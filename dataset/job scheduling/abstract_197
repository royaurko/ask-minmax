Volume 3277 of the series Lecture Notes in Computer Science pp 233-252 Performance Implications of Failures in Large-Scale Cluster Scheduling Yanyong Zhang Affiliated with Lancaster University Department of Electrical and Computer Engineering, Rutgers University , Mark S. Squillante Affiliated with Carnegie Mellon University Mathematical Sciences Department, IBM T.J. Watson Research Center , Anand Sivasubramaniam Affiliated with Carnegie Mellon University Department of Computer Science and Engineering, Pennsylvania State University , Ramendra K. Sahoo Affiliated with Carnegie Mellon University Exploratory Server Systems Department, IBM T.J. Watson Research Center As we continue to evolve into large-scale parallel systems, many of them employing hundreds of computing engines to take on mission-critical roles, it is crucial to design those systems anticipating and accommodating the occurrence of failures. Failures become a commonplace feature of such large-scale systems, and one cannot continue to treat them as an exception. Despite the current and increasing importance of failures in these systems, our understanding of the performance impact of these critical issues on parallel computing environments is extremely limited. In this paper we develop a general failure modeling framework based on recent results from large-scale clusters and then we exploit this framework to conduct a detailed performance analysis of the impact of failures on system performance for a wide range of scheduling policies. Our results demonstrate that such failures can have a significant impact on the mean job response time and mean job slowdown under existing scheduling policies that ignore failures. We therefore investigate different scheduling mechanisms and policies to address these performance issues. Our results show that periodic checkpointing of jobs seems to do little to ease this problem. On the other hand, we demonstrate that information about the spatial and temporal correlation of failure occurrences can be very useful in designing a scheduling (job allocation) strategy to enhance system performance, with the former providing the greatest benefits.