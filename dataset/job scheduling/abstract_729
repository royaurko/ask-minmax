  The network of workstations (NOW) we consider for scheduling is heterogeneous and nondedicated, where computing power varies among the workstations and local and parallel jobs may interact with each other in execution. An effective NOW scheduling scheme needs sufficient information about system heterogeneity and job interactions. We use the measured power weight of each workstation to quantify the differences of computing capability in the system. Without a processing power usage agreement between parallel jobs and local user jobs in a workstation, job interactions are unpredictable, and performance of either type of jobs may not be guaranteed. Using the quantified and deterministic system information, we design a scheduling scheme called self-coordinated local scheduling on a heterogeneous NOW. Based on a power usage agreement between local and parallel jobs, this scheme coordinates parallel processes independently in each workstation based on the coscheduling principle. We discuss its implementation on Unix System V Release 4 (SVR4). Our simulation results on a heterogeneous NOW show the effectiveness of the self-coordinated local scheduling scheme. 1 R. H. Arpaci, May 1995, The interaction of parallel and sequential workloads on a network of workstations, Proceedings of the 1995 ACM SIGMETRICS Conference on Measurement and Modeling of Computer Systems, 267, 278 2 M.J. Atallah Models and algorithms for co-scheduling compute-intensive tasks on a network of workstations J. Parallel Distrib. Comput., 16 (1992), pp. 319–327 3 D. Bailey The NAS parallel benchmarks Int. J. Supercomputer Appl., 5 (1991), pp. 63–73 4 M. Crovella, 1991, Multiprogramming on multiprocessors, Proceedings of 3rd IEEE Symposium on Parallel and Distributed Processing, 590, 597 5 F. Douglis, J. Ousterhout Transparent process migration: Design alternatives and the Sprite implementation Software Practice Exper., 21 (1991), pp. 757–785 6 X. Du, Y. Dong, X. Zhang, June 1997, Characterizing communication interactions of parallel and sequential jobs on networks of workstations, Proceedings of IEEE Annual International Conference on Communications, 1133, 1137 7 A. C. Dusseau, R. Arpaci, D. Culler, May 1996, Effective distributed scheduling of parallel workloads, Proceedings of the 1996 ACM SIGMETRICS Conference on Measurement and Modeling of Computer Systems, 25, 36 8 D.G. Feitelson, L. Rudolph Gang scheduling performance benefits for fine-grain synchronization J. Parallel Distrib. Comput., 16 (1992), pp. 306–318 9 B. Goodheart, J. Cox The Magic Garden Explained: The Internals of Unix System V Release 4Prentice-Hall, New York (1994) 10 A. Gupta, A. Tucker, S. Urushibara, May 1991, The impact of operating system scheduling policies and synchronization methods on the performance of parallel applications, Proceedings of the 1991 ACM SIGMETRICS Conference, 120, 132 11 P. Krueger, D. Babbar Stealth: A liberal approach to distributed scheduling for networks of workstations Technical Report, OSU-CISRCI/93-TR6 (1993) 12 D. Nichols, 1987, Using idle workstations in a shared computing environment, Proceedings of the 11th ACM Symposium on Operating Systems Principles, 5, 12 13 J. Ousterhout, Oct. 1982, Scheduling techniques for concurrent systems, Proceedings of the 3rd International Conference on Distributed Computing Systems, 22, 30 14 P. G. Sobalvarro, W. E. Weihl, 1995, Demand-based co-scheduling of parallel jobs on multiprogrammed multiprocessors, Proceedings of the IPPS'95 Workshop on Job Scheduling Strategies for Parallel Processing, 63, 75 15 X. Zhang, Y. Yan, Oct. 1995, Modeling and characterizing parallel computing performance on heterogeneous NOW, Proceedings of the Seventh IEEE Symposium on Parallel and Distributed Processing, 25, 34 This work is supported in part by the National Science Foundation under Grants CCR-9102854 and CCR-9400719, by the Air Force Office of Scientific Research under Grant AFOSR-95-1-0215, and by the Office of Naval Research under Grant ONR-95-1-1239. Copyright © 1997 Academic Press. All rights reserved.