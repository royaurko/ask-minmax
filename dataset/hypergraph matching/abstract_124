We prove improved inapproximability results for hypergraph coloring using the
low-degree polynomial code (aka, the 'short code' of Barak et. al. [FOCS 2012])
and the techniques proposed by Dinur and Guruswami [FOCS 2013] to incorporate
this code for inapproximability results. In particular, we prove
quasi-NP-hardness of the following problems on $n$-vertex hyper-graphs:
  * Coloring a 2-colorable 8-uniform hypergraph with
$2^{2^{\Omega(\sqrt{\log\log n})}}$ colors.
  * Coloring a 4-colorable 4-uniform hypergraph with
$2^{2^{\Omega(\sqrt{\log\log n})}}$ colors.
  * Coloring a 3-colorable 3-uniform hypergraph with $(\log
n)^{\Omega(1/\log\log\log n)}$ colors.
  In each of these cases, the hardness results obtained are (at least)
exponentially stronger than what was previously known for the respective cases.
In fact, prior to this result, polylog n colors was the strongest quantitative
bound on the number of colors ruled out by inapproximability results for
O(1)-colorable hypergraphs.
  The fundamental bottleneck in obtaining coloring inapproximability results
using the low- degree long code was a multipartite structural restriction in
the PCP construction of Dinur-Guruswami. We are able to get around this
restriction by simulating the multipartite structure implicitly by querying
just one partition (albeit requiring 8 queries), which yields our result for
2-colorable 8-uniform hypergraphs. The result for 4-colorable 4-uniform
hypergraphs is obtained via a 'query doubling' method. For 3-colorable
3-uniform hypergraphs, we exploit the ternary domain to design a test with an
additive (as opposed to multiplicative) noise function, and analyze its
efficacy in killing high weight Fourier coefficients via the pseudorandom
properties of an associated quadratic form.