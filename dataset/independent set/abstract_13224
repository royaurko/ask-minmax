FAYE, The Frame AnalYsis Executable, is a Java based implementation of the
Frame/Stream/Stop model for analyzing data. Unlike traditional Event based
analysis models, the Frame/Stream/Stop model has no preference as to which part
of any data is to be analyzed, and an Event get as equal treatment as a change
in the high voltage. This model means that FAYE is a suitable analysis
framework for many different type of data analysis, such as detector trends or
as a visualization core. During the design of FAYE the emphasis has been on
clearly delineating each of the executable's responsibilities and on keeping
their implementations as completely independent as possible. This leads to the
large part of FAYE being a generic core which is experiment independent, and
smaller section that customizes this core to an experiments own data
structures. This customization can even be done in C++, using JNI, while the
executable's control remains in Java. This paper reviews the Frame/Stream/Stop
model and then looks at how FAYE has approached its implementation, with an
emphasis on which responsibilities are handled by the generic core, and which
parts an experiment must provide as part of the customization portion of the
executable.