With the advances in computational technologies over the last decade, large
organizations have been investing in Information Technology to automate their
internal processes to cut costs and efficiently support their business
projects. However, this comes to a price. Business requirements always change.
Likewise, IT systems constantly evolves as developers make new versions of
them, which require endless administrative manual work to customize and
configure them, especially if they are being used in different contexts, by
different types of users, and for different requirements. Autonomic computing
was conceived to provide an answer to these ever-changing requirements.
Essentially, autonomic systems are self-configuring, self-healing,
self-optimizing, and self-protecting; hence, they can automate all complex IT
processes without human intervention. This paper proposes an autonomic model
based on Venn diagram and set theory for self-configuring C#.NET applications,
namely the self-customization of their GUI, event-handlers, and security
permissions. The proposed model does not require altering the source-code of
the original application; rather, it uses an XML-based customization file to
turn on and off the internal attributes of the application. Experiments
conducted on the proposed model, showed a successful automatic customization
for C# applications and an effective self-adaption based on dynamic business
requirements. As future work, other programming languages such as Java and C++
are to be supported, in addition to other operating systems such as Linux and
Mac so as to provide a standard platform-independent autonomic self-configuring
model.