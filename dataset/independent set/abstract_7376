To appear in Theory and Practice of Logic Programming (TPLP)
  Bound Founded Answer Set Programming (BFASP) is an extension of Answer Set
Programming (ASP) that extends stable model semantics to numeric variables.
While the theory of BFASP is defined on ground rules, in practice BFASP
programs are written as complex non-ground expressions. Flattening of BFASP is
a technique used to simplify arbitrary expressions of the language to a small
and well defined set of primitive expressions. In this paper, we first show how
we can flatten arbitrary BFASP rule expressions, to give equivalent BFASP
programs. Next, we extend the bottom-up grounding technique and magic set
transformation used by ASP to BFASP programs. Our implementation shows that for
BFASP problems, these techniques can significantly reduce the ground program
size, and improve subsequent solving.