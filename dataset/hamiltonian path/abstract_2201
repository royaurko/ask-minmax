We discuss a new algorithmic type of problem in random graphs studying the
minimum number of queries one has to ask about adjacency between pairs of
vertices of a random graph $G\sim {\mathcal G}(n,p)$ in order to find a
subgraph which possesses some target property with high probability. In this
paper we focus on finding long paths in $G\sim \mathcal G(n,p)$ when
$p=\frac{1+\varepsilon}{n}$ for some fixed constant $\varepsilon>0$. This
random graph is known to have typically linearly long paths.
  To have $\ell$ edges with high probability in $G\sim \mathcal G(n,p)$ one
clearly needs to query at least $\Omega\left(\frac{\ell}{p}\right)$ pairs of
vertices. Can we find a path of length $\ell$ economically, i.e., by querying
roughly that many pairs? We argue that this is not possible and one needs to
query significantly more pairs. We prove that any randomised algorithm which
finds a path of length
$\ell=\Omega\left(\frac{\log\left(\frac{1}{\varepsilon}\right)}{\varepsilon}\right)$
with at least constant probability in $G\sim \mathcal G(n,p)$ with
$p=\frac{1+\varepsilon}{n}$ must query at least
$\Omega\left(\frac{\ell}{p\varepsilon
\log\left(\frac{1}{\varepsilon}\right)}\right)$ pairs of vertices. This is
tight up to the $\log\left(\frac{1}{\varepsilon}\right)$ factor.