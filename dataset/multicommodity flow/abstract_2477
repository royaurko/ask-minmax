In a software watermarking environment, several graph theoretic watermark
methods use numbers as watermark values, where some of these methods encode the
watermark numbers as graph structures. In this paper we extended the class of
error correcting graphs by proposing an efficient and easily implemented codec
system for encoding watermark numbers as reducible permutation flow-graphs.
More precisely, we first present an efficient algorithm which encodes a
watermark number $w$ as self-inverting permutation $\pi^*$ and, then, an
algorithm which encodes the self-inverting permutation $\pi^*$ as a reducible
permutation flow-graph $F[\pi^*]$ by exploiting domination relations on the
elements of $\pi^*$ and using an efficient DAG representation of $\pi^*$. The
whole encoding process takes O(n) time and space, where $n$ is the binary size
of the number $w$ or, equivalently, the number of elements of the permutation
$\pi^*$. We also propose efficient decoding algorithms which extract the number
$w$ from the reducible permutation flow-graph $F[\pi^*]$ within the same time
and space complexity. The two main components of our proposed codec system,
i.e., the self-inverting permutation $\pi^*$ and the reducible permutation
graph $F[\pi^*]$, incorporate important structural properties which make our
system resilient to attacks.