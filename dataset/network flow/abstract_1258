Every algorithm which can be executed on a computer can at least in principle
be realized in hardware, i.e. by a discrete physical system. The problem is
that up to now there is no programming language by which physical systems can
constructively be described. Such tool, however, is essential for the compact
description and automatic production of complex systems. This paper introduces
a programming language, called Akton-Algebra, which provides the foundation for
the complete description of discrete physical systems. The approach originates
from the finding that every discrete physical system reduces to a
spatiotemporal topological network of nodes, if the functional and metric
properties are deleted. A next finding is that there exists a homeomorphism
between the topological network and a sequence of symbols representing a
program by which the original nodal network can be reconstructed. Providing
Akton-Algebra with functionality turns it into a flow-controlled general data
processing language, which by introducing clock control and addressing can be
further transformed into a classical programming language. Providing
Akton-Algebra with metrics, i.e. the shape and size of the components, turns it
into a novel hardware system construction language.