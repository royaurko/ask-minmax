We consider wireless networks in which multiple paths are available between
each source and destination. We allow each source to split traffic among all of
its available paths, and ask the question: how do we attain the lowest possible
number of transmissions to support a given traffic matrix? Traffic bound in
opposite directions over two wireless hops can utilize the ``reverse
carpooling'' advantage of network coding in order to decrease the number of
transmissions used. We call such coded hops as ``hyper-links''. With the
reverse carpooling technique longer paths might be cheaper than shorter ones.
However, there is a prisoners dilemma type situation among sources -- the
network coding advantage is realized only if there is traffic in both
directions of a shared path. We develop a two-level distributed control scheme
that decouples user choices from each other by declaring a hyper-link capacity,
allowing sources to split their traffic selfishly in a distributed fashion, and
then changing the hyper-link capacity based on user actions. We show that such
a controller is stable, and verify our analytical insights by simulation.