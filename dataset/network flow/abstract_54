We consider single-sink network flow problems. An instance consists of a
capacitated graph (directed or undirected), a sink node $t$ and a set of
demands that we want to send to the sink. Here demand $i$ is located at a node
$s_i$ and requests an amount $d_i$ of flow capacity in order to route
successfully. Two standard objectives are to maximise (i) the number of demands
(cardinality) and (ii) the total demand (throughput) that can be routed subject
to the capacity constraints. Furthermore, we examine these maximisation
problems for three specialised types of network flow: unsplittable, confluent
and priority flows.
  In the {\em unsplittable flow} problem (UFP), we have edge capacities, and
the demand for $s_i$ must be routed on a single path. In the {\em confluent
flow} problem, we have node capacities, and the final flow must induce a tree.
Both of these problems have been studied extensively, primarily in the
single-sink setting. However, most of this work imposed the {\em no-bottleneck
assumption} (that the maximum demand $d_{max}$ is at most the minimum capacity
$u_{min}$). Given the no-bottleneck assumption (NBA), there is a factor
$4.43$-approximation algorithm due to Dinitz et al. for the unsplittable flow
problem. Under the stronger assumption of uniform capacities, there is a factor
$3$-approximation algorithm due to Chen et al. for the confluent flow problem.
However, unlike the UFP, we show that a constant factor approximation algorithm
cannot be obtained for the single-sink confluent flows even {\bf with} the NBA.
  Without NBA, we show that maximum cardinality single-sink UFP is hard to
approximate to within a factor $n^{.5-\epsilon}$ even when all demands lie in a
small interval $[1,1+\Delta]$ where $\Delta>0$ (but has polynomial input size).
This is very sharp since when $\Delta=0$, this becomes a maximum flow problem.