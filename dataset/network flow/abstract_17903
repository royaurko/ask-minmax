One of the fundamental problems in distributed computing is how to
efficiently perform routing in a faulty network in which each link fails with
some probability. This paper investigates how big the failure probability can
be, before the capability to efficiently find a path in the network is lost.
Our main results show tight upper and lower bounds for the failure probability
which permits routing, both for the hypercube and for the $d-$dimensional mesh.
We use tools from percolation theory to show that in the $d-$dimensional mesh,
once a giant component appears -- efficient routing is possible. A different
behavior is observed when the hypercube is considered. In the hypercube there
is a range of failure probabilities in which short paths exist with high
probability, yet finding them must involve querying essentially the entire
network. Thus the routing complexity of the hypercube shows an asymptotic phase
transition. The critical probability with respect to routing complexity lies in
a different location then that of the critical probability with respect to
connectivity. Finally we show that an oracle access to links (as opposed to
local routing) may reduce significantly the complexity of the routing problem.
We demonstrate this fact by providing tight upper and lower bounds for the
complexity of routing in the random graph $G_{n,p}$.