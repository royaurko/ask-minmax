It is well known that one can ignore parts of a belief network when computing
answers to certain probabilistic queries. It is also well known that the
ignorable parts (if any) depend on the specific query of interest and,
therefore, may change as the query changes. Algorithms based on jointrees,
however, do not seem to take computational advantage of these facts given that
they typically construct jointrees for worst-case queries; that is, queries for
which every part of the belief network is considered relevant. To address this
limitation, we propose in this paper a method for reconfiguring jointrees
dynamically as the query changes. The reconfiguration process aims at
maintaining a jointree which corresponds to the underlying belief network after
it has been pruned given the current query. Our reconfiguration method is
marked by three characteristics: (a) it is based on a non-classical definition
of jointrees; (b) it is relatively efficient; and (c) it can reuse some of the
computations performed before a jointree is reconfigured. We present
preliminary experimental results which demonstrate significant savings over
using static jointrees when query changes are considerable.