We introduce and study a general scheduling problem that we term the Packing
Scheduling problem. In this problem, jobs can have different arrival times and
sizes; a scheduler can process job $j$ at rate $x_j$, subject to arbitrary
packing constraints over the set of rates ($\vec{x}$) of the outstanding jobs.
The PSP framework captures a variety of scheduling problems, including the
classical problems of unrelated machines scheduling, broadcast scheduling, and
scheduling jobs of different parallelizability. It also captures scheduling
constraints arising in diverse modern environments ranging from individual
computer architectures to data centers. More concretely, PSP models
multidimensional resource requirements and parallelizability, as well as
network bandwidth requirements found in data center scheduling.
  In this paper, we design non-clairvoyant online algorithms for PSP and its
special cases -- in this setting, the scheduler is unaware of the sizes of
jobs. Our two main results are, 1) a constant competitive algorithm for
minimizing total weighted completion time for PSP and 2)a scalable algorithm
for minimizing the total flow-time on unrelated machines, which is a special
case of PSP.