We consider two-way relaying in a Gaussian diamond channel, where two
terminal nodes wish to exchange information using two relays. A simple baseline
protocol is obtained by time-sharing between two one-way protocols. To improve
upon the baseline performance, we propose two compute-and-forward (CF)
protocols: Compute-and-forward Compound multiple access channel (CF-CMAC) and
Compute-and-forward-Broadcast (CF-BC). These protocols mix the two flows
through the two relays and achieve rates better than the simple time-sharing
protocol. We derive an outer bound to the capacity region that is satisfied by
any relaying protocol, and observe that the proposed protocols provide rates
close to the outer bound in certain channel conditions. Both the CF-CMAC and
CF-BC protocols use nested lattice codes in the compute phases. In the CF-CMAC
protocol, both relays simultaneously forward to the destinations over a
Compound Multiple Access Channel (CMAC). In the simpler CF-BC protocol's
forward phase, one relay is selected at a time for Broadcast Channel (BC)
transmission depending on the rate-pair to be achieved. We also consider the
diamond channel with direct source-destination link and the diamond channel
with interfering relays. Outer bounds and achievable rate regions are compared
for these two channels as well. Mixing of flows using the CF-CMAC protocol is
shown to be good for symmetric two-way rates.