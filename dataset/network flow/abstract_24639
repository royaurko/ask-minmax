We consider the problem of synchronizing data in distributed storage networks
under an edit model that includes deletions and insertions. We present two
modifications of MDS, regenerating and locally repairable codes that allow
updates in the parity-check values to be performed with one round of
communication at low bit rates and using small storage overhead. Our main
contributions are novel protocols for synchronizing both hot and semi-static
data and protocols for data deduplication applications, based on intermediary
permutation, Vandermonde and Cauchy matrix coding.