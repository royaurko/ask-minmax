  Maximum adjacency (MA) ordering has effectively been applied to graph connectivity problems by Nagamochi and Ibaraki. In this note we show an application of MA ordering to the maximum flow problem with integral capacities to get a new polynomial-time algorithm. A scaling version of our algorithm runs in time, where m is the number of arcs, n the number of vertices, and U the maximum capacity. Keywords Maximum flow ; MA ordering 1. Introduction Maximum adjacency (MA) ordering has effectively been applied to graph connectivity problems by Nagamochi and Ibaraki (see [3] ). In this note we show an application of MA ordering to the maximum flow problem with integral capacities to get a new polynomial-time algorithm. For a flow network with n vertices, m arcs, and the maximum capacity U our MA ordering algorithm finds a maximum flow by augmentations, in time. We also give a scaling version of our algorithm that runs in time. Queyranne [4] showed that the maximum-capacity augmenting path algorithm for maximum flows, due to Edmonds and Karp [2] , requires augmentations (also see [1, Sec. 7.3] ). Our algorithm can be regarded as acceleration of the Edmonds-Karp algorithm. The present note is rather educative but could stimulate further research on maximum flows and applications of MA ordering. 2. A maximum flow algorithm Let be a flow network, where G =( V , A ) is a directed graph with a vertex set V and an arc set A , s + ∈ V an entrance (or a source), s − ∈ V an exit (or a sink), and a capacity function taking on nonnegative integers. A function is called a flow in if it satisfies (a) (Capacity constraints) (b) (Flow conservation) , where for each v ∈ V For a flow ϕ in the value of flow ϕ is defined to be ∂ϕ ( s + )(=− ∂ϕ ( s − )) and is denoted by . A maximum flow is a flow of maximum value.