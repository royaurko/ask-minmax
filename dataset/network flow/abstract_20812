Erasure codes are an efficient means of storing data across a network in
comparison to data replication, as they tend to reduce the amount of data
stored in the network and offer increased resilience in the presence of node
failures. The codes perform poorly though, when repair of a failed node is
called for, as they typically require the entire file to be downloaded to
repair a failed node. A new class of erasure codes, termed as regenerating
codes were recently introduced, that do much better in this respect. However,
given the variety of efficient erasure codes available in the literature, there
is considerable interest in the construction of coding schemes that would
enable traditional erasure codes to be used, while retaining the feature that
only a fraction of the data need be downloaded for node repair. In this paper,
we present a simple, yet powerful, framework that does precisely this. Under
this framework, the nodes are partitioned into two 'types' and encoded using
two codes in a manner that reduces the problem of node-repair to that of
erasure-decoding of the constituent codes. Depending upon the choice of the two
codes, the framework can be used to avail one or more of the following
advantages: simultaneous minimization of storage space and repair-bandwidth,
low complexity of operation, fewer disk reads at helper nodes during repair,
and error detection and correction.