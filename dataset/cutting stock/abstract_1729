The vast majority of the long tail of scientific software, the myriads of
tools that implement the many analysis and visualization methods for different
scientific fields, is highly specialized, purpose-built for a research project,
and has to rely on community uptake and reuse for its continued development and
maintenance. Although uptake cannot be controlled over even guaranteed, some of
the key factors that influence whether new users or developers decide to adopt
an existing tool or start a new one are about how easy or difficult it is to
use or enhance a tool for a purpose for which it was not originally designed.
The science of software engineering has produced techniques and practices that
would reduce or remove a variety of barriers to community uptake of software,
but for a variety of reasons employing trained software engineers as part of
the development of long tail scientific software has proven to be challenging.
As a consequence, community uptake of long tail tools is often far more
difficult than it would need to be, even though opportunities for reuse abound.
We discuss likely reasons why employing software engineering in the long tail
is challenging, and propose that many of those obstacles could be addressed in
the form of a cross-cutting non-profit center of excellence that makes software
engineering broadly accessible as a shared service, conceptually and in its
effect similar to shared instrumentation.