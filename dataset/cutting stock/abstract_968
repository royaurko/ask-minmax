In this paper we propose a new approach to the description of a network of
interacting processes in a traditional programming language. Special
programming languages or extensions to sequential languages are usually
designed to express the semantics of concurrent execution. Using libraries in
C++, Java, C#, and other languages is more practical way of concurrent
programming. However, this method leads to an increase in workload of a manual
coding. Besides, stock compilers can not detect semantic errors related to the
programming model in such libraries. The new markup language and a special
technique of automatic programming based on the marked code can solve these
problems. The article provides a detailed specification of the markup language
without discussing its implementation details. The language is used for
programming of current and prospective multi-core and many-core systems.