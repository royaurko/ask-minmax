We consider the problem of designing a set of computational agents so that as
they all pursue their self-interests a global function G of the collective
system is optimized. Three factors govern the quality of such design. The first
relates to conventional exploration-exploitation search algorithms for finding
the maxima of such a global function, e.g., simulated annealing. Game-theoretic
algorithms instead are related to the second of those factors, and the third is
related to techniques from the field of machine learning. Here we demonstrate
how to exploit all three factors by modifying the search algorithm's
exploration stage so that rather than by random sampling, each coordinate of
the underlying search space is controlled by an associated
machine-learning-based ``player'' engaged in a non-cooperative game.
Experiments demonstrate that this modification improves SA by up to an order of
magnitude for bin-packing and for a model of an economic process run over an
underlying network. These experiments also reveal novel small worlds phenomena.