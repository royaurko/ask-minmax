We study the design of polylogarithmic depth algorithms for approximately
solving packing and covering semidefinite programs (or positive SDPs for
short). This is a natural SDP generalization of the well-studied positive LP
problem.
  Although positive LPs can be solved in polylogarithmic depth while using only
$\log^{2} n/\varepsilon^3$ parallelizable iterations [3], the best known
positive SDP solvers due to Jain and Yao [18] require $\log^{14} n
/\varepsilon^{13}$ parallelizable iterations. Several alternative solvers have
been proposed to reduce the exponents in the number of iterations [19, 29].
However, the correctness of the convergence analyses in these works has been
called into question [29], as they both rely on algebraic monotonicity
properties that do not generalize to matrix algebra.
  In this paper, we propose a very simple algorithm based on the optimization
framework proposed in [3] for LP solvers. Our algorithm only needs $\log^2 n /
\varepsilon^3$ iterations, matching that of the best LP solver. To surmount the
obstacles encountered by previous approaches, our analysis requires a new
matrix inequality that extends Lieb-Thirring's inequality, and a
sign-consistent, randomized variant of the gradient truncation technique
proposed in [2, 3].