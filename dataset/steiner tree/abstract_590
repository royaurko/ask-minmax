Computing the Newton step for a generic function $f: \mathbb{R}^n \rightarrow
\mathbb{R}$ takes $O(n^{3})$ flops. In this paper we explore avenues for
reducing this bound, when the computational structure of $f$ is known. We show
that the Newton step can be computed in time linear in the size of the
computational-graph, and cubic in its tree-width. We also generalize the
algorithm to constrained systems.