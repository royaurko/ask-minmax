We develop a novel distributed algorithm for the minimum cut problem. We
primarily aim at solving large sparse problems. Assuming vertices of the graph
are partitioned into several regions, the algorithm performs path augmentations
inside the regions and updates of the push-relabel style between the regions.
The interaction between regions is considered expensive (regions are loaded
into the memory one-by-one or located on separate machines in a network). The
algorithm works in sweeps - passes over all regions. Let $B$ be the set of
vertices incident to inter-region edges of the graph. We present a sequential
and parallel versions of the algorithm which terminate in at most $2|B|^2+1$
sweeps. The competing algorithm by Delong and Boykov uses push-relabel updates
inside regions. In the case of a fixed partition we prove that this algorithm
has a tight $O(n^2)$ bound on the number of sweeps, where $n$ is the number of
vertices. We tested sequential versions of the algorithms on instances of
maxflow problems in computer vision. Experimentally, the number of sweeps
required by the new algorithm is much lower than for the Delong and Boykov's
variant. Large problems (up to $10^8$ vertices and $6\cdot 10^8$ edges) are
solved using under 1GB of memory in about 10 sweeps.