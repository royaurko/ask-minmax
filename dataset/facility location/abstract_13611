Early stages of system development involve outlining desired features such as
functionality, availability, or usability. Specifications are derived from
these features that concretize vague ideas presented in natural languages. The
challenge for the validation of specifications arises from the syntax and
semantic gap between different representations and the need of automatic tools.
In this paper, we present a requirement-consistency maintenance framework to
produce consistent representations. The first part is the automatic translation
from natural languages describing functionalities to formal logic with an
abstraction of time. It extends pure syntactic parsing by adding semantic
reasoning and the support of partitioning input and output variables. The
second part is the use of synthesis techniques to examine if the requirements
are consistent in terms of realizability. When the process fails, the formulas
that cause the inconsistency are reported to locate the problem.