Consider a set of items and a set of $m$ colors, where each item is
associated to one color. Consider also $n$ computational agents connected by a
ring. Each agent holds a subset of the items and items of the same color can be
held by different agents. We analyze the problem of distributively assigning
colors to agents in such a way that (a) each color is assigned to one agent
only and (b) the number of different colors assigned to each agent is minimum.
Since any color assignment requires the items be distributed according to it
(e.g. all items of the same color are to be held by only one agent), we define
the cost of a color assignment as the amount of items that need to be moved,
given an initial allocation. We first show that any distributed algorithm for
this problem requires a message complexity of $\Omega(n\cdot m)$ and then we
exhibit an optimal message complexity algorithm for synchronous rings that in
polynomial time determines a color assignment with cost at most three times the
optimal. We also discuss solutions for the asynchronous setting. Finally, we
show how to get a better cost solution at the expenses of either the message or
the time complexity.