We present an architecture of a hosting system consisting of a set of hosted
Web Services subject to QoS constraints, and a certain number of servers used
to run users demand. The traffic is session-based, while provider and users
agree on SLAs specifying the expected level of service performance such that
the service provider is liable to compensate his/her customers if the level of
performance is not satisfactory. The system is driven by a utility function
which tries to optimize the average earned revenue per unit time. The
middleware collects demand and performance statistics, and estimates traffic
parameters in order to make dynamic decisions concerning server allocation and
admission control. We empirically evaluate the effects of admission policies,
resource allocation and service differentiation schemes on the achieved
revenues, and we find that our system is robust enough to successfully deal
with session-based traffic under different conditions.