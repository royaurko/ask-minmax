We show that for one-shot problems - problems where a processor executes a
single operation-execution - timing constraints can be captured by conditions
on the relation between original outputs and supplementary snapshots. In
addition to the dictionary definition of the word snapshot, in distributed
computing snapshots also stand for a task that imposes relation among sets
which are output of processors. Hence, constrains relating the timing between
operation-executions of processors can be captured by the sets relation
representing a task.
  This allows to bring to bear techniques developed for tasks, to one-shot
objects. In particular, for the one-shot case the question of linearizability
is moot. Nevertheless, current proof techniques of object implementation
require the prover to provide linearization-points even in the one shot case.
Transforming the object into a task relieves the prover of an implementation
from the burden of finding the "linearization-points," since if the task is
solvable, linearization points are guaranteed to exist. We exhibit this
advantage with a new algorithm to implement MWMR register in a SWMR system.