In this paper I present a conjecture for a recursive algorithm that finds
each permutation of combining two sets of objects (AKA the Shuffle Product).
This algorithm provides an efficient way to navigate this problem, as each
atomic operation yields a permutation of the union. The permutations of the
union of the two sets are represented as binary integers which are then
manipulated mathematically to find the next permutation. The routes taken to
find each of the permutations then form a series of associations or adjacencies
which can be represented in a tree graph which appears to possess some
properties of a fractal.
  This algorithm was discovered while attempting to identify every possible
end-state of a Tic-Tac-Toe (Naughts and Crosses) board. It was found to be a
viable and efficient solution to the problem, and now---in its more generalized
state---it is my belief that it may find applications among a wide range of
theoretical and applied sciences.
  I hypothesize that, due to the fractal-like nature of the tree it traverses,
this algorithm sheds light on a more generic principle of combinatorics and as
such could be further generalized to perhaps be applied to the union of any
number of sets.