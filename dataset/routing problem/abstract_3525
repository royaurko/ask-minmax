Designing component-based constraint solvers is a complex problem. Some
components are required, some are optional and there are interdependencies
between the components. Because of this, previous approaches to solver design
and modification have been ad-hoc and limited. We present a system that
transforms a description of the components and the characteristics of the
target constraint solver into a constraint problem. Solving this problem yields
the description of a valid solver. Our approach represents a significant step
towards the automated design and synthesis of constraint solvers that are
specialised for individual constraint problem classes or instances.