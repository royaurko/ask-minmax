Task allocation problems have traditionally focused on cost optimization.
However, more and more attention is being given to cases in which cost should
not always be the sole or major consideration. In this paper, we study a fair
task allocation problem where an optimal allocation not only has low cost but
more importantly, it is max-lexmin fair to all participants. To tackle this
max-lexmin fair minimum cost allocation problem, we analyze and solve it in two
parts. We first aim to determine the maximum number of jobs that can be
feasibly done and the fairest distribution thereof. Since there may be many
allocations that are considered equally fair, we then find the allocation with
the minimum costs. We propose two novel polynomial-time algorithms that make
use of the network flow structure of the problem to obtain the optimal
solution. Furthermore, we conduct extensive experiments to investigate the
trade-off between cost minimization and fairness.