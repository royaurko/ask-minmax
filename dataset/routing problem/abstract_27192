Rank aggregation is an essential approach for aggregating the preferences of
multiple agents. One rule of particular interest is the Kemeny rule, which
maximises the number of pairwise agreements between the final ranking and the
existing rankings. However, Kemeny rankings are NP-hard to compute. This has
resulted in the development of various algorithms. Fortunately, NP-hardness may
not reflect the difficulty of solving problems that arise in practice. As a
result, we aim to demonstrate that the Kemeny consensus can be computed
efficiently when aggregating different rankings in real case. In this paper, we
extend a dynamic programming algorithm originally for Kemeny scores. We also
provide details on the implementation of the algorithm. Finally, we present
results obtained from an empirical comparison of our algorithm and two other
popular algorithms based on real world and randomly generated problem
instances. Experimental results show the usefulness and efficiency of the
algorithm in practical settings.