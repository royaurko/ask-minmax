We consider a multi-organizational system in which each organization
contributes processors to the global pool but also jobs to be processed on the
common resources. The fairness of the scheduling algorithm is essential for the
stability and even for the existence of such systems (as organizations may
refuse to join an unfair system).
  We consider on-line, non-clairvoyant scheduling of sequential jobs. The
started jobs cannot be stopped, canceled, preempted, or moved to other
processors. We consider identical processors, but most of our results can be
extended to related or unrelated processors.
  We model the fair scheduling problem as a cooperative game and we use the
Shapley value to determine the ideal fair schedule. In contrast to the current
literature, we do not use money to assess the relative utilities of jobs.
Instead, to calculate the contribution of an organization, we determine how the
presence of this organization influences the performance of other
organizations. Our approach can be used with arbitrary utility function (e.g.,
flow time, tardiness, resource utilization), but we argue that the utility
function should be strategy resilient. The organizations should be discouraged
from splitting, merging or delaying their jobs. We present the unique (to
within a multiplicative and additive constants) strategy resilient utility
function.
  We show that the problem of fair scheduling is NP-hard and hard to
approximate. However, for unit-size jobs, we present an FPRAS. Also, we show
that the problem parametrized with the number of organizations is FPT. Although
for the large number of the organizations the problem is computationally hard,
the presented exponential algorithm can be used as a fairness benchmark.