Peer to peer (P2P) systems are moving from application specific architectures
to a generic service oriented design philosophy. This raises interesting
problems in connection with providing useful P2P middleware services that are
capable of dealing with resource assignment and management in a large-scale,
heterogeneous and unreliable environment. One such service, the slicing
service, has been proposed to allow for an automatic partitioning of P2P
networks into groups (slices) that represent a controllable amount of some
resource and that are also relatively homogeneous with respect to that
resource, in the face of churn and other failures. In this report we propose
two algorithms to solve the distributed slicing problem. The first algorithm
improves upon an existing algorithm that is based on gossip-based sorting of a
set of uniform random numbers. We speed up convergence via a heuristic for
gossip peer selection. The second algorithm is based on a different approach:
statistical approximation of the rank of nodes in the ordering. The
scalability, efficiency and resilience to dynamics of both algorithms relies on
their gossip-based models. We present theoretical and experimental results to
prove the viability of these algorithms.