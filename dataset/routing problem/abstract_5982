We consider the problem of minimizing the total cost to run a sequence of $n$
tasks in the given order by $k$ agents under the positional cost model. The
cost to run a task not only depends on the intrinsic cost of the task itself,
but also monotonically related to the position this task is in the working list
of the agent assigned. Such a positional effect can naturally arise from the
classic sum-of-completion-time minimization problems, and is also well
motivated by the varying efficiency when an agent works in reality (such as due
to the learning effects or deteriorating effects). Also, it can be seen as a
deterministic variant of the classic Baysian sequential decision making
problems. This paper presents a simple and practical algorithm that runs in
$O(k^2 n)$ time and minimizes the total cost of any problem instance consisting
of two task types. The algorithm works by making greedy decision for each task
sequentially based on some stopping thresholds in a "greedy-like" allocation
simulation -- a working style coinciding with Gittins' optimal-stopping based
algorithm for the classic Baysian multi-armed bandit problem.