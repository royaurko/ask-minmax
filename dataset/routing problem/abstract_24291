The chase procedure, an algorithm proposed 25+ years ago to fix constraint
violations in database instances, has been successfully applied in a variety of
contexts, such as query optimization, data exchange, and data integration. Its
practicability, however, is limited by the fact that - for an arbitrary set of
constraints - it might not terminate; even worse, chase termination is an
undecidable problem in general. In response, the database community has
proposed sufficient restrictions on top of the constraints that guarantee chase
termination on any database instance. In this paper, we propose a novel
sufficient termination condition, called inductive restriction, which strictly
generalizes previous conditions, but can be checked as efficiently.
Furthermore, we motivate and study the problem of data-dependent chase
termination and, as a key result, present sufficient termination conditions
w.r.t. fixed instances. They are strictly more general than inductive
restriction and might guarantee termination although the chase does not
terminate in the general case.