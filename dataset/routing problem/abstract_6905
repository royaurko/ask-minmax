End-user programmers create software to solve problems, yet the
problem-solving knowledge generated in the process often remains tacit within
the software artifact. One approach to exposing this knowledge is to enable the
end-user to annotate the artifact as they create and use it. A 3-level model of
annotation is presented and guidelines are proposed for the design of end-user
programming environments supporting the explicit and literate annotation
levels. These guidelines are then applied to the spreadsheet end-user
programming paradigm.