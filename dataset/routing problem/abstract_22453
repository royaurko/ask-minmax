Evolving one-dimensional cellular automata (CAs) with genetic algorithms has
provided insight into how improved performance on a task requiring global
coordination emerges when only local interactions are possible. Two approaches
that can affect the search efficiency of the genetic algorithm are coevolution,
in which a population of problems---in our case, initial configurations of the
CA lattice---evolves along with the population of CAs; and resource sharing, in
which a greater proportion of a limited fitness resource is assigned to those
CAs which correctly solve problems that fewer other CAs in the population can
solve. Here we present evidence that, in contrast to what has been suggested
elsewhere, the improvements observed when both techniques are used together
depend largely on resource sharing alone.