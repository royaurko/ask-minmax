What is called "numerical reproducibility" is the problem of getting the same
result when the scientific computation is run several times, either on the same
machine or on different machines, with different types and numbers of
processing units, execution environments, computational loads etc. This problem
is especially stringent for HPC numerical simulations. In what follows, the
focus is on parallel implementations of interval arithmetic using
floating-point arithmetic. For interval computations, numerical reproducibility
is of course an issue for testing and debugging purposes. However, as long as
the computed result encloses the exact and unknown result, the inclusion
property, which is the main property of interval arithmetic, is satisfied and
getting bit for bit identical results may not be crucial. Still, implementation
issues may invalidate the inclusion property. Several ways to preserve the
inclusion property are presented, on the example of the product of matrices
with interval coefficients.