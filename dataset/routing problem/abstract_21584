In a generic switching problem, a switching pattern consists of a one-to-one
mapping from a set of inputs to a set of outputs (i.e., a permutation). We
propose and investigate a wireless switching framework in which a multi-antenna
relay is responsible for switching traffic among a set of $N$ stations. We
refer to such a relay as a MIMO switch. With beamforming and linear detection,
the MIMO switch controls which stations are connected to which other stations.
Each beamforming matrix realizes a permutation pattern among the stations. We
refer to the corresponding permutation matrix as a switch matrix. By scheduling
a set of different switch matrices, full connectivity among the stations can be
established. In this paper, we focus on "fair switching" in which equal amounts
of traffic are to be delivered for all $N(N-1)$ ordered pairs of stations. In
particular, we investigate how the system throughput can be maximized. In
general, for large $N$ the number of possible switch matrices (i.e.,
permutations) is huge, making the scheduling problem combinatorially
challenging. We show that for the cases of N=4 and 5, only a subset of $N-1$
switch matrices need to be considered in the scheduling problem to achieve good
throughput. We conjecture that this will be the case for large $N$ as well.
This conjecture, if valid, implies that for practical purposes, fair-switching
scheduling is not an intractable problem. We also investigate MIMO switching
with physical-layer network coding in this paper. We find that it can improve
throughput appreciably.