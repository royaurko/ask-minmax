The satisfiability problem for SPARQL patterns is undecidable in general,
since the expressive power of SPARQL 1.0 is comparable with that of the
relational algebra. The goal of this paper is to delineate the boundary of
decidability of satisfiability in terms of the constraints allowed in filter
conditions. The classes of constraints considered are bound-constraints,
negated bound-constraints, equalities, nonequalities, constant-equalities, and
constant-nonequalities. The main result of the paper can be summarized by
saying that, as soon as inconsistent filter conditions can be formed,
satisfiability is undecidable. The key insight in each case is to find a way to
emulate the set difference operation. Undecidability can then be obtained from
a known undecidability result for the algebra of binary relations with union,
composition, and set difference. When no inconsistent filter conditions can be
formed, satisfiability is efficiently decidable by simple checks on bound
variables and on the use of literals. The paper also points out that
satisfiability for the so-called `well-designed' patterns can be decided by a
check on bound variables and a check for inconsistent filter conditions.