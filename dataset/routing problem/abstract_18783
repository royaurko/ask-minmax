New advances in large scale distributed systems have amazingly offered
complex functionalities through parallelism of simple and rudimentary
components. The key issue in cooperative control of multi-agent systems is the
synthesis of local control and interaction rules among the agents such that the
entire controlled system achieves a desired global behavior. For this purpose,
three fundamental problems have to be addressed: (1) task decomposition for
top-down design, such that the fulfillment of local tasks guarantees the
satisfaction of the global task, by the team; (2) fault-tolerant top-down
design, such that the global task remains decomposable and achievable, in spite
of some failures, and (3) design of interactions among agents to make an
undecomposable task decomposable and achievable in a top-down framework. The
first two problems have been addressed in our previous works, by identifying
necessary and sufficient conditions for task automaton decomposition, and
fault-tolerant task decomposability. This paper deals with the third problem
and proposes a procedure to redistribute the events among agents in order to
enforce decomposability of an undecomposable task automaton. The
decomposability conditions are used to identify the root causes of
undecomposability which are found to be due to over-communications that have to
be deleted, while respecting the fault-tolerant decomposability conditions; or
because of the lack of communications that require new sharing of events, while
considering new violations of decomposability conditions. This result provides
a sufficient condition to make any undecomposable deterministic task automaton
decomposable in order to facilitate cooperative tasking. Illustrative examples
are presented to show the concept of task automaton decomposabilization.