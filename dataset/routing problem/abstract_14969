In massively collaborative projects such as scientific or community
databases, users often need to agree or disagree on the content of individual
data items. On the other hand, trust relationships often exist between users,
allowing them to accept or reject other users' beliefs by default. As those
trust relationships become complex, however, it becomes difficult to define and
compute a consistent snapshot of the conflicting information. Previous
solutions to a related problem, the update reconciliation problem, are
dependent on the order in which the updates are processed and, therefore, do
not guarantee a globally consistent snapshot. This paper proposes the first
principled solution to the automatic conflict resolution problem in a community
database. Our semantics is based on the certain tuples of all stable models of
a logic program. While evaluating stable models in general is well known to be
hard, even for very simple logic programs, we show that the conflict resolution
problem admits a PTIME solution. To the best of our knowledge, ours is the
first PTIME algorithm that allows conflict resolution in a principled way. We
further discuss extensions to negative beliefs and prove that some of these
extensions are hard. This work is done in the context of the BeliefDB project
at the University of Washington, which focuses on the efficient management of
conflicts in community databases.