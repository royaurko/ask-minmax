In this paper, we revisit the view update problem in a relational setting and
propose a framework based on the notion of determinacy under constraints.
Within such a framework, we characterise when a view mapping is invertible,
establishing that this is the case precisely when each database symbol has an
exact rewriting in terms of the view symbols under the given constraints, and
we provide a general effective criterion to understand whether the changes
introduced by a view update can be propagated to the underlying database
relations in a unique and unambiguous way.
  Afterwards, we show how determinacy under constraints can be checked, and
rewritings effectively found, in three different relevant scenarios in the
absence of view constraints. First, we settle the long-standing open issue of
how to solve the view update problem in a multi-relational database with views
that are projections of joins of relations, and we do so in a more general
setting where views are defined by arbitrary conjunctive queries and database
constraints are stratified embedded dependencies. Next, we study a setting
based on horizontal decompositions of a single database relation, where views
are defined by selections on possibly interpreted attributes (e.g., arithmetic
comparisons) in the presence of domain constraints over the database schema.
Lastly, we look into another multi-relational database setting, where views are
defined in an expressive "Type" Relational Algebra based on the n-ary
Description Logic DLR and database constraints are inclusions of expressions in
that algebra.