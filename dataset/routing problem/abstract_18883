Advances in processing capacity, coupled with the desire to tackle problems
where a human subjective judgment plays an important role in determining the
value of a proposed solution, has led to a dramatic rise in the number of
applications of Interactive Artificial Intelligence. Of particular note is the
coupling of meta-heuristic search engines with user-provided evaluation and
rating of solutions, usually in the form of Interactive Evolutionary Algorithms
(IEAs). These have a well-documented history of successes, but arguably the
preponderance of IEAs stems from this history, rather than as a conscious
design choice of meta-heuristic based on the characteristics of the problem at
hand. This paper sets out to examine the basis for that assumption, taking as a
case study the domain of interactive software design. We consider a range of
factors that should affect the design choice including ease of use,
scalability, and of course, performance, i.e. that ability to generate good
solutions within the limited number of evaluations available in interactive
work before humans lose focus. We then evaluate three methods, namely greedy
local search, an evolutionary algorithm and ant colony optimization, with a
variety of representations for candidate solutions. Results show that after
suitable parameter tuning, ant colony optimization is highly effective within
interactive search and out-performs evolutionary algorithms with respect to
increasing numbers of attributes and methods in the software design problem.
However, when larger numbers of classes are present in the software design, an
evolutionary algorithm using a naive grouping integer-based representation
appears more scalable.