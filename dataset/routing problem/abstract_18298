Provided that there is no theoretical frame for complex engineered systems
(CES) as yet, this paper claims that bio-inspired engineering can help provide
such a frame. Within CES bio-inspired systems play a key role. The disclosure
from bio-inspired systems and biological computation has not been sufficiently
worked out, however. Biological computation is to be taken as the processing of
information by living systems that is carried out in polynomial time, i.e.,
efficiently; such processing however is grasped by current science and research
as an intractable problem (for instance, the protein folding problem). A remark
is needed here: P versus NP problems should be well defined and delimited but
biological computation problems are not. The shift from conventional
engineering to bio-inspired engineering needs bring the subject (or problem) of
computability to a new level. Within the frame of computation, so far, the
prevailing paradigm is still the Turing-Church thesis. In other words,
conventional engineering is still ruled by the Church-Turing thesis (CTt).
However, CES is ruled by CTt, too. Contrarily to the above, we shall argue here
that biological computation demands a more careful thinking that leads us
towards hypercomputation. Bio-inspired engineering and CES thereafter, must
turn its regard toward biological computation. Thus, biological computation can
and should be taken as the ground for engineering complex non-linear systems.
Biological systems do compute in terms of hypercomputation, indeed. If so, then
the focus is not algorithmic or computational complexity but
computation-beyond-the-Church-Turing-barrier. We claim that we need a new
computational theory that encompasses biological processes wherein the
Turing-Church thesis is but a particular case.