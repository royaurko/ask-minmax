Constraint programming can definitely be seen as a model-driven paradigm. The
users write programs for modeling problems. These programs are mapped to
executable models to calculate the solutions. This paper focuses on efficient
model management (definition and transformation). From this point of view, we
propose to revisit the design of constraint-programming systems. A model-driven
architecture is introduced to map solving-independent constraint models to
solving-dependent decision models. Several important questions are examined,
such as the need for a visual highlevel modeling language, and the quality of
metamodeling techniques to implement the transformations. A main result is the
s-COMMA platform that efficiently implements the chain from modeling to solving
constraint problems