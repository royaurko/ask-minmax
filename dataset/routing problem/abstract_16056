The problem of detecting of information and logically independent (DILD)
steps in programs is a key for equivalent program transformations. Here we are
considering the problem of independence of loop iterations, the concentration
of massive data processing and hence the most challenge construction for
parallelizing. We introduced a separated form of loops when loop's body is a
sequence of procedures each of them are used array's elements selected in a
previous procedure. We prove that any loop may be algorithmically represented
in this form and number of such procedures is invariant. We show that for this
form of loop the steps connections are determined with some integer equations
and hence the independence problem is algorithmically unsolvable if index
expressions are more complex than cubical. We suggest a modification of index
semantics that made connection equations trivial and loops iterations can be
executed in parallel.