The Workflow Satisfiability Problem (WSP) is a problem of practical interest
that arises whenever tasks need to be performed by contributorized users, subject to
constraints defined by business rules. We are required to decide whether there
exists a plan -- an assignment of tasks to contributorized users -- such that all
constraints are satisfied.
  The WSP is, in fact, the conservative Constraint Satisfaction Problem (i.e.,
for each variable, here called task, we have a unary contributorization constraint)
and is, thus, NP-complete. It was observed by Wang and Li (2010) that the
number k of tasks is often quite small and so can be used as a parameter, and
several subsequent works have studied the parameterized complexity of WSP
regarding parameter k.
  We take a more detailed look at the kernelization complexity of WSP(\Gamma)
when \Gamma\ denotes a finite or infinite set of allowed constraints. Our main
result is a dichotomy for the case that all constraints in \Gamma\ are regular:
(1) We are able to reduce the number n of users to n' <= k. This entails a
kernelization to size poly(k) for finite \Gamma, and, under mild technical
conditions, to size poly(k+m) for infinite \Gamma, where m denotes the number
of constraints. (2) Already WSP(R) for some R \in \Gamma\ allows no polynomial
kernelization in k+m unless the polynomial hierarchy collapses.