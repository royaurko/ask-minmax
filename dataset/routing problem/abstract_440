We have a set of processors (or agents) and a set of graph networks defined
over some vertex set. Each processor can access a subset of the graph networks.
Each processor has a demand specified as a pair of vertices $<u, v>$, along
with a profit; the processor wishes to send data between $u$ and $v$. Towards
that goal, the processor needs to select a graph network accessible to it and a
path connecting $u$ and $v$ within the selected network. The processor requires
exclusive access to the chosen path, in order to route the data. Thus, the
processors are competing for routes/channels. A feasible solution selects a
subset of demands and schedules each selected demand on a graph network
accessible to the processor owning the demand; the solution also specifies the
paths to use for this purpose. The requirement is that for any two demands
scheduled on the same graph network, their chosen paths must be edge disjoint.
The goal is to output a solution having the maximum aggregate profit. Prior
work has addressed the above problem in a distibuted setting for the special
case where all the graph networks are simply paths (i.e, line-networks).
Distributed constant factor approximation algorithms are known for this case.
  The main contributions of this paper are twofold. First we design a
distributed constant factor approximation algorithm for the more general case
of tree-networks. The core component of our algorithm is a tree-decomposition
technique, which may be of independent interest. Secondly, for the case of
line-networks, we improve the known approximation guarantees by a factor of 5.
Our algorithms can also handle the capacitated scenario, wherein the demands
and edges have bandwidth requirements and capacities, respectively.