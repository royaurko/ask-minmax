Functional dependencies (FDs) specify the intended data semantics while
violations of FDs indicate deviation from these semantics. In this paper, we
study a data cleaning problem in which the FDs may not be completely correct,
e.g., due to data evolution or incomplete knowledge of the data semantics. We
argue that the notion of relative trust is a crucial aspect of this problem: if
the FDs are outdated, we should modify them to fit the data, but if we suspect
that there are problems with the data, we should modify the data to fit the
FDs. In practice, it is usually unclear how much to trust the data versus the
FDs. To address this problem, we propose an algorithm for generating
non-redundant solutions (i.e., simultaneous modifications of the data and the
FDs) corresponding to various levels of relative trust. This can help users
determine the best way to modify their data and/or FDs to achieve consistency.