We study a natural online variant of the replacement path problem. The
\textit{replacement path problem} asks to find for a given graph $G = (V,E)$,
two designated vertices $s,t\in V$ and a shortest $s$-$t$ path $P$ in $G$, a
\textit{replacement path} $P_e$ for every edge $e$ on the path $P$. The
replacement path $P_e$ is simply a shortest $s$-$t$ path in the graph, which
avoids the \textit{failed} edge $e$. We adapt this problem to deal with the
natural scenario, that the edge which failed is not known at the time of
solution implementation. Instead, our problem assumes that the identity of the
failed edge only becomes available when the routing mechanism tries to cross
the edge. This situation is motivated by applications in distributed networks,
where information about recent changes in the network is only stored locally,
and fault-tolerant optimization, where an adversary tries to delay the
discovery of the materialized scenario as much as possible. Consequently, we
define the \textit{online replacement path problem}, which asks to find a
nominal $s$-$t$ path $Q$ and detours $Q_e$ for every edge on the path $Q$, such
that the worst-case arrival time at the destination is minimized. Our main
contribution is a label setting algorithm, which solves the problem in
undirected graphs in time $O(m \log n)$ and linear space for all sources and a
single destination. We also present algorithms for extensions of the model to
any bounded number of failed edges.