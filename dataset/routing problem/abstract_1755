The logic for handling of application requests to a staged, event-driven
architecture is often distributed over different portions of the source code.
This complicates changing and understanding the flow of events in the system.
The article presents an approach that extracts request handling logic from
regular stage functionality into a set of request scripts. These scripts are
executed step-wise by sending continuations that encapsulate their request's
current execution state to stages for local processing and optional forwarding
of follow-up continuations. A new internal domain specific language (DSL) that
aims to simplify writing of request scripts is described along with its
implementation for the scala actors library. Evaluation results indicate that
request handling with actor continuations performs about equally or better
compared to using separate stages for request handling logic for scripts of at
least 3 sequential steps.