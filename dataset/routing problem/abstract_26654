In real-time strategy games like StarCraft, skilled players often block the
entrance to their base with buildings to prevent the opponent's units from
getting inside. This technique, called "walling-in", is a vital part of
player's skill set, allowing him to survive early aggression. However, current
artificial players (bots) do not possess this skill, due to numerous
inconveniences surfacing during its implementation in imperative languages like
C++ or Java. In this text, written as a guide for bot programmers, we address
the problem of finding an appropriate building placement that would block the
entrance to player's base, and present a ready to use declarative solution
employing the paradigm of answer set programming (ASP). We also encourage the
readers to experiment with different declarative approaches to this problem.