The dictionary matching problem preprocesses a set of patterns and finds all
occurrences of each of the patterns in a text when it is provided. We focus on
the dynamic setting, in which patterns can be inserted to and removed from the
dictionary, without reprocessing the entire dictionary. This article presents
the first algorithm that performs \emph{dynamic} dictionary matching on
two-dimensional data within small space. The time complexity of our algorithm
is almost linear. The only slowdown is incurred by querying the compressed
self-index that replaces the dictionary. The dictionary is updated in time
proportional to the size of the pattern that is being inserted to or removed
from the dictionary. Our algorithm is suitable for rectangular patterns that
are of uniform size in one dimension.